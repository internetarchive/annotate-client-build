{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/classnames/index.js",
    "node_modules/dompurify/dist/purify.js",
    "node_modules/escape-html/index.js",
    "node_modules/escape-string-regexp/index.js",
    "node_modules/focus-visible/dist/focus-visible.js",
    "node_modules/lodash.debounce/index.js",
    "node_modules/preact/dist/preact.js",
    "node_modules/preact/hooks/dist/hooks.js",
    "node_modules/prop-types/factoryWithThrowingShims.js",
    "node_modules/prop-types/index.js",
    "node_modules/prop-types/lib/ReactPropTypesSecret.js",
    "node_modules/query-string/index.js",
    "node_modules/redux-thunk/lib/index.js",
    "node_modules/redux/lib/redux.js",
    "node_modules/reselect/lib/index.js",
    "node_modules/retry/index.js",
    "node_modules/retry/lib/retry.js",
    "node_modules/retry/lib/retry_operation.js",
    "node_modules/scroll-into-view/scrollIntoView.js",
    "node_modules/shallowequal/index.js",
    "node_modules/strict-uri-encode/index.js",
    "node_modules/symbol-observable/lib/index.js",
    "node_modules/symbol-observable/lib/ponyfill.js",
    "node_modules/tiny-emitter/index.js",
    "src/images/icons/add.svg",
    "src/images/icons/annotate.svg",
    "src/images/icons/arrow-left.svg",
    "src/images/icons/arrow-right.svg",
    "src/images/icons/cancel.svg",
    "src/images/icons/caret-right.svg",
    "src/images/icons/cc-std.svg",
    "src/images/icons/cc-zero.svg",
    "src/images/icons/check.svg",
    "src/images/icons/collapse-menu.svg",
    "src/images/icons/collapsed.svg",
    "src/images/icons/copy.svg",
    "src/images/icons/cursor.svg",
    "src/images/icons/edit.svg",
    "src/images/icons/email.svg",
    "src/images/icons/expand-menu.svg",
    "src/images/icons/external.svg",
    "src/images/icons/facebook.svg",
    "src/images/icons/flag--active.svg",
    "src/images/icons/flag.svg",
    "src/images/icons/format-bold.svg",
    "src/images/icons/format-functions.svg",
    "src/images/icons/format-italic.svg",
    "src/images/icons/format-list-numbered.svg",
    "src/images/icons/format-list-unordered.svg",
    "src/images/icons/format-quote.svg",
    "src/images/icons/groups.svg",
    "src/images/icons/help.svg",
    "src/images/icons/highlight.svg",
    "src/images/icons/image.svg",
    "src/images/icons/leave.svg",
    "src/images/icons/link.svg",
    "src/images/icons/lock.svg",
    "src/images/icons/logo.svg",
    "src/images/icons/pointer.svg",
    "src/images/icons/profile.svg",
    "src/images/icons/public.svg",
    "src/images/icons/refresh.svg",
    "src/images/icons/reply.svg",
    "src/images/icons/restricted.svg",
    "src/images/icons/search.svg",
    "src/images/icons/share.svg",
    "src/images/icons/sort.svg",
    "src/images/icons/trash.svg",
    "src/images/icons/twitter.svg",
    "src/shared/bridge-events.js",
    "src/shared/bridge.js",
    "src/shared/browser-compatibility-utils.js",
    "src/shared/components/svg-icon.js",
    "src/shared/discovery.js",
    "src/shared/dom-element.js",
    "src/shared/frame-rpc.js",
    "src/shared/injector.js",
    "src/shared/renderer-options.js",
    "src/shared/settings.js",
    "src/shared/type-coercions.js",
    "src/shared/user-agent.js",
    "src/shared/warn-once.js",
    "src/sidebar/components/annotation-action-bar.js",
    "src/sidebar/components/annotation-body.js",
    "src/sidebar/components/annotation-document-info.js",
    "src/sidebar/components/annotation-header.js",
    "src/sidebar/components/annotation-license.js",
    "src/sidebar/components/annotation-publish-control.js",
    "src/sidebar/components/annotation-quote.js",
    "src/sidebar/components/annotation-share-control.js",
    "src/sidebar/components/annotation-share-info.js",
    "src/sidebar/components/annotation-user.js",
    "src/sidebar/components/annotation-viewer-content.js",
    "src/sidebar/components/annotation.js",
    "src/sidebar/components/autocomplete-list.js",
    "src/sidebar/components/button.js",
    "src/sidebar/components/excerpt.js",
    "src/sidebar/components/filter-status.js",
    "src/sidebar/components/group-list-item.js",
    "src/sidebar/components/group-list-section.js",
    "src/sidebar/components/group-list.js",
    "src/sidebar/components/help-panel.js",
    "src/sidebar/components/hooks/use-element-should-close.js",
    "src/sidebar/components/hooks/use-root-thread.js",
    "src/sidebar/components/hypothesis-app.js",
    "src/sidebar/components/logged-out-message.js",
    "src/sidebar/components/login-prompt-panel.js",
    "src/sidebar/components/markdown-editor.js",
    "src/sidebar/components/markdown-view.js",
    "src/sidebar/components/menu-item.js",
    "src/sidebar/components/menu-keyboard-navigation.js",
    "src/sidebar/components/menu-section.js",
    "src/sidebar/components/menu.js",
    "src/sidebar/components/moderation-banner.js",
    "src/sidebar/components/new-note-btn.js",
    "src/sidebar/components/search-input.js",
    "src/sidebar/components/selection-tabs.js",
    "src/sidebar/components/share-annotations-panel.js",
    "src/sidebar/components/share-links.js",
    "src/sidebar/components/sidebar-content-error.js",
    "src/sidebar/components/sidebar-content.js",
    "src/sidebar/components/sidebar-panel.js",
    "src/sidebar/components/slider.js",
    "src/sidebar/components/sort-menu.js",
    "src/sidebar/components/spinner.js",
    "src/sidebar/components/stream-content.js",
    "src/sidebar/components/stream-search-input.js",
    "src/sidebar/components/tag-editor.js",
    "src/sidebar/components/tag-list.js",
    "src/sidebar/components/thread-card.js",
    "src/sidebar/components/thread-list.js",
    "src/sidebar/components/thread.js",
    "src/sidebar/components/timestamp.js",
    "src/sidebar/components/toast-messages.js",
    "src/sidebar/components/top-bar.js",
    "src/sidebar/components/tutorial.js",
    "src/sidebar/components/user-menu.js",
    "src/sidebar/components/version-info.js",
    "src/sidebar/cross-origin-rpc.js",
    "src/sidebar/ga.js",
    "src/sidebar/get-api-url.js",
    "src/sidebar/host-config.js",
    "src/sidebar/icons.js",
    "src/sidebar/index.js",
    "src/sidebar/markdown-commands.js",
    "src/sidebar/media-embedder.js",
    "src/sidebar/render-markdown.js",
    "src/sidebar/search-client.js",
    "src/sidebar/service-config.js",
    "src/sidebar/services/analytics.js",
    "src/sidebar/services/annotations.js",
    "src/sidebar/services/api-routes.js",
    "src/sidebar/services/api.js",
    "src/sidebar/services/autosave.js",
    "src/sidebar/services/features.js",
    "src/sidebar/services/frame-sync.js",
    "src/sidebar/services/groups.js",
    "src/sidebar/services/load-annotations.js",
    "src/sidebar/services/local-storage.js",
    "src/sidebar/services/oauth-auth.js",
    "src/sidebar/services/persisted-defaults.js",
    "src/sidebar/services/router.js",
    "src/sidebar/services/service-url.js",
    "src/sidebar/services/session.js",
    "src/sidebar/services/stream-filter.js",
    "src/sidebar/services/streamer.js",
    "src/sidebar/services/tags.js",
    "src/sidebar/services/threads.js",
    "src/sidebar/services/toast-messenger.js",
    "src/sidebar/store/create-store.js",
    "src/sidebar/store/debug-middleware.js",
    "src/sidebar/store/index.js",
    "src/sidebar/store/modules/activity.js",
    "src/sidebar/store/modules/annotations.js",
    "src/sidebar/store/modules/defaults.js",
    "src/sidebar/store/modules/direct-linked.js",
    "src/sidebar/store/modules/drafts.js",
    "src/sidebar/store/modules/frames.js",
    "src/sidebar/store/modules/groups.js",
    "src/sidebar/store/modules/links.js",
    "src/sidebar/store/modules/real-time-updates.js",
    "src/sidebar/store/modules/route.js",
    "src/sidebar/store/modules/selection.js",
    "src/sidebar/store/modules/session.js",
    "src/sidebar/store/modules/sidebar-panels.js",
    "src/sidebar/store/modules/toast-messages.js",
    "src/sidebar/store/modules/viewer.js",
    "src/sidebar/store/use-store.js",
    "src/sidebar/store/util.js",
    "src/sidebar/ui-constants.js",
    "src/sidebar/util/account-id.js",
    "src/sidebar/util/annotation-metadata.js",
    "src/sidebar/util/annotation-sharing.js",
    "src/sidebar/util/build-thread.js",
    "src/sidebar/util/collections.js",
    "src/sidebar/util/copy-to-clipboard.js",
    "src/sidebar/util/date.js",
    "src/sidebar/util/disable-opener-for-external-links.js",
    "src/sidebar/util/dom.js",
    "src/sidebar/util/fetch-config.js",
    "src/sidebar/util/group-list-item-common.js",
    "src/sidebar/util/group-organizations.js",
    "src/sidebar/util/groups.js",
    "src/sidebar/util/immutable.js",
    "src/sidebar/util/is-third-party-service.js",
    "src/sidebar/util/memoize.js",
    "src/sidebar/util/oauth-client.js",
    "src/sidebar/util/observe-element-size.js",
    "src/sidebar/util/permissions.js",
    "src/sidebar/util/postmessage-json-rpc.js",
    "src/sidebar/util/random.js",
    "src/sidebar/util/retry.js",
    "src/sidebar/util/search-filter.js",
    "src/sidebar/util/sentry.js",
    "src/sidebar/util/service-context.js",
    "src/sidebar/util/session.js",
    "src/sidebar/util/state.js",
    "src/sidebar/util/tabs.js",
    "src/sidebar/util/theme.js",
    "src/sidebar/util/thread-annotations.js",
    "src/sidebar/util/thread.js",
    "src/sidebar/util/time.js",
    "src/sidebar/util/unicode.js",
    "src/sidebar/util/url.js",
    "src/sidebar/util/version-data.js",
    "src/sidebar/util/view-filter.js",
    "src/sidebar/util/visible-threads.js",
    "src/sidebar/util/watch.js",
    "src/sidebar/websocket.js"
  ],
  "names": [
    "outer",
    "modules",
    "cache",
    "entry",
    "previousRequire",
    "hypothesisRequire",
    "newRequire",
    "name",
    "jumped",
    "currentRequire",
    "err",
    "Error",
    "code",
    "m",
    "exports",
    "call",
    "x",
    "id",
    "i",
    "length",
    "1",
    "require",
    "module",
    "e",
    "hasOwnProperty",
    "n",
    "r",
    "t",
    "arguments",
    "f",
    "o",
    "push",
    "Array",
    "isArray",
    "apply",
    "a",
    "join",
    "default",
    "define",
    "amd",
    "window",
    "classNames",
    "this",
    "Object",
    "setPrototypeOf",
    "isFrozen",
    "keys",
    "freeze",
    "seal",
    "create",
    "l",
    "Reflect",
    "c",
    "s",
    "construct",
    "Function",
    "prototype",
    "bind",
    "concat",
    "from",
    "u",
    "k",
    "forEach",
    "d",
    "indexOf",
    "p",
    "pop",
    "y",
    "slice",
    "g",
    "String",
    "toLowerCase",
    "h",
    "match",
    "v",
    "replace",
    "b",
    "T",
    "trim",
    "A",
    "RegExp",
    "test",
    "L",
    "S",
    "TypeError",
    "_",
    "E",
    "M",
    "D",
    "N",
    "O",
    "R",
    "w",
    "F",
    "H",
    "C",
    "z",
    "I",
    "U",
    "j",
    "P",
    "G",
    "W",
    "B",
    "Symbol",
    "iterator",
    "constructor",
    "q",
    "K",
    "V",
    "createPolicy",
    "currentScript",
    "hasAttribute",
    "getAttribute",
    "createHTML",
    "console",
    "warn",
    "version",
    "removed",
    "document",
    "nodeType",
    "isSupported",
    "DocumentFragment",
    "HTMLTemplateElement",
    "Node",
    "NodeFilter",
    "Y",
    "NamedNodeMap",
    "X",
    "MozNamedAttrMap",
    "$",
    "Text",
    "J",
    "Comment",
    "Q",
    "DOMParser",
    "Z",
    "trustedTypes",
    "ee",
    "createElement",
    "content",
    "ownerDocument",
    "te",
    "ne",
    "He",
    "re",
    "oe",
    "implementation",
    "ie",
    "createNodeIterator",
    "ae",
    "getElementsByTagName",
    "le",
    "createDocumentFragment",
    "ce",
    "importNode",
    "se",
    "documentMode",
    "ue",
    "createHTMLDocument",
    "de",
    "fe",
    "pe",
    "me",
    "ye",
    "ge",
    "he",
    "ve",
    "be",
    "Te",
    "Ae",
    "xe",
    "Se",
    "ke",
    "Le",
    "_e",
    "Ee",
    "Me",
    "De",
    "Ne",
    "Oe",
    "Re",
    "we",
    "Fe",
    "Ce",
    "ze",
    "Ie",
    "Ue",
    "je",
    "Pe",
    "Ge",
    "We",
    "Be",
    "qe",
    "Ke",
    "Ve",
    "ALLOWED_TAGS",
    "ALLOWED_ATTR",
    "ADD_URI_SAFE_ATTR",
    "ADD_DATA_URI_TAGS",
    "FORBID_TAGS",
    "FORBID_ATTR",
    "USE_PROFILES",
    "ALLOW_ARIA_ATTR",
    "ALLOW_DATA_ATTR",
    "ALLOW_UNKNOWN_PROTOCOLS",
    "SAFE_FOR_JQUERY",
    "SAFE_FOR_TEMPLATES",
    "WHOLE_DOCUMENT",
    "RETURN_DOM",
    "RETURN_DOM_FRAGMENT",
    "RETURN_DOM_IMPORT",
    "RETURN_TRUSTED_TYPE",
    "FORCE_BODY",
    "SANITIZE_DOM",
    "KEEP_CONTENT",
    "IN_PLACE",
    "ALLOWED_URI_REGEXP",
    "html",
    "svg",
    "svgFilters",
    "mathMl",
    "ADD_TAGS",
    "ADD_ATTR",
    "table",
    "tbody",
    "Ye",
    "element",
    "parentNode",
    "removeChild",
    "outerHTML",
    "Xe",
    "attribute",
    "getAttributeNode",
    "removeAttribute",
    "$e",
    "parseFromString",
    "documentElement",
    "body",
    "firstElementChild",
    "insertBefore",
    "createTextNode",
    "childNodes",
    "querySelector",
    "innerHTML",
    "Je",
    "SHOW_ELEMENT",
    "SHOW_COMMENT",
    "SHOW_TEXT",
    "FILTER_ACCEPT",
    "Qe",
    "nodeName",
    "textContent",
    "attributes",
    "setAttribute",
    "namespaceURI",
    "Ze",
    "et",
    "tt",
    "tagName",
    "allowedTags",
    "querySelectorAll",
    "insertAdjacentHTML",
    "cloneNode",
    "nt",
    "rt",
    "attrName",
    "attrValue",
    "keepAttr",
    "allowedAttributes",
    "value",
    "forceKeepAttr",
    "setAttributeNS",
    "ot",
    "nextNode",
    "sanitize",
    "toString",
    "toStaticHTML",
    "appendChild",
    "firstChild",
    "setConfig",
    "clearConfig",
    "isValidAttribute",
    "addHook",
    "removeHook",
    "removeHooks",
    "removeAllHooks",
    "self",
    "DOMPurify",
    "matchHtmlRegExp",
    "exec",
    "index",
    "charCodeAt",
    "substring",
    "matchOperatorsRe",
    "text",
    "search",
    "url",
    "tel",
    "email",
    "password",
    "number",
    "date",
    "month",
    "week",
    "time",
    "datetime",
    "datetime-local",
    "classList",
    "contains",
    "add",
    "addEventListener",
    "target",
    "removeEventListener",
    "metaKey",
    "altKey",
    "ctrlKey",
    "activeElement",
    "visibilityState",
    "type",
    "readOnly",
    "isContentEditable",
    "clearTimeout",
    "setTimeout",
    "remove",
    "DOCUMENT_FRAGMENT_NODE",
    "host",
    "DOCUMENT_NODE",
    "applyFocusVisiblePolyfill",
    "CustomEvent",
    "createEvent",
    "initCustomEvent",
    "dispatchEvent",
    "reTrim",
    "reIsBadHex",
    "reIsBinary",
    "reIsOctal",
    "freeParseInt",
    "parseInt",
    "freeGlobal",
    "global",
    "freeSelf",
    "root",
    "objectToString",
    "nativeMax",
    "Math",
    "max",
    "nativeMin",
    "min",
    "now",
    "Date",
    "isObject",
    "toNumber",
    "isObjectLike",
    "isSymbol",
    "NaN",
    "valueOf",
    "leading",
    "maxWait",
    "trailing",
    "cancel",
    "flush",
    "children",
    "defaultProps",
    "props",
    "key",
    "ref",
    "__k",
    "__",
    "__b",
    "__e",
    "__d",
    "__c",
    "__v",
    "vnode",
    "context",
    "base",
    "__r",
    "debounceRendering",
    "sort",
    "some",
    "__P",
    "__n",
    "ownerSVGElement",
    "nextSibling",
    "setProperty",
    "style",
    "removeAttributeNS",
    "event",
    "contextType",
    "__E",
    "render",
    "sub",
    "state",
    "__h",
    "__s",
    "getDerivedStateFromProps",
    "componentWillMount",
    "componentDidMount",
    "componentWillReceiveProps",
    "shouldComponentUpdate",
    "componentWillUpdate",
    "componentDidUpdate",
    "getChildContext",
    "getSnapshotBeforeUpdate",
    "diffed",
    "localName",
    "createElementNS",
    "is",
    "data",
    "dangerouslySetInnerHTML",
    "__html",
    "checked",
    "current",
    "unmount",
    "componentWillUnmount",
    "getDerivedStateFromError",
    "setState",
    "componentDidCatch",
    "forceUpdate",
    "Promise",
    "then",
    "resolve",
    "hydrate",
    "Fragment",
    "createRef",
    "isValidElement",
    "Component",
    "cloneElement",
    "createContext",
    "Consumer",
    "Provider",
    "splice",
    "toChildArray",
    "__u",
    "options",
    "__H",
    "requestAnimationFrame",
    "cancelAnimationFrame",
    "filter",
    "useState",
    "useReducer",
    "useEffect",
    "useLayoutEffect",
    "useRef",
    "useImperativeHandle",
    "useMemo",
    "useCallback",
    "useContext",
    "useDebugValue",
    "useErrorBoundary",
    "ReactPropTypesSecret",
    "emptyFunction",
    "emptyFunctionWithReset",
    "resetWarningCache",
    "isRequired",
    "array",
    "bool",
    "func",
    "object",
    "string",
    "symbol",
    "any",
    "arrayOf",
    "elementType",
    "instanceOf",
    "node",
    "objectOf",
    "oneOf",
    "oneOfType",
    "shape",
    "exact",
    "checkPropTypes",
    "PropTypes",
    "strictUriEncode",
    "extract",
    "split",
    "parse",
    "reduce",
    "shift",
    "decodeURIComponent",
    "stringify",
    "map",
    "createThunkMiddleware",
    "dispatch",
    "getState",
    "__esModule",
    "thunk",
    "withExtraArgument",
    "defineProperty",
    "$$observable",
    "randomString",
    "random",
    "ActionTypes",
    "INIT",
    "REPLACE",
    "PROBE_UNKNOWN_ACTION",
    "isPlainObject",
    "getPrototypeOf",
    "getUndefinedStateErrorMessage",
    "bindActionCreator",
    "_defineProperty",
    "enumerable",
    "configurable",
    "writable",
    "ownKeys",
    "getOwnPropertySymbols",
    "getOwnPropertyDescriptor",
    "_objectSpread2",
    "getOwnPropertyDescriptors",
    "defineProperties",
    "compose",
    "__DO_NOT_USE__ActionTypes",
    "applyMiddleware",
    "bindActionCreators",
    "combineReducers",
    "assertReducerShape",
    "createStore",
    "subscribe",
    "next",
    "unsubscribe",
    "replaceReducer",
    "defaultEqualityCheck",
    "areArgumentsShallowlyEqual",
    "defaultMemoize",
    "getDependencies",
    "every",
    "createSelectorCreator",
    "resultFunc",
    "dependencies",
    "recomputations",
    "resetRecomputations",
    "createStructuredSelector",
    "createSelector",
    "RetryOperation",
    "operation",
    "timeouts",
    "forever",
    "unref",
    "maxRetryTime",
    "retries",
    "factor",
    "minTimeout",
    "maxTimeout",
    "randomize",
    "createTimeout",
    "round",
    "pow",
    "wrap",
    "retry",
    "mainError",
    "attempt",
    "_originalTimeouts",
    "JSON",
    "_timeouts",
    "_options",
    "_maxRetryTime",
    "_fn",
    "_errors",
    "_attempts",
    "_operationTimeout",
    "_operationTimeoutCb",
    "_timeout",
    "_operationStart",
    "_cachedTimeouts",
    "reset",
    "stop",
    "getTime",
    "unshift",
    "timeout",
    "cb",
    "try",
    "log",
    "start",
    "errors",
    "attempts",
    "message",
    "COMPLETE",
    "CANCELED",
    "setElementScroll",
    "scrollTo",
    "scrollLeft",
    "scrollTop",
    "animate",
    "_scrollSettings",
    "maxSynchronousAlignments",
    "align",
    "getBoundingClientRect",
    "left",
    "top",
    "leftOffset",
    "topOffset",
    "isWindow",
    "width",
    "innerWidth",
    "height",
    "innerHeight",
    "pageXOffset",
    "pageYOffset",
    "clientWidth",
    "clientHeight",
    "scrollWidth",
    "scrollHeight",
    "differenceX",
    "differenceY",
    "getTargetScrollLocation",
    "startTime",
    "endIterations",
    "end",
    "ease",
    "raf",
    "defaultIsWindow",
    "transitionScrollTo",
    "passive",
    "parentElement",
    "debug",
    "cancellable",
    "defaultIsScrollable",
    "getComputedStyle",
    "overflow",
    "defaultValidTarget",
    "findParentElement",
    "assignedSlot",
    "defaultView",
    "ownerWindow",
    "getRootNode",
    "isNaN",
    "validTarget",
    "isScrollable",
    "error",
    "encodeURIComponent",
    "toUpperCase",
    "_ponyfill",
    "_ponyfill2",
    "result",
    "observable",
    "on",
    "fn",
    "ctx",
    "once",
    "off",
    "emit",
    "TinyEmitter",
    "FEATURE_FLAGS_UPDATED",
    "HELP_REQUESTED",
    "LOGIN_REQUESTED",
    "LOGOUT_REQUESTED",
    "PROFILE_REQUESTED",
    "PUBLIC_ANNOTATION_COUNT_CHANGED",
    "SIGNUP_REQUESTED",
    "_frameRpc",
    "_toConsumableArray",
    "_arrayLikeToArray",
    "_arrayWithoutHoles",
    "_iterableToArray",
    "_unsupportedIterableToArray",
    "_nonIterableSpread",
    "_defineProperties",
    "Bridge",
    "_classCallCheck",
    "links",
    "channelListeners",
    "onConnectListeners",
    "_createClass",
    "channel",
    "destroy",
    "_objectSpread",
    "connect",
    "catch",
    "all",
    "normalizeKeyName",
    "Left",
    "Up",
    "Down",
    "Right",
    "Spacebar",
    "Del",
    "iconRegistry",
    "assign",
    "_classnames",
    "_interopRequireDefault",
    "_preact",
    "_hooks",
    "_propTypes",
    "_extends",
    "SvgIcon",
    "className",
    "inline",
    "title",
    "svg-icon--inline",
    "propTypes",
    "Discovery",
    "server",
    "origin",
    "requestInProgress",
    "onDiscovery",
    "_onMessage",
    "_beacon",
    "postMessage",
    "frames",
    "source",
    "location",
    "protocol",
    "_slicedToArray",
    "_processMessage",
    "reply",
    "discovered",
    "token",
    "generateToken",
    "closest",
    "matches",
    "VERSION",
    "RPC",
    "src",
    "dst",
    "URL",
    "_sequence",
    "_callbacks",
    "_onmessage",
    "_destroyed",
    "_typeof",
    "_handle",
    "_methods",
    "sequence",
    "method",
    "response",
    "Injector",
    "_providers",
    "Map",
    "_instances",
    "_constructing",
    "Set",
    "has",
    "get",
    "set",
    "_createForOfIteratorHelper",
    "class",
    "$inject",
    "factory",
    "done",
    "cause",
    "_construct",
    "delete",
    "isValidProvider",
    "register",
    "_userAgent",
    "isIE11",
    "dir",
    "jsonConfigsFrom",
    "toBoolean",
    "toLocaleLowerCase",
    "Number",
    "Boolean",
    "toInteger",
    "toObject",
    "navigator",
    "userAgent",
    "isMacOS",
    "shownWarnings",
    "warnOnce",
    "_uiConstants",
    "_useStore",
    "_annotationSharing",
    "_permissions",
    "_serviceContext",
    "_annotationShareControl",
    "_button",
    "AnnotationActionBar",
    "annotation",
    "annotationsService",
    "onReply",
    "settings",
    "toastMessenger",
    "profile",
    "getGroup",
    "group",
    "isLoggedIn",
    "openSidebarPanel",
    "permits",
    "permissions",
    "userid",
    "user",
    "isShareable",
    "createDraft",
    "icon",
    "onClick",
    "tags",
    "isPrivate",
    "confirm",
    "PANEL_LOGIN_PROMPT",
    "shareUri",
    "shareURI",
    "flagged",
    "flag",
    "isPressed",
    "injectedProps",
    "_default",
    "withServices",
    "_annotationMetadata",
    "_theme",
    "_excerpt",
    "_markdownEditor",
    "_markdownView",
    "_tagEditor",
    "_tagList",
    "_arrayWithHoles",
    "return",
    "_iterableToArrayLimit",
    "_nonIterableRest",
    "AnnotationBody",
    "isEditing",
    "onEditTags",
    "onEditText",
    "applyTheme",
    "collapse",
    "collapsedHeight",
    "inlineControls",
    "onCollapsibleChanged",
    "onToggleCollapsed",
    "overflowThreshold",
    "textStyle",
    "markdown",
    "textClass",
    "annotation-body__text",
    "is-hidden",
    "isHidden",
    "label",
    "buttonText",
    "isExpanded",
    "aria-label",
    "tagList",
    "annotationMetadata",
    "_getRequireWildcardCache",
    "_interopRequireWildcard",
    "WeakMap",
    "AnnotationDocumentInfo",
    "domainAndTitle",
    "titleText",
    "titleLink",
    "href",
    "domain",
    "_annotationDocumentInfo",
    "_annotationShareInfo",
    "_annotationUser",
    "_svgIcon",
    "_timestamp",
    "AnnotationHeader",
    "replyCount",
    "showDocumentInfo",
    "threadIsCollapsed",
    "isReply",
    "setExpanded",
    "updated",
    "created",
    "timestamp",
    "isHighlight",
    "AnnotationLicense",
    "rel",
    "_menu",
    "_menuItem",
    "AnnotationPublishControl",
    "isDisabled",
    "onSave",
    "getDraft",
    "removeDraft",
    "setDefault",
    "removeAnnotations",
    "isShared",
    "disabled",
    "arrowClass",
    "containerPositioned",
    "contentClass",
    "menuIndicator",
    "isSelected",
    "isNew",
    "AnnotationQuote",
    "isFocused",
    "is-orphan",
    "isOrphan",
    "is-focused",
    "lang",
    "quote",
    "_copyToClipboard",
    "_useElementShouldClose",
    "_shareLinks",
    "AnnotationShareControl",
    "analytics",
    "focus",
    "select",
    "copyText",
    "success",
    "analyticsEventName",
    "events",
    "ANNOTATION_SHARED",
    "AnnotationShareInfo",
    "_accountId",
    "AnnotationUser",
    "features",
    "serviceUrl",
    "isThirdPartyUser",
    "authDomain",
    "username",
    "flagEnabled",
    "user_info",
    "display_name",
    "usernameUrl",
    "_useRootThread",
    "_threadList",
    "_sidebarContentError",
    "AnnotationViewerContent",
    "loadAnnotationsService",
    "onLogin",
    "routeParams",
    "clearAnnotations",
    "highlightAnnotations",
    "loadThread",
    "references",
    "errorType",
    "onLoginRequest",
    "thread",
    "_browserCompatibilityUtils",
    "_annotationActionBar",
    "_annotationBody",
    "_annotationHeader",
    "_annotationLicense",
    "_annotationPublishControl",
    "_annotationQuote",
    "_empty",
    "Annotation",
    "isAnnotationFocused",
    "$tag",
    "isSavingAnnotation",
    "reject",
    "_async",
    "_continueIgnored",
    "_catch",
    "_awaitIgnored",
    "save",
    "annotation--reply",
    "is-collapsed",
    "onKeyDown",
    "stopPropagation",
    "preventDefault",
    "defaultListFormatter",
    "AutocompleteList",
    "activeItem",
    "itemPrefixId",
    "list",
    "listFormatter",
    "onSelectItem",
    "open",
    "role",
    "aria-selected",
    "is-selected",
    "tabIndex",
    "Button",
    "requiredStringIfButtonTextMissing",
    "_observeElementSize",
    "InlineControls",
    "isCollapsed",
    "setCollapsed",
    "linkStyle",
    "aria-expanded",
    "noop",
    "Excerpt",
    "excerpt__shadow",
    "excerpt__shadow--transparent",
    "_thread",
    "FilterStatusPanel",
    "actionButton",
    "additionalCount",
    "entitySingular",
    "entityPlural",
    "filterQuery",
    "focusDisplayName",
    "resultCount",
    "SelectionFilterStatus",
    "filterState",
    "rootThread",
    "clearSelection",
    "annotationCount",
    "visible",
    "selectedCount",
    "focusConfigured",
    "QueryFilterStatus",
    "countVisible",
    "forcedVisibleCount",
    "FocusFilterStatus",
    "toggleFocusMode",
    "focusActive",
    "FilterStatus",
    "_groupListItemCommon",
    "GroupListItem",
    "groups",
    "onExpand",
    "canLeave",
    "scopes",
    "enforced",
    "isScopedToUri",
    "focusedGroupId",
    "clearDirectLinkedGroupFetchFailed",
    "clearDirectLinkedIds",
    "logo",
    "iconAlt",
    "orgName",
    "isSubmenuVisible",
    "track",
    "GROUP_SWITCH",
    "onToggleSubmenu",
    "submenu",
    "isSubmenuItem",
    "GROUP_LEAVE",
    "leave",
    "_groupListItem",
    "_menuSection",
    "GroupListSection",
    "expandedGroup",
    "onExpandGroup",
    "heading",
    "_serviceConfig",
    "_groupOrganizations",
    "_isThirdPartyService",
    "_groupListSection",
    "GroupList",
    "getCurrentlyViewingGroups",
    "getFeaturedGroups",
    "getMyGroups",
    "focusedGroup",
    "organization",
    "publisherProvidedIcon",
    "alt",
    "onOpenChanged",
    "_versionData",
    "_sidebarPanel",
    "_tutorial",
    "_versionInfo",
    "HelpPanelTab",
    "linkText",
    "HelpPanel",
    "auth",
    "session",
    "mainFrame",
    "preferences",
    "show_sidebar_tutorial",
    "status",
    "asEncodedURLString",
    "dismissSidebarTutorial",
    "panelName",
    "PANEL_HELP",
    "onActiveChanged",
    "tutorial",
    "versionInfo",
    "versionData",
    "_dom",
    "listen",
    "useCapture",
    "_threadAnnotations",
    "threadState",
    "_bridgeEvents",
    "_session",
    "_annotationViewerContent",
    "_helpPanel",
    "_shareAnnotationsPanel",
    "_sidebarContent",
    "_streamContent",
    "_toastMessages",
    "_topBar",
    "HypothesisApp",
    "bridge",
    "clearGroups",
    "closeSidebarPanel",
    "countDrafts",
    "discardAllDrafts",
    "hasFetchedProfile",
    "route",
    "unsavedAnnotations",
    "parseAccountID",
    "displayName",
    "provider",
    "authStateFromProfile",
    "shouldAutoDisplayTutorial",
    "notice",
    "autoDismiss",
    "moreInfoURL",
    "_await",
    "login",
    "reload",
    "onSignUp",
    "onLogout",
    "logout",
    "isSidebar",
    "LoggedOutMessage",
    "LoginPromptPanel",
    "_markdownCommands",
    "SHORTCUT_KEYS",
    "bold",
    "italic",
    "link",
    "image",
    "numlist",
    "ToolbarButton",
    "buttonRef",
    "iconName",
    "shortcutKey",
    "Toolbar",
    "isPreviewing",
    "onCommand",
    "onTogglePreview",
    "MarkdownEditor",
    "selectionStart",
    "selectionEnd",
    "toggleSpanStyle",
    "toggleBlockStyle",
    "convertSelectionToLink",
    "LinkType",
    "IMAGE_LINK",
    "handleToolbarCommand",
    "markdown-editor__preview",
    "entries",
    "onInput",
    "_mediaEmbedder",
    "_renderMarkdown",
    "MarkdownView",
    "replaceLinksWithEmbeds",
    "_menuKeyboardNavigation",
    "_slider",
    "MenuItem",
    "is-submenu",
    "is-disabled",
    "is-expanded",
    "aria-checked",
    "aria-haspopup",
    "closeMenu",
    "isElementVisible",
    "offsetParent",
    "MenuKeyboardNavigation",
    "findIndex",
    "MenuSection",
    "ignoreNextClick",
    "Menu",
    "defaultOpen",
    "position",
    "onMouseDown",
    "stroke",
    "strokeWidth",
    "menuArrow",
    "ModerationBanner",
    "api",
    "hide",
    "hideAnnotation",
    "unhide",
    "unhideAnnotation",
    "flagCount",
    "hidden",
    "is-flagged",
    "is-reply",
    "NewNoteButton",
    "uri",
    "_spinner",
    "SearchInput",
    "alwaysExpanded",
    "query",
    "onSearch",
    "isLoading",
    "action",
    "onSubmit",
    "placeholder",
    "_newNoteBtn",
    "Tab",
    "count",
    "isWaitingToAnchor",
    "onSelect",
    "SelectionTabs",
    "selection",
    "selectedTab",
    "noteCount",
    "orphanCount",
    "isWaitingToAnchorAnnotations",
    "selectTab",
    "theme",
    "TAB_ANNOTATIONS",
    "TAB_NOTES",
    "selection-tabs--theme-clean",
    "TAB_ORPHANS",
    "enableExperimentalNewNoteButton",
    "ShareAnnotationsPanel",
    "PANEL_SHARE_ANNOTATIONS",
    "DOCUMENT_SHARED",
    "ShareLink",
    "ShareLinks",
    "SidebarContentError",
    "showClearSelection",
    "sidebar-content-error__button",
    "sidebar-content-error__button--primary",
    "_tabs",
    "_filterStatus",
    "_loggedOutMessage",
    "_loginPromptPanel",
    "_selectionTabs",
    "SidebarContent",
    "frameSync",
    "streamer",
    "hasAppliedFilter",
    "directLinkedAnnotationId",
    "findAnnotationByID",
    "tabForAnnotation",
    "searchUris",
    "hasSidebarOpened",
    "$orphan",
    "directLinkedGroupFetchFailed",
    "load",
    "focusAnnotations",
    "scrollToAnnotation",
    "_scrollIntoView",
    "SidebarPanel",
    "isSidebarPanelOpen",
    "toggleSidebarPanel",
    "Slider",
    "display",
    "ontransitionend",
    "transition",
    "SortMenu",
    "setSortKey",
    "sortKey",
    "sortKeys",
    "Spinner",
    "searchFilter",
    "StreamContent",
    "addAnnotations",
    "annotationFetchStarted",
    "annotationFetchFinished",
    "_separate_replies",
    "offset",
    "limit",
    "_finallyRethrows",
    "rows",
    "replies",
    "_rethrow",
    "_searchInput",
    "StreamSearchInput",
    "router",
    "navigate",
    "_autocompleteList",
    "tagEditorIdCounter",
    "TagEditor",
    "store",
    "aria-owns",
    "inputType",
    "onFocus",
    "autoComplete",
    "aria-autocomplete",
    "aria-activedescendant",
    "aria-controls",
    "TagList",
    "tag",
    "_lodash",
    "_domElement",
    "ThreadCard",
    "onMouseEnter",
    "onMouseLeave",
    "thread-card--theme-clean",
    "_visibleThreads",
    "_threadCard",
    "getScrollContainer",
    "ThreadList",
    "setForcedVisible",
    "calculateVisibleThreads",
    "offscreenLowerHeight",
    "offscreenUpperHeight",
    "visibleThreads",
    "THREAD_DIMENSION_DEFAULTS",
    "defaultHeight",
    "getElementById",
    "getElementHeightWithMargins",
    "_annotation",
    "_moderationBanner",
    "Thread",
    "threadsService",
    "collapsed",
    "countHidden",
    "parent",
    "thread--reply",
    "depth",
    "forceVisible",
    "_date",
    "_time",
    "Timestamp",
    "toFuzzyString",
    "format",
    "decayingInterval",
    "ToastMessage",
    "onDismiss",
    "charAt",
    "is-dismissed",
    "isDismissed",
    "ToastMessages",
    "getToastMessages",
    "aria-live",
    "aria-relevant",
    "dismiss",
    "_groupList",
    "_sortMenu",
    "_streamSearchInput",
    "_userMenu",
    "TopBar",
    "setFilterQuery",
    "pendingUpdateCount",
    "sidebarPanels",
    "activePanelName",
    "onHelpRequestProvided",
    "applyPendingUpdates",
    "TutorialInstruction",
    "commandName",
    "Tutorial",
    "UserMenu",
    "VersionInfo",
    "fingerprint",
    "account",
    "asFormattedString",
    "preStartMessageListener",
    "_warnOnce",
    "startServer",
    "preStartQueue",
    "changeFocusModeUser",
    "registeredMethods",
    "rpcAllowedOrigins",
    "jsonrpc",
    "isJsonRpcMessage",
    "includes",
    "params",
    "loaded",
    "GoogleAnalyticsObject",
    "ga",
    "async",
    "apiUrl",
    "hash",
    "queryString",
    "config",
    "openSidebar",
    "_typeCoercions",
    "requestConfigFromFrame",
    "ancestorLevel",
    "annotate",
    "arrow-left",
    "arrow-right",
    "caret-right",
    "cc-std",
    "cc-zero",
    "collapse-menu",
    "copy",
    "cursor",
    "edit",
    "expand-menu",
    "external",
    "facebook",
    "flag--active",
    "format-bold",
    "format-functions",
    "format-italic",
    "format-list-numbered",
    "format-list-unordered",
    "format-quote",
    "help",
    "highlight",
    "lock",
    "pointer",
    "public",
    "refresh",
    "restricted",
    "share",
    "trash",
    "twitter",
    "_settings",
    "rendererOptions",
    "_crossOriginRpc",
    "_ga",
    "_disableOpenerForExternalLinks",
    "_fetchConfig",
    "sentry",
    "_icons",
    "_hypothesisApp",
    "_bridge",
    "_analytics",
    "_annotations",
    "_api",
    "_apiRoutes",
    "_oauthAuth",
    "_autosave",
    "_features",
    "_frameSync",
    "_groups",
    "_loadAnnotations",
    "_localStorage",
    "_persistedDefaults",
    "_router",
    "_serviceUrl",
    "_streamFilter",
    "_streamer",
    "_tags",
    "_threads",
    "_toastMessenger",
    "_store",
    "_injector",
    "setupFrameSync",
    "autosave",
    "persistDefaults",
    "sendPageView",
    "setupRoute",
    "setupApi",
    "appConfig",
    "init",
    "googleAnalytics",
    "pathname",
    "startsWith",
    "setClientId",
    "clientId",
    "finally",
    "sync",
    "setupIE11Fixes",
    "registerIcons",
    "preStartServer",
    "fetchConfig",
    "run",
    "ServiceContext",
    "startApp",
    "ANCHOR_LINK",
    "replaceText",
    "transformLines",
    "endOfLine",
    "lastIndexOf",
    "startOfLine",
    "replaceLinkWithEmbed",
    "wrapInAspectRatioContainer",
    "paddingBottom",
    "iframe",
    "youTubeQueryParams",
    "parseTimeString",
    "youTubeEmbed",
    "createEmbedGenerator",
    "aspectRatio",
    "hostname",
    "embedGenerators",
    "searchParams",
    "append",
    "endsWith",
    "controls",
    "audioElement",
    "decodeURI",
    "embedForLink",
    "replaceChild",
    "mathPlaceholder",
    "expression",
    "mathBlocks",
    "extractMath",
    "katex",
    "renderToString",
    "displayMode",
    "_escapeHtml",
    "insertMath",
    "converter",
    "_showdown",
    "Converter",
    "extensions",
    "targetBlank",
    "simplifiedAutoLink",
    "literalMidWordUnderscores",
    "makeHtml",
    "renderMarkdown",
    "_dompurify",
    "_tinyEmitter",
    "_inherits",
    "_setPrototypeOf",
    "__proto__",
    "_createSuper",
    "sham",
    "Proxy",
    "_isNativeReflectConstruct",
    "_getPrototypeOf",
    "_possibleConstructorReturn",
    "ReferenceError",
    "_assertThisInitialized",
    "SearchClient",
    "chunkSize",
    "separateReplies",
    "incremental",
    "_searchFn",
    "_chunkSize",
    "_separateReplies",
    "_incremental",
    "_canceled",
    "_results",
    "order",
    "total",
    "_getBatch",
    "services",
    "VIA_REFERRER",
    "ANNOTATION_CREATED",
    "ANNOTATION_DELETED",
    "ANNOTATION_FLAGGED",
    "ANNOTATION_UPDATED",
    "GROUP_VIEW_ACTIVITY",
    "HIGHLIGHT_CREATED",
    "HIGHLIGHT_UPDATED",
    "HIGHLIGHT_DELETED",
    "LOGIN_FAILURE",
    "LOGIN_SUCCESS",
    "LOGOUT_FAILURE",
    "LOGOUT_SUCCESS",
    "PAGE_NOTE_CREATED",
    "PAGE_NOTE_UPDATED",
    "PAGE_NOTE_DELETED",
    "REPLY_CREATED",
    "REPLY_UPDATED",
    "REPLY_DELETED",
    "SIDEBAR_OPENED",
    "SIGN_UP_REQUESTED",
    "appType",
    "referrer",
    "clientType",
    "metadata",
    "_random",
    "getDefault",
    "generateHexString",
    "toISOString",
    "defaultPermissions",
    "privatePermissions",
    "deleteNewAndEmptyDrafts",
    "isPublic",
    "isPageNote",
    "isAnnotation",
    "sharedPermissions",
    "update",
    "annotationSaveStarted",
    "_continue",
    "annotationSaveFinished",
    "updateFlagStatus",
    "_retry",
    "apiRoutes",
    "fetch",
    "json",
    "retryPromiseOperation",
    "routes",
    "_url",
    "translateResponseToError",
    "statusText",
    "reason",
    "stripInternalProperties",
    "getAccessToken",
    "getClientId",
    "onRequestStarted",
    "onRequestFinished",
    "Content-Type",
    "Hypothesis-Client-Version",
    "Authorization",
    "replaceURLParams",
    "headers",
    "includeMetadata",
    "createAPICall",
    "tokenGetter",
    "apiRequestStarted",
    "apiRequestFinished",
    "member",
    "read",
    "autosaveService",
    "newHighlights",
    "isSaving",
    "size",
    "_watch",
    "watch",
    "_discovery",
    "formatAnnot",
    "msg",
    "FrameSync",
    "updateAnchorStatus",
    "selectAnnotations",
    "findIDsForTags",
    "toggleSelectedAnnotations",
    "setSidebarOpened",
    "connectFrame",
    "frameIdentifier",
    "find",
    "destroyFrame",
    "startDiscovery",
    "createChannel",
    "onConnect",
    "annotations",
    "isAnnotationFetchComplete",
    "_state",
    "_call",
    "_invoke",
    "DEFAULT_ORGANIZATION",
    "expand",
    "groupid",
    "directLinkedGroupId",
    "setDirectLinkedGroupFetchFailed",
    "authority",
    "document_uri",
    "_invokeIgnored",
    "combineGroups",
    "awaitStateChange",
    "focusGroup",
    "newAnnotations",
    "allGroups",
    "loadGroups",
    "pubid",
    "_searchClient",
    "addClause",
    "getFilter",
    "savedAnnotations",
    "updateFrameAnnotationFetchStatus",
    "resetFilter",
    "InMemoryStorage",
    "localStorage",
    "setItem",
    "getItem",
    "removeItem",
    "getObject",
    "setObject",
    "_oauthClient",
    "revokeToken",
    "accessToken",
    "oauthClientId",
    "authorizationEndpoint",
    "revokeEndpoint",
    "tokenEndpoint",
    "openAuthPopupWindow",
    "authorize",
    "grantToken",
    "exchangeGrantToken",
    "exchangeAuthCode",
    "refreshToken",
    "expiresAt",
    "persist",
    "persistedDefaults",
    "DEFAULT_KEYS",
    "annotationPrivacy",
    "getDefaults",
    "changeRoute",
    "history",
    "pushState",
    "urlUtil",
    "updateLinks",
    "retryUtil",
    "updateProfile",
    "setUserInfo",
    "profileFetchRetryOpts",
    "StreamFilter",
    "match_policy",
    "clauses",
    "actions",
    "field",
    "operator",
    "case_sensitive",
    "_websocket",
    "Streamer",
    "websocketUrl",
    "payload",
    "receiveRealTimeUpdates",
    "updatedAnnotations",
    "deletedAnnotations",
    "model",
    "send",
    "isConnected",
    "access_token",
    "messageType",
    "close",
    "values",
    "pendingUpdates",
    "pendingDeletions",
    "clearPendingUpdates",
    "configMessages",
    "reconnect",
    "localeCompare",
    "getToastMessage",
    "updateToastMessage",
    "removeToastMessage",
    "hasToastMessage",
    "addToastMessage",
    "namespace",
    "_util",
    "createReducer",
    "selectors",
    "rootSelectors",
    "_reduxThunk",
    "redux",
    "bindSelectors",
    "groupEnd",
    "_createStore",
    "_debugMiddleware",
    "_activity",
    "_defaults",
    "_directLinked",
    "_drafts",
    "_frames",
    "_links",
    "_realTimeUpdates",
    "_route",
    "_selection",
    "_sidebarPanels",
    "_viewer",
    "API_REQUEST_STARTED",
    "activeApiRequests",
    "API_REQUEST_FINISHED",
    "ANNOTATION_SAVE_STARTED",
    "activeAnnotationSaveRequests",
    "ANNOTATION_SAVE_FINISHED",
    "ANNOTATION_FETCH_STARTED",
    "activeAnnotationFetches",
    "ANNOTATION_FETCH_FINISHED",
    "hasFetchedAnnotations",
    "actionTypes",
    "isFetchingAnnotations",
    "_reselect",
    "_collections",
    "util",
    "findByID",
    "findByTag",
    "ADD_ANNOTATIONS",
    "nextTag",
    "$anchorTimeout",
    "initializeAnnotation",
    "CLEAR_ANNOTATIONS",
    "focused",
    "highlighted",
    "FOCUS_ANNOTATIONS",
    "toTrueMap",
    "focusedTags",
    "HIDE_ANNOTATION",
    "HIGHLIGHT_ANNOTATIONS",
    "REMOVE_ANNOTATIONS",
    "remainingAnnotations",
    "UNHIDE_ANNOTATION",
    "UPDATE_ANCHOR_STATUS",
    "statusUpdates",
    "UPDATE_FLAG_STATUS",
    "isFlagged",
    "moderation",
    "currentAnnotationCount",
    "excludeAnnotations",
    "annotationsToRemove",
    "countIf",
    "annotationExists",
    "focusedAnnotations",
    "trueKeys",
    "highlightedAnnotations",
    "SET_DEFAULT",
    "defaultKey",
    "UPDATE_DIRECT_LINKED_GROUP_FETCH_FAILED",
    "UPDATE_DIRECT_LINKED_GROUP_ID",
    "UPDATE_DIRECT_LINKED_ANNOTATION_ID",
    "CLEAR_DIRECT_LINKED_IDS",
    "CLEAR_SELECTION",
    "setDirectLinkedGroupId",
    "setDirectLinkedAnnotationId",
    "Draft",
    "DISCARD_ALL_DRAFTS",
    "REMOVE_DRAFT",
    "UPDATE_DRAFT",
    "draft",
    "getDraftIfNotEmpty",
    "isEmpty",
    "drafts",
    "_shallowequal",
    "CONNECT_FRAME",
    "frame",
    "DESTROY_FRAME",
    "UPDATE_FRAME_ANNOTATION_FETCH_STATUS",
    "createShallowEqualSelector",
    "documentFingerprint",
    "searchUrisForFrame",
    "FOCUS_GROUP",
    "LOAD_GROUPS",
    "CLEAR_GROUPS",
    "isMember",
    "getInScopeGroups",
    "UPDATE_LINKS",
    "newLinks",
    "RECEIVE_REAL_TIME_UPDATES",
    "CLEAR_PENDING_UPDATES",
    "realTimeUpdates",
    "hasPendingDeletion",
    "CHANGE_ROUTE",
    "_TAB_SORTKEY_DEFAULT",
    "TAB_SORTKEY_DEFAULT",
    "initialSelection",
    "setFocus",
    "configured",
    "active",
    "setTab",
    "TABS",
    "CHANGE_FOCUS_MODE_USER",
    "forcedVisible",
    "selected",
    "focusMode",
    "SELECT_ANNOTATIONS",
    "SELECT_TAB",
    "tab",
    "SET_EXPANDED",
    "expanded",
    "SET_FILTER_QUERY",
    "SET_FOCUS_MODE",
    "SET_FORCED_VISIBLE",
    "SET_SORT_KEY",
    "TOGGLE_SELECTED_ANNOTATIONS",
    "toggleIds",
    "expandedMap",
    "focusModeActive",
    "focusModeConfigured",
    "focusModeUserFilter",
    "focusModeUserPrettyName",
    "forcedVisibleAnnotations",
    "getFirstSelectedAnnotationId",
    "hasSelectedAnnotations",
    "selectedAnnotations",
    "filters",
    "initialProfile",
    "UPDATE_PROFILE",
    "isFeatureEnabled",
    "OPEN_SIDEBAR_PANEL",
    "CLOSE_SIDEBAR_PANEL",
    "TOGGLE_SIDEBAR_PANEL",
    "panelState",
    "ADD_MESSAGE",
    "messages",
    "REMOVE_MESSAGE",
    "UPDATE_MESSAGE",
    "SET_HIGHLIGHTS_VISIBLE",
    "visibleHighlights",
    "SET_SIDEBAR_OPENED",
    "opened",
    "sidebarHasOpened",
    "setShowHighlights",
    "useService",
    "documentMetadata",
    "titleLinkFromAnnotation",
    "incontext",
    "domainTextFromAnnotation",
    "titleTextFromAnnotation",
    "hasSelector",
    "selector",
    "$highlight",
    "POSITIVE_INFINITY",
    "sharingEnabled",
    "enableShareLinks",
    "defaultOpts",
    "filterFn",
    "threadFilterFn",
    "annotationId",
    "DEFAULT_THREAD_STATE",
    "setParent",
    "totalChildren",
    "threadAnnotations",
    "mapThread",
    "hasVisibleChildren",
    "countRepliesAndDepth",
    "sortThread",
    "sortCompareFn",
    "replySortCompareFn",
    "hasPathToRoot",
    "createRange",
    "getSelection",
    "removeAllRanges",
    "selectNodeContents",
    "addRange",
    "execCommand",
    "formatter",
    "Intl",
    "DateTimeFormat",
    "year",
    "day",
    "weekday",
    "hour",
    "minute",
    "toDateString",
    "toLocaleTimeString",
    "parseFloat",
    "marginTop",
    "marginBottom",
    "_getApiUrl",
    "_hostConfig",
    "postMessageJsonRpc",
    "ancestors",
    "fetchConfigFromAncestorFrame",
    "race",
    "fetchConfigEmbed",
    "fetchConfigLegacy",
    "getAncestorFrame",
    "fetchConfigRpc",
    "fetchGroupsAsync",
    "DEFAULT_ORG_ID",
    "orgKey",
    "_immutable",
    "addGroup",
    "organizations",
    "allowLeavingGroups",
    "uri_patterns",
    "_escapeStringRegexp",
    "uriMatchesScopes",
    "tokenInfoFrom",
    "expires_in",
    "refresh_token",
    "generateState",
    "OAuthClient",
    "client_id",
    "grant_type",
    "_formPost",
    "assertion",
    "response_mode",
    "response_type",
    "screen",
    "ResizeObserver",
    "observe",
    "disconnect",
    "MutationObserver",
    "characterData",
    "childList",
    "subtree",
    "defaultLevel",
    "generateId",
    "byteToHex",
    "crypto",
    "msCrypto",
    "Uint8Array",
    "getRandomValues",
    "splitTerm",
    "tokenize",
    "generateFacetedFilter",
    "sec",
    "terms",
    "since",
    "currentScriptOrigin",
    "Sentry",
    "dsn",
    "environment",
    "ignoreErrors",
    "release",
    "whitelistUrls",
    "beforeSend",
    "eventsSent",
    "originalException",
    "Event",
    "extra",
    "detail",
    "isTrusted",
    "setExtra",
    "setUser",
    "fallbackInjector",
    "branding",
    "supportedThemeProperties",
    "accentColor",
    "appBackgroundColor",
    "ctaBackgroundColor",
    "ctaTextColor",
    "selectionFontFamily",
    "annotationFontFamily",
    "_buildThread",
    "_memoize",
    "_searchFilter",
    "_viewFilter",
    "sortFns",
    "Newest",
    "Oldest",
    "Location",
    "shouldShowInTab",
    "countByVisibility",
    "formatters",
    "nextFuzzyUpdate",
    "getBreakpoint",
    "formatFn",
    "SECOND",
    "MINUTE",
    "HOUR",
    "delta",
    "formatIntl",
    "BREAKPOINTS",
    "nextUpdate",
    "floor",
    "getFullYear",
    "DEFAULT_BREAKPOINT",
    "COMBINING_MARKS",
    "normalize",
    "VersionData",
    "BinaryOpFilter",
    "TermFilter",
    "fieldMatchers",
    "unicodeUtils",
    "fold",
    "term",
    "checker",
    "autofalse",
    "marginAbove",
    "marginBelow",
    "CLOSE_NORMAL",
    "CLOSE_GOING_AWAY",
    "CLOSE_ABNORMAL",
    "Socket",
    "readyState",
    "WebSocket",
    "OPEN",
    "onopen",
    "onclose",
    "onerror",
    "onmessage"
  ],
  "mappings": "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",
  "sourcesContent": [
    "\n// modules are defined as an array\n// [ module function, map of requireuires ]\n//\n// map of requireuires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the requireuire for previous bundles\n\n(function() {\n\nfunction outer(modules, cache, entry) {\n    // Save the require from previous bundle to this closure if any\n    var previousRequire = typeof hypothesisRequire == \"function\" && hypothesisRequire;;\n\n    function newRequire(name, jumped){\n        if(!cache[name]) {\n            if(!modules[name]) {\n                // if we cannot find the module within our internal map or\n                // cache jump to the current global require ie. the last bundle\n                // that was added to the page.\n                var currentRequire = typeof hypothesisRequire == \"function\" && hypothesisRequire;;\n                if (!jumped && currentRequire) return currentRequire(name, true);\n\n                // If there are other bundles on this page the require from the\n                // previous one is saved to 'previousRequire'. Repeat this as\n                // many times as there are bundles until the module is found or\n                // we exhaust the require chain.\n                if (previousRequire) return previousRequire(name, true);\n                var err = new Error('Cannot find module \\'' + name + '\\'');\n                err.code = 'MODULE_NOT_FOUND';\n                throw err;\n            }\n            var m = cache[name] = {exports:{}};\n            modules[name][0].call(m.exports, function(x){\n                var id = modules[name][1][x];\n                return newRequire(id ? id : x);\n            },m,m.exports,outer,modules,cache,entry);\n        }\n        return cache[name].exports;\n    }\n    for(var i=0;i<entry.length;i++) newRequire(entry[i]);\n\n    // Override the current require with this new one\n    return newRequire;\n}\n\nreturn outer;\n\n})()\n",
    "/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n!function(){\"use strict\";var e={}.hasOwnProperty;function n(){for(var r=[],t=0;t<arguments.length;t++){var f=arguments[t];if(f){var o=typeof f;if(\"string\"===o||\"number\"===o)r.push(f);else if(Array.isArray(f)&&f.length){var i=n.apply(null,f);i&&r.push(i)}else if(\"object\"===o)for(var a in f)e.call(f,a)&&f[a]&&r.push(a)}}return r.join(\" \")}\"undefined\"!=typeof module&&module.exports?(n.default=n,module.exports=n):\"function\"==typeof define&&\"object\"==typeof define.amd&&define.amd?define(\"classnames\",[],(function(){return n})):window.classNames=n}();",
    "/*! @license DOMPurify | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.0.8/LICENSE */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).DOMPurify=t()}(this,(function(){\"use strict\";var e=Object.hasOwnProperty,t=Object.setPrototypeOf,n=Object.isFrozen,r=Object.keys,o=Object.freeze,i=Object.seal,a=Object.create,l=\"undefined\"!=typeof Reflect&&Reflect,c=l.apply,s=l.construct;c||(c=function(e,t,n){return e.apply(t,n)}),o||(o=function(e){return e}),i||(i=function(e){return e}),s||(s=function(e,t){return new(Function.prototype.bind.apply(e,[null].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(t))))});var u=k(Array.prototype.forEach),d=k(Array.prototype.indexOf),f=k(Array.prototype.join),p=k(Array.prototype.pop),m=k(Array.prototype.push),y=k(Array.prototype.slice),g=k(String.prototype.toLowerCase),h=k(String.prototype.match),v=k(String.prototype.replace),b=k(String.prototype.indexOf),T=k(String.prototype.trim),A=k(RegExp.prototype.test),x=L(RegExp),S=L(TypeError);function k(e){return function(t){for(var n=arguments.length,r=Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return c(e,t,r)}}function L(e){return function(){for(var t=arguments.length,n=Array(t),r=0;r<t;r++)n[r]=arguments[r];return s(e,n)}}function _(e,r){t&&t(e,null);for(var o=r.length;o--;){var i=r[o];if(\"string\"==typeof i){var a=g(i);a!==i&&(n(r)||(r[o]=a),i=a)}e[i]=!0}return e}function E(t){var n=a(null),r=void 0;for(r in t)c(e,t,[r])&&(n[r]=t[r]);return n}var M=o([\"a\",\"abbr\",\"acronym\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"bdi\",\"bdo\",\"big\",\"blink\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"center\",\"cite\",\"code\",\"col\",\"colgroup\",\"content\",\"data\",\"datalist\",\"dd\",\"decorator\",\"del\",\"details\",\"dfn\",\"dir\",\"div\",\"dl\",\"dt\",\"element\",\"em\",\"fieldset\",\"figcaption\",\"figure\",\"font\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"img\",\"input\",\"ins\",\"kbd\",\"label\",\"legend\",\"li\",\"main\",\"map\",\"mark\",\"marquee\",\"menu\",\"menuitem\",\"meter\",\"nav\",\"nobr\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"section\",\"select\",\"shadow\",\"small\",\"source\",\"spacer\",\"span\",\"strike\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"template\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\",\"tt\",\"u\",\"ul\",\"var\",\"video\",\"wbr\"]),D=o([\"svg\",\"a\",\"altglyph\",\"altglyphdef\",\"altglyphitem\",\"animatecolor\",\"animatemotion\",\"animatetransform\",\"audio\",\"canvas\",\"circle\",\"clippath\",\"defs\",\"desc\",\"ellipse\",\"filter\",\"font\",\"g\",\"glyph\",\"glyphref\",\"hkern\",\"image\",\"line\",\"lineargradient\",\"marker\",\"mask\",\"metadata\",\"mpath\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialgradient\",\"rect\",\"stop\",\"style\",\"switch\",\"symbol\",\"text\",\"textpath\",\"title\",\"tref\",\"tspan\",\"video\",\"view\",\"vkern\"]),N=o([\"feBlend\",\"feColorMatrix\",\"feComponentTransfer\",\"feComposite\",\"feConvolveMatrix\",\"feDiffuseLighting\",\"feDisplacementMap\",\"feDistantLight\",\"feFlood\",\"feFuncA\",\"feFuncB\",\"feFuncG\",\"feFuncR\",\"feGaussianBlur\",\"feMerge\",\"feMergeNode\",\"feMorphology\",\"feOffset\",\"fePointLight\",\"feSpecularLighting\",\"feSpotLight\",\"feTile\",\"feTurbulence\"]),O=o([\"math\",\"menclose\",\"merror\",\"mfenced\",\"mfrac\",\"mglyph\",\"mi\",\"mlabeledtr\",\"mmultiscripts\",\"mn\",\"mo\",\"mover\",\"mpadded\",\"mphantom\",\"mroot\",\"mrow\",\"ms\",\"mspace\",\"msqrt\",\"mstyle\",\"msub\",\"msup\",\"msubsup\",\"mtable\",\"mtd\",\"mtext\",\"mtr\",\"munder\",\"munderover\"]),R=o([\"#text\"]),w=o([\"accept\",\"action\",\"align\",\"alt\",\"autocapitalize\",\"autocomplete\",\"autopictureinpicture\",\"autoplay\",\"background\",\"bgcolor\",\"border\",\"capture\",\"cellpadding\",\"cellspacing\",\"checked\",\"cite\",\"class\",\"clear\",\"color\",\"cols\",\"colspan\",\"controls\",\"controlslist\",\"coords\",\"crossorigin\",\"datetime\",\"decoding\",\"default\",\"dir\",\"disabled\",\"disablepictureinpicture\",\"disableremoteplayback\",\"download\",\"draggable\",\"enctype\",\"enterkeyhint\",\"face\",\"for\",\"headers\",\"height\",\"hidden\",\"high\",\"href\",\"hreflang\",\"id\",\"inputmode\",\"integrity\",\"ismap\",\"kind\",\"label\",\"lang\",\"list\",\"loading\",\"loop\",\"low\",\"max\",\"maxlength\",\"media\",\"method\",\"min\",\"minlength\",\"multiple\",\"muted\",\"name\",\"noshade\",\"novalidate\",\"nowrap\",\"open\",\"optimum\",\"pattern\",\"placeholder\",\"playsinline\",\"poster\",\"preload\",\"pubdate\",\"radiogroup\",\"readonly\",\"rel\",\"required\",\"rev\",\"reversed\",\"role\",\"rows\",\"rowspan\",\"spellcheck\",\"scope\",\"selected\",\"shape\",\"size\",\"sizes\",\"span\",\"srclang\",\"start\",\"src\",\"srcset\",\"step\",\"style\",\"summary\",\"tabindex\",\"title\",\"translate\",\"type\",\"usemap\",\"valign\",\"value\",\"width\",\"xmlns\"]),F=o([\"accent-height\",\"accumulate\",\"additive\",\"alignment-baseline\",\"ascent\",\"attributename\",\"attributetype\",\"azimuth\",\"basefrequency\",\"baseline-shift\",\"begin\",\"bias\",\"by\",\"class\",\"clip\",\"clippathunits\",\"clip-path\",\"clip-rule\",\"color\",\"color-interpolation\",\"color-interpolation-filters\",\"color-profile\",\"color-rendering\",\"cx\",\"cy\",\"d\",\"dx\",\"dy\",\"diffuseconstant\",\"direction\",\"display\",\"divisor\",\"dur\",\"edgemode\",\"elevation\",\"end\",\"fill\",\"fill-opacity\",\"fill-rule\",\"filter\",\"filterunits\",\"flood-color\",\"flood-opacity\",\"font-family\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-variant\",\"font-weight\",\"fx\",\"fy\",\"g1\",\"g2\",\"glyph-name\",\"glyphref\",\"gradientunits\",\"gradienttransform\",\"height\",\"href\",\"id\",\"image-rendering\",\"in\",\"in2\",\"k\",\"k1\",\"k2\",\"k3\",\"k4\",\"kerning\",\"keypoints\",\"keysplines\",\"keytimes\",\"lang\",\"lengthadjust\",\"letter-spacing\",\"kernelmatrix\",\"kernelunitlength\",\"lighting-color\",\"local\",\"marker-end\",\"marker-mid\",\"marker-start\",\"markerheight\",\"markerunits\",\"markerwidth\",\"maskcontentunits\",\"maskunits\",\"max\",\"mask\",\"media\",\"method\",\"mode\",\"min\",\"name\",\"numoctaves\",\"offset\",\"operator\",\"opacity\",\"order\",\"orient\",\"orientation\",\"origin\",\"overflow\",\"paint-order\",\"path\",\"pathlength\",\"patterncontentunits\",\"patterntransform\",\"patternunits\",\"points\",\"preservealpha\",\"preserveaspectratio\",\"primitiveunits\",\"r\",\"rx\",\"ry\",\"radius\",\"refx\",\"refy\",\"repeatcount\",\"repeatdur\",\"restart\",\"result\",\"rotate\",\"scale\",\"seed\",\"shape-rendering\",\"specularconstant\",\"specularexponent\",\"spreadmethod\",\"startoffset\",\"stddeviation\",\"stitchtiles\",\"stop-color\",\"stop-opacity\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke\",\"stroke-width\",\"style\",\"surfacescale\",\"systemlanguage\",\"tabindex\",\"targetx\",\"targety\",\"transform\",\"text-anchor\",\"text-decoration\",\"text-rendering\",\"textlength\",\"type\",\"u1\",\"u2\",\"unicode\",\"values\",\"viewbox\",\"visibility\",\"version\",\"vert-adv-y\",\"vert-origin-x\",\"vert-origin-y\",\"width\",\"word-spacing\",\"wrap\",\"writing-mode\",\"xchannelselector\",\"ychannelselector\",\"x\",\"x1\",\"x2\",\"xmlns\",\"y\",\"y1\",\"y2\",\"z\",\"zoomandpan\"]),H=o([\"accent\",\"accentunder\",\"align\",\"bevelled\",\"close\",\"columnsalign\",\"columnlines\",\"columnspan\",\"denomalign\",\"depth\",\"dir\",\"display\",\"displaystyle\",\"encoding\",\"fence\",\"frame\",\"height\",\"href\",\"id\",\"largeop\",\"length\",\"linethickness\",\"lspace\",\"lquote\",\"mathbackground\",\"mathcolor\",\"mathsize\",\"mathvariant\",\"maxsize\",\"minsize\",\"movablelimits\",\"notation\",\"numalign\",\"open\",\"rowalign\",\"rowlines\",\"rowspacing\",\"rowspan\",\"rspace\",\"rquote\",\"scriptlevel\",\"scriptminsize\",\"scriptsizemultiplier\",\"selection\",\"separator\",\"separators\",\"stretchy\",\"subscriptshift\",\"supscriptshift\",\"symmetric\",\"voffset\",\"width\",\"xmlns\"]),C=o([\"xlink:href\",\"xml:id\",\"xlink:title\",\"xml:space\",\"xmlns:xlink\"]),z=i(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm),I=i(/<%[\\s\\S]*|[\\s\\S]*%>/gm),U=i(/^data-[\\-\\w.\\u00B7-\\uFFFF]/),j=i(/^aria-[\\-\\w]+$/),P=i(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i),G=i(/^(?:\\w+script|data):/i),W=i(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g),B=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};function q(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var K=function(){return\"undefined\"==typeof window?null:window},V=function(e,t){if(\"object\"!==(void 0===e?\"undefined\":B(e))||\"function\"!=typeof e.createPolicy)return null;var n=null,r=\"data-tt-policy-suffix\";t.currentScript&&t.currentScript.hasAttribute(r)&&(n=t.currentScript.getAttribute(r));var o=\"dompurify\"+(n?\"#\"+n:\"\");try{return e.createPolicy(o,{createHTML:function(e){return e}})}catch(e){return console.warn(\"TrustedTypes policy \"+o+\" could not be created.\"),null}};return function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:K(),n=function(t){return e(t)};if(n.version=\"2.0.15\",n.removed=[],!t||!t.document||9!==t.document.nodeType)return n.isSupported=!1,n;var i=t.document,a=!1,l=t.document,c=t.DocumentFragment,s=t.HTMLTemplateElement,k=t.Node,L=t.NodeFilter,Y=t.NamedNodeMap,X=void 0===Y?t.NamedNodeMap||t.MozNamedAttrMap:Y,$=t.Text,J=t.Comment,Q=t.DOMParser,Z=t.trustedTypes;if(\"function\"==typeof s){var ee=l.createElement(\"template\");ee.content&&ee.content.ownerDocument&&(l=ee.content.ownerDocument)}var te=V(Z,i),ne=te&&He?te.createHTML(\"\"):\"\",re=l,oe=re.implementation,ie=re.createNodeIterator,ae=re.getElementsByTagName,le=re.createDocumentFragment,ce=i.importNode,se=E(l).documentMode?l.documentMode:{},ue={};n.isSupported=oe&&void 0!==oe.createHTMLDocument&&9!==se;var de=z,fe=I,pe=U,me=j,ye=G,ge=W,he=P,ve=null,be=_({},[].concat(q(M),q(D),q(N),q(O),q(R))),Te=null,Ae=_({},[].concat(q(w),q(F),q(H),q(C))),xe=null,Se=null,ke=!0,Le=!0,_e=!1,Ee=!1,Me=!1,De=!1,Ne=!1,Oe=!1,Re=!1,we=!1,Fe=!1,He=!1,Ce=!0,ze=!0,Ie=!1,Ue={},je=_({},[\"annotation-xml\",\"audio\",\"colgroup\",\"desc\",\"foreignobject\",\"head\",\"iframe\",\"math\",\"mi\",\"mn\",\"mo\",\"ms\",\"mtext\",\"noembed\",\"noframes\",\"plaintext\",\"script\",\"style\",\"svg\",\"template\",\"thead\",\"title\",\"video\",\"xmp\"]),Pe=null,Ge=_({},[\"audio\",\"video\",\"img\",\"source\",\"image\",\"track\"]),We=null,Be=_({},[\"alt\",\"class\",\"for\",\"id\",\"label\",\"name\",\"pattern\",\"placeholder\",\"summary\",\"title\",\"value\",\"style\",\"xmlns\"]),qe=null,Ke=l.createElement(\"form\"),Ve=function(e){qe&&qe===e||(e&&\"object\"===(void 0===e?\"undefined\":B(e))||(e={}),e=E(e),ve=\"ALLOWED_TAGS\"in e?_({},e.ALLOWED_TAGS):be,Te=\"ALLOWED_ATTR\"in e?_({},e.ALLOWED_ATTR):Ae,We=\"ADD_URI_SAFE_ATTR\"in e?_(E(Be),e.ADD_URI_SAFE_ATTR):Be,Pe=\"ADD_DATA_URI_TAGS\"in e?_(E(Ge),e.ADD_DATA_URI_TAGS):Ge,xe=\"FORBID_TAGS\"in e?_({},e.FORBID_TAGS):{},Se=\"FORBID_ATTR\"in e?_({},e.FORBID_ATTR):{},Ue=\"USE_PROFILES\"in e&&e.USE_PROFILES,ke=!1!==e.ALLOW_ARIA_ATTR,Le=!1!==e.ALLOW_DATA_ATTR,_e=e.ALLOW_UNKNOWN_PROTOCOLS||!1,Ee=e.SAFE_FOR_JQUERY||!1,Me=e.SAFE_FOR_TEMPLATES||!1,De=e.WHOLE_DOCUMENT||!1,Re=e.RETURN_DOM||!1,we=e.RETURN_DOM_FRAGMENT||!1,Fe=e.RETURN_DOM_IMPORT||!1,He=e.RETURN_TRUSTED_TYPE||!1,Oe=e.FORCE_BODY||!1,Ce=!1!==e.SANITIZE_DOM,ze=!1!==e.KEEP_CONTENT,Ie=e.IN_PLACE||!1,he=e.ALLOWED_URI_REGEXP||he,Me&&(Le=!1),we&&(Re=!0),Ue&&(ve=_({},[].concat(q(R))),Te=[],!0===Ue.html&&(_(ve,M),_(Te,w)),!0===Ue.svg&&(_(ve,D),_(Te,F),_(Te,C)),!0===Ue.svgFilters&&(_(ve,N),_(Te,F),_(Te,C)),!0===Ue.mathMl&&(_(ve,O),_(Te,H),_(Te,C))),e.ADD_TAGS&&(ve===be&&(ve=E(ve)),_(ve,e.ADD_TAGS)),e.ADD_ATTR&&(Te===Ae&&(Te=E(Te)),_(Te,e.ADD_ATTR)),e.ADD_URI_SAFE_ATTR&&_(We,e.ADD_URI_SAFE_ATTR),ze&&(ve[\"#text\"]=!0),De&&_(ve,[\"html\",\"head\",\"body\"]),ve.table&&(_(ve,[\"tbody\"]),delete xe.tbody),o&&o(e),qe=e)},Ye=function(e){m(n.removed,{element:e});try{e.parentNode.removeChild(e)}catch(t){e.outerHTML=ne}},Xe=function(e,t){try{m(n.removed,{attribute:t.getAttributeNode(e),from:t})}catch(e){m(n.removed,{attribute:null,from:t})}t.removeAttribute(e)},$e=function(e){var t=void 0,n=void 0;if(Oe)e=\"<remove></remove>\"+e;else{var r=h(e,/^[\\r\\n\\t ]+/);n=r&&r[0]}var o=te?te.createHTML(e):e;try{t=(new Q).parseFromString(o,\"text/html\")}catch(e){}if(a&&_(xe,[\"title\"]),!t||!t.documentElement){var i=(t=oe.createHTMLDocument(\"\")).body;i.parentNode.removeChild(i.parentNode.firstElementChild),i.outerHTML=o}return e&&n&&t.body.insertBefore(l.createTextNode(n),t.body.childNodes[0]||null),ae.call(t,De?\"html\":\"body\")[0]};n.isSupported&&function(){try{var e=$e(\"<x/><title>&lt;/title&gt;&lt;img&gt;\");A(/<\\/title/,e.querySelector(\"title\").innerHTML)&&(a=!0)}catch(e){}}();var Je=function(e){return ie.call(e.ownerDocument||e,e,L.SHOW_ELEMENT|L.SHOW_COMMENT|L.SHOW_TEXT,(function(){return L.FILTER_ACCEPT}),!1)},Qe=function(e){return!(e instanceof $||e instanceof J)&&!(\"string\"==typeof e.nodeName&&\"string\"==typeof e.textContent&&\"function\"==typeof e.removeChild&&e.attributes instanceof X&&\"function\"==typeof e.removeAttribute&&\"function\"==typeof e.setAttribute&&\"string\"==typeof e.namespaceURI)},Ze=function(e){return\"object\"===(void 0===k?\"undefined\":B(k))?e instanceof k:e&&\"object\"===(void 0===e?\"undefined\":B(e))&&\"number\"==typeof e.nodeType&&\"string\"==typeof e.nodeName},et=function(e,t,r){ue[e]&&u(ue[e],(function(e){e.call(n,t,r,qe)}))},tt=function(e){var t=void 0;if(et(\"beforeSanitizeElements\",e,null),Qe(e))return Ye(e),!0;if(h(e.nodeName,/[\\u0080-\\uFFFF]/))return Ye(e),!0;var r=g(e.nodeName);if(et(\"uponSanitizeElement\",e,{tagName:r,allowedTags:ve}),(\"svg\"===r||\"math\"===r)&&0!==e.querySelectorAll(\"p, br\").length)return Ye(e),!0;if(!ve[r]||xe[r]){if(ze&&!je[r]&&\"function\"==typeof e.insertAdjacentHTML)try{var o=e.innerHTML;e.insertAdjacentHTML(\"AfterEnd\",te?te.createHTML(o):o)}catch(e){}return Ye(e),!0}return\"noscript\"===r&&A(/<\\/noscript/i,e.innerHTML)||\"noembed\"===r&&A(/<\\/noembed/i,e.innerHTML)?(Ye(e),!0):(!Ee||Ze(e.firstElementChild)||Ze(e.content)&&Ze(e.content.firstElementChild)||!A(/</g,e.textContent)||(m(n.removed,{element:e.cloneNode()}),e.innerHTML?e.innerHTML=v(e.innerHTML,/</g,\"&lt;\"):e.innerHTML=v(e.textContent,/</g,\"&lt;\")),Me&&3===e.nodeType&&(t=e.textContent,t=v(t,de,\" \"),t=v(t,fe,\" \"),e.textContent!==t&&(m(n.removed,{element:e.cloneNode()}),e.textContent=t)),et(\"afterSanitizeElements\",e,null),!1)},nt=function(e,t,n){if(Ce&&(\"id\"===t||\"name\"===t)&&(n in l||n in Ke))return!1;if(Le&&A(pe,t));else if(ke&&A(me,t));else{if(!Te[t]||Se[t])return!1;if(We[t]);else if(A(he,v(n,ge,\"\")));else if(\"src\"!==t&&\"xlink:href\"!==t&&\"href\"!==t||\"script\"===e||0!==b(n,\"data:\")||!Pe[e]){if(_e&&!A(ye,v(n,ge,\"\")));else if(n)return!1}else;}return!0},rt=function(e){var t=void 0,o=void 0,i=void 0,a=void 0,l=void 0;et(\"beforeSanitizeAttributes\",e,null);var c=e.attributes;if(c){var s={attrName:\"\",attrValue:\"\",keepAttr:!0,allowedAttributes:Te};for(l=c.length;l--;){var u=t=c[l],m=u.name,h=u.namespaceURI;if(o=T(t.value),i=g(m),s.attrName=i,s.attrValue=o,s.keepAttr=!0,s.forceKeepAttr=void 0,et(\"uponSanitizeAttribute\",e,s),o=s.attrValue,!s.forceKeepAttr){if(\"name\"===i&&\"IMG\"===e.nodeName&&c.id)a=c.id,c=y(c,[]),Xe(\"id\",e),Xe(m,e),d(c,a)>l&&e.setAttribute(\"id\",a.value);else{if(\"INPUT\"===e.nodeName&&\"type\"===i&&\"file\"===o&&s.keepAttr&&(Te[i]||!Se[i]))continue;\"id\"===m&&e.setAttribute(m,\"\"),Xe(m,e)}if(s.keepAttr)if(Ee&&A(/\\/>/i,o))Xe(m,e);else if(A(/svg|math/i,e.namespaceURI)&&A(x(\"</(\"+f(r(je),\"|\")+\")\",\"i\"),o))Xe(m,e);else{Me&&(o=v(o,de,\" \"),o=v(o,fe,\" \"));var b=e.nodeName.toLowerCase();if(nt(b,i,o))try{h?e.setAttributeNS(h,m,o):e.setAttribute(m,o),p(n.removed)}catch(e){}}}}et(\"afterSanitizeAttributes\",e,null)}},ot=function e(t){var n=void 0,r=Je(t);for(et(\"beforeSanitizeShadowDOM\",t,null);n=r.nextNode();)et(\"uponSanitizeShadowNode\",n,null),tt(n)||(n.content instanceof c&&e(n.content),rt(n));et(\"afterSanitizeShadowDOM\",t,null)};return n.sanitize=function(e,r){var o=void 0,a=void 0,l=void 0,s=void 0,u=void 0;if(e||(e=\"\\x3c!--\\x3e\"),\"string\"!=typeof e&&!Ze(e)){if(\"function\"!=typeof e.toString)throw S(\"toString is not a function\");if(\"string\"!=typeof(e=e.toString()))throw S(\"dirty is not a string, aborting\")}if(!n.isSupported){if(\"object\"===B(t.toStaticHTML)||\"function\"==typeof t.toStaticHTML){if(\"string\"==typeof e)return t.toStaticHTML(e);if(Ze(e))return t.toStaticHTML(e.outerHTML)}return e}if(Ne||Ve(r),n.removed=[],\"string\"==typeof e&&(Ie=!1),Ie);else if(e instanceof k)1===(a=(o=$e(\"\\x3c!--\\x3e\")).ownerDocument.importNode(e,!0)).nodeType&&\"BODY\"===a.nodeName||\"HTML\"===a.nodeName?o=a:o.appendChild(a);else{if(!Re&&!Me&&!De&&-1===e.indexOf(\"<\"))return te&&He?te.createHTML(e):e;if(!(o=$e(e)))return Re?null:ne}o&&Oe&&Ye(o.firstChild);for(var d=Je(Ie?e:o);l=d.nextNode();)3===l.nodeType&&l===s||tt(l)||(l.content instanceof c&&ot(l.content),rt(l),s=l);if(s=null,Ie)return e;if(Re){if(we)for(u=le.call(o.ownerDocument);o.firstChild;)u.appendChild(o.firstChild);else u=o;return Fe&&(u=ce.call(i,u,!0)),u}var f=De?o.outerHTML:o.innerHTML;return Me&&(f=v(f,de,\" \"),f=v(f,fe,\" \")),te&&He?te.createHTML(f):f},n.setConfig=function(e){Ve(e),Ne=!0},n.clearConfig=function(){qe=null,Ne=!1},n.isValidAttribute=function(e,t,n){qe||Ve({});var r=g(e),o=g(t);return nt(r,o,n)},n.addHook=function(e,t){\"function\"==typeof t&&(ue[e]=ue[e]||[],m(ue[e],t))},n.removeHook=function(e){ue[e]&&p(ue[e])},n.removeHooks=function(e){ue[e]&&(ue[e]=[])},n.removeAllHooks=function(){ue={}},n}()}));",
    "/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\"use strict\";var matchHtmlRegExp=/[\"'&<>]/;function escapeHtml(e){var t,a=\"\"+e,r=matchHtmlRegExp.exec(a);if(!r)return a;var c=\"\",s=0,n=0;for(s=r.index;s<a.length;s++){switch(a.charCodeAt(s)){case 34:t=\"&quot;\";break;case 38:t=\"&amp;\";break;case 39:t=\"&#39;\";break;case 60:t=\"&lt;\";break;case 62:t=\"&gt;\";break;default:continue}n!==s&&(c+=a.substring(n,s)),n=s+1,c+=t}return n!==s?c+a.substring(n,s):c}module.exports=escapeHtml;",
    "\"use strict\";var matchOperatorsRe=/[|\\\\{}()[\\]^$+*?.]/g;module.exports=function(r){if(\"string\"!=typeof r)throw new TypeError(\"Expected a string\");return r.replace(matchOperatorsRe,\"\\\\$&\")};",
    "!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t():\"function\"==typeof define&&define.amd?define(t):t()}(0,(function(){\"use strict\";function e(e){var t=!0,n=!1,o=null,d={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,\"datetime-local\":!0};function i(e){return!!(e&&e!==document&&\"HTML\"!==e.nodeName&&\"BODY\"!==e.nodeName&&\"classList\"in e&&\"contains\"in e.classList)}function s(e){e.classList.contains(\"focus-visible\")||(e.classList.add(\"focus-visible\"),e.setAttribute(\"data-focus-visible-added\",\"\"))}function u(e){t=!1}function a(){document.addEventListener(\"mousemove\",c),document.addEventListener(\"mousedown\",c),document.addEventListener(\"mouseup\",c),document.addEventListener(\"pointermove\",c),document.addEventListener(\"pointerdown\",c),document.addEventListener(\"pointerup\",c),document.addEventListener(\"touchmove\",c),document.addEventListener(\"touchstart\",c),document.addEventListener(\"touchend\",c)}function c(e){e.target.nodeName&&\"html\"===e.target.nodeName.toLowerCase()||(t=!1,document.removeEventListener(\"mousemove\",c),document.removeEventListener(\"mousedown\",c),document.removeEventListener(\"mouseup\",c),document.removeEventListener(\"pointermove\",c),document.removeEventListener(\"pointerdown\",c),document.removeEventListener(\"pointerup\",c),document.removeEventListener(\"touchmove\",c),document.removeEventListener(\"touchstart\",c),document.removeEventListener(\"touchend\",c))}document.addEventListener(\"keydown\",(function(n){n.metaKey||n.altKey||n.ctrlKey||(i(e.activeElement)&&s(e.activeElement),t=!0)}),!0),document.addEventListener(\"mousedown\",u,!0),document.addEventListener(\"pointerdown\",u,!0),document.addEventListener(\"touchstart\",u,!0),document.addEventListener(\"visibilitychange\",(function(e){\"hidden\"===document.visibilityState&&(n&&(t=!0),a())}),!0),a(),e.addEventListener(\"focus\",(function(e){var n,o,u;i(e.target)&&(t||(n=e.target,o=n.type,\"INPUT\"===(u=n.tagName)&&d[o]&&!n.readOnly||\"TEXTAREA\"===u&&!n.readOnly||n.isContentEditable))&&s(e.target)}),!0),e.addEventListener(\"blur\",(function(e){var t;i(e.target)&&(e.target.classList.contains(\"focus-visible\")||e.target.hasAttribute(\"data-focus-visible-added\"))&&(n=!0,window.clearTimeout(o),o=window.setTimeout((function(){n=!1}),100),(t=e.target).hasAttribute(\"data-focus-visible-added\")&&(t.classList.remove(\"focus-visible\"),t.removeAttribute(\"data-focus-visible-added\")))}),!0),e.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&e.host?e.host.setAttribute(\"data-js-focus-visible\",\"\"):e.nodeType===Node.DOCUMENT_NODE&&(document.documentElement.classList.add(\"js-focus-visible\"),document.documentElement.setAttribute(\"data-js-focus-visible\",\"\"))}if(\"undefined\"!=typeof window&&\"undefined\"!=typeof document){var t;window.applyFocusVisiblePolyfill=e;try{t=new CustomEvent(\"focus-visible-polyfill-ready\")}catch(e){(t=document.createEvent(\"CustomEvent\")).initCustomEvent(\"focus-visible-polyfill-ready\",!1,!1,{})}window.dispatchEvent(t)}\"undefined\"!=typeof document&&e(document)}));",
    "var FUNC_ERROR_TEXT=\"Expected a function\",NAN=NaN,symbolTag=\"[object Symbol]\",reTrim=/^\\s+|\\s+$/g,reIsBadHex=/^[-+]0x[0-9a-f]+$/i,reIsBinary=/^0b[01]+$/i,reIsOctal=/^0o[0-7]+$/i,freeParseInt=parseInt,freeGlobal=\"object\"==typeof global&&global&&global.Object===Object&&global,freeSelf=\"object\"==typeof self&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function(\"return this\")(),objectProto=Object.prototype,objectToString=objectProto.toString,nativeMax=Math.max,nativeMin=Math.min,now=function(){return root.Date.now()};function debounce(e,t,r){var o,n,i,u,a,f,c=0,l=!1,b=!1,s=!0;if(\"function\"!=typeof e)throw new TypeError(FUNC_ERROR_TEXT);function v(t){var r=o,i=n;return o=n=void 0,c=t,u=e.apply(i,r)}function m(e){return c=e,a=setTimeout(y,t),l?v(e):u}function j(e){var r=e-f;return void 0===f||r>=t||r<0||b&&e-c>=i}function y(){var e=now();if(j(e))return p(e);a=setTimeout(y,function(e){var r=t-(e-f);return b?nativeMin(r,i-(e-c)):r}(e))}function p(e){return a=void 0,s&&o?v(e):(o=n=void 0,u)}function O(){var e=now(),r=j(e);if(o=arguments,n=this,f=e,r){if(void 0===a)return m(f);if(b)return a=setTimeout(y,t),v(f)}return void 0===a&&(a=setTimeout(y,t)),u}return t=toNumber(t)||0,isObject(r)&&(l=!!r.leading,i=(b=\"maxWait\"in r)?nativeMax(toNumber(r.maxWait)||0,t):i,s=\"trailing\"in r?!!r.trailing:s),O.cancel=function(){void 0!==a&&clearTimeout(a),c=0,o=f=n=a=void 0},O.flush=function(){return void 0===a?u:p(now())},O}function isObject(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}function isObjectLike(e){return!!e&&\"object\"==typeof e}function isSymbol(e){return\"symbol\"==typeof e||isObjectLike(e)&&objectToString.call(e)==symbolTag}function toNumber(e){if(\"number\"==typeof e)return e;if(isSymbol(e))return NAN;if(isObject(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=isObject(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=e.replace(reTrim,\"\");var r=reIsBinary.test(e);return r||reIsOctal.test(e)?freeParseInt(e.slice(2),r?2:8):reIsBadHex.test(e)?NAN:+e}module.exports=debounce;",
    "var n,l,u,t,i,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(e,n){for(var t in n)e[t]=n[t];return e}function a(e){var n=e.parentNode;n&&n.removeChild(e)}function p(e,n,t){var o,_,l,r=arguments,u={};for(l in n)\"key\"==l?o=n[l]:\"ref\"==l?_=n[l]:u[l]=n[l];if(arguments.length>3)for(t=[t],l=3;l<arguments.length;l++)t.push(r[l]);if(null!=t&&(u.children=t),\"function\"==typeof e&&null!=e.defaultProps)for(l in e.defaultProps)void 0===u[l]&&(u[l]=e.defaultProps[l]);return v(e,u,o,_,null)}function v(e,t,o,_,l){var r={type:e,props:t,key:o,ref:_,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:l};return null==l&&(r.__v=r),null!=n.vnode&&n.vnode(r),r}function h(e){return e.children}function y(e,n){this.props=e,this.context=n}function d(e,n){if(null==n)return e.__?d(e.__,e.__.__k.indexOf(e)+1):null;for(var t;n<e.__k.length;n++)if(null!=(t=e.__k[n])&&null!=t.__e)return t.__e;return\"function\"==typeof e.type?d(e):null}function _(e){var n,t;if(null!=(e=e.__)&&null!=e.__c){for(e.__e=e.__c.base=null,n=0;n<e.__k.length;n++)if(null!=(t=e.__k[n])&&null!=t.__e){e.__e=e.__c.base=t.__e;break}return _(e)}}function w(e){(!e.__d&&(e.__d=!0)&&u.push(e)&&!x.__r++||i!==n.debounceRendering)&&((i=n.debounceRendering)||t)(x)}function x(){for(var e;x.__r=u.length;)e=u.sort((function(e,n){return e.__v.__b-n.__v.__b})),u=[],e.some((function(e){var n,t,o,l,r,u,i;e.__d&&(u=(r=(n=e).__v).__e,(i=n.__P)&&(t=[],(o=s({},r)).__v=o,l=z(i,r,o,n.__n,void 0!==i.ownerSVGElement,null,t,null==u?d(r):u),N(t,r),l!=u&&_(r)))}))}function k(n,t,o,_,l,r,u,i,s,c){var p,y,g,k,x,b,w,C=_&&_.__k||e,P=C.length;for(s==f&&(s=null!=u?u[0]:P?d(_,0):null),o.__k=[],p=0;p<t.length;p++)if(null!=(k=o.__k[p]=null==(k=t[p])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(h,{children:k},null,null,null):null!=k.__e||null!=k.__c?v(k.type,k.props,k.key,null,k.__v):k)){if(k.__=o,k.__b=o.__b+1,null===(g=C[p])||g&&k.key==g.key&&k.type===g.type)C[p]=void 0;else for(y=0;y<P;y++){if((g=C[y])&&k.key==g.key&&k.type===g.type){C[y]=void 0;break}g=null}x=z(n,k,g=g||f,l,r,u,i,s,c),(y=k.ref)&&g.ref!=y&&(w||(w=[]),g.ref&&w.push(g.ref,null,k),w.push(y,k.__c||x,k)),null!=x?(null==b&&(b=x),s=m(n,k,g,C,u,x,s),c||\"option\"!=o.type?\"function\"==typeof o.type&&(o.__d=s):n.value=\"\"):s&&g.__e==s&&s.parentNode!=n&&(s=d(g))}if(o.__e=b,null!=u&&\"function\"!=typeof o.type)for(p=u.length;p--;)null!=u[p]&&a(u[p]);for(p=P;p--;)null!=C[p]&&j(C[p],C[p]);if(w)for(p=0;p<w.length;p++)$(w[p],w[++p],w[++p])}function m(e,n,t,o,_,l,r){var u,i,s;if(void 0!==n.__d)u=n.__d,n.__d=void 0;else if(_==t||l!=r||null==l.parentNode)e:if(null==r||r.parentNode!==e)e.appendChild(l),u=null;else{for(i=r,s=0;(i=i.nextSibling)&&s<o.length;s+=2)if(i==l)break e;e.insertBefore(l,r),u=r}return void 0!==u?u:l.nextSibling}function g(e,n,t,o,_){var l;for(l in t)\"children\"===l||\"key\"===l||l in n||A(e,l,null,t[l],o);for(l in n)_&&\"function\"!=typeof n[l]||\"children\"===l||\"key\"===l||\"value\"===l||\"checked\"===l||t[l]===n[l]||A(e,l,n[l],t[l],o)}function b(e,n,t){\"-\"===n[0]?e.setProperty(n,t):e[n]=null==t?\"\":\"number\"!=typeof t||c.test(n)?t:t+\"px\"}function A(e,n,t,o,_){var l,r;if(_&&\"className\"==n&&(n=\"class\"),\"style\"===n)if(\"string\"==typeof t)e.style=t;else{if(\"string\"==typeof o&&(e.style=o=\"\"),o)for(n in o)t&&n in t||b(e.style,n,\"\");if(t)for(n in t)o&&t[n]===o[n]||b(e.style,n,t[n])}else\"o\"===n[0]&&\"n\"===n[1]?(l=n!==(n=n.replace(/Capture$/,\"\")),(r=n.toLowerCase())in e&&(n=r),n=n.slice(2),e.l||(e.l={}),e.l[n]=t,t?o||e.addEventListener(n,P,l):e.removeEventListener(n,P,l)):\"list\"!==n&&\"tagName\"!==n&&\"form\"!==n&&\"type\"!==n&&\"size\"!==n&&\"download\"!==n&&\"href\"!==n&&!_&&n in e?e[n]=null==t?\"\":t:\"function\"!=typeof t&&\"dangerouslySetInnerHTML\"!==n&&(n!==(n=n.replace(/xlink:?/,\"\"))?null==t||!1===t?e.removeAttributeNS(\"http://www.w3.org/1999/xlink\",n.toLowerCase()):e.setAttributeNS(\"http://www.w3.org/1999/xlink\",n.toLowerCase(),t):null==t||!1===t&&!/^ar/.test(n)?e.removeAttribute(n):e.setAttribute(n,t))}function P(e){this.l[e.type](n.event?n.event(e):e)}function C(e,n,t){var o,_;for(o=0;o<e.__k.length;o++)(_=e.__k[o])&&(_.__=e,_.__e&&(\"function\"==typeof _.type&&_.__k.length>1&&C(_,n,t),n=m(t,_,_,e.__k,null,_.__e,n),\"function\"==typeof e.type&&(e.__d=n)))}function z(e,t,o,_,l,r,u,i,c){var p,f,a,d,v,m,g,x,b,w,P,S=t.type;if(void 0!==t.constructor)return null;(p=n.__b)&&p(t);try{e:if(\"function\"==typeof S){if(x=t.props,b=(p=S.contextType)&&_[p.__c],w=p?b?b.props.value:p.__:_,o.__c?g=(f=t.__c=o.__c).__=f.__E:(\"prototype\"in S&&S.prototype.render?t.__c=f=new S(x,w):(t.__c=f=new y(x,w),f.constructor=S,f.render=H),b&&b.sub(f),f.props=x,f.state||(f.state={}),f.context=w,f.__n=_,a=f.__d=!0,f.__h=[]),null==f.__s&&(f.__s=f.state),null!=S.getDerivedStateFromProps&&(f.__s==f.state&&(f.__s=s({},f.__s)),s(f.__s,S.getDerivedStateFromProps(x,f.__s))),d=f.props,v=f.state,a)null==S.getDerivedStateFromProps&&null!=f.componentWillMount&&f.componentWillMount(),null!=f.componentDidMount&&f.__h.push(f.componentDidMount);else{if(null==S.getDerivedStateFromProps&&x!==d&&null!=f.componentWillReceiveProps&&f.componentWillReceiveProps(x,w),!f.__e&&null!=f.shouldComponentUpdate&&!1===f.shouldComponentUpdate(x,f.__s,w)||t.__v===o.__v){f.props=x,f.state=f.__s,t.__v!==o.__v&&(f.__d=!1),f.__v=t,t.__e=o.__e,t.__k=o.__k,f.__h.length&&u.push(f),C(t,i,e);break e}null!=f.componentWillUpdate&&f.componentWillUpdate(x,f.__s,w),null!=f.componentDidUpdate&&f.__h.push((function(){f.componentDidUpdate(d,v,m)}))}f.context=w,f.props=x,f.state=f.__s,(p=n.__r)&&p(t),f.__d=!1,f.__v=t,f.__P=e,p=f.render(f.props,f.state,f.context),f.state=f.__s,null!=f.getChildContext&&(_=s(s({},_),f.getChildContext())),a||null==f.getSnapshotBeforeUpdate||(m=f.getSnapshotBeforeUpdate(d,v)),P=null!=p&&p.type==h&&null==p.key?p.props.children:p,k(e,Array.isArray(P)?P:[P],t,o,_,l,r,u,i,c),f.base=t.__e,f.__h.length&&u.push(f),g&&(f.__E=f.__=null),f.__e=!1}else null==r&&t.__v===o.__v?(t.__k=o.__k,t.__e=o.__e):t.__e=T(o.__e,t,o,_,l,r,u,c);(p=n.diffed)&&p(t)}catch(e){t.__v=null,n.__e(e,t,o)}return t.__e}function N(e,t){n.__c&&n.__c(t,e),e.some((function(t){try{e=t.__h,t.__h=[],e.some((function(e){e.call(t)}))}catch(e){n.__e(e,t.__v)}}))}function T(n,t,o,_,l,r,u,i){var s,c,p,a,d,h=o.props,v=t.props;if(l=\"svg\"===t.type||l,null!=r)for(s=0;s<r.length;s++)if(null!=(c=r[s])&&((null===t.type?3===c.nodeType:c.localName===t.type)||n==c)){n=c,r[s]=null;break}if(null==n){if(null===t.type)return document.createTextNode(v);n=l?document.createElementNS(\"http://www.w3.org/2000/svg\",t.type):document.createElement(t.type,v.is&&{is:v.is}),r=null,i=!1}if(null===t.type)h!==v&&n.data!==v&&(n.data=v);else{if(null!=r&&(r=e.slice.call(n.childNodes)),p=(h=o.props||f).dangerouslySetInnerHTML,a=v.dangerouslySetInnerHTML,!i){if(null!=r)for(h={},d=0;d<n.attributes.length;d++)h[n.attributes[d].name]=n.attributes[d].value;(a||p)&&(a&&p&&a.__html==p.__html||(n.innerHTML=a&&a.__html||\"\"))}g(n,v,h,l,i),a?t.__k=[]:(s=t.props.children,k(n,Array.isArray(s)?s:[s],t,o,_,\"foreignObject\"!==t.type&&l,r,u,f,i)),i||(\"value\"in v&&void 0!==(s=v.value)&&s!==n.value&&A(n,\"value\",s,h.value,!1),\"checked\"in v&&void 0!==(s=v.checked)&&s!==n.checked&&A(n,\"checked\",s,h.checked,!1))}return n}function $(e,t,o){try{\"function\"==typeof e?e(t):e.current=t}catch(e){n.__e(e,o)}}function j(e,t,o){var _,l,r;if(n.unmount&&n.unmount(e),(_=e.ref)&&(_.current&&_.current!==e.__e||$(_,null,t)),o||\"function\"==typeof e.type||(o=null!=(l=e.__e)),e.__e=e.__d=void 0,null!=(_=e.__c)){if(_.componentWillUnmount)try{_.componentWillUnmount()}catch(e){n.__e(e,t)}_.base=_.__P=null}if(_=e.__k)for(r=0;r<_.length;r++)_[r]&&j(_[r],t,o);null!=l&&a(l)}function H(e,n,t){return this.constructor(e,t)}function I(t,_,l){var r,u,i;n.__&&n.__(t,_),u=(r=l===o)?null:l&&l.__k||_.__k,t=p(h,null,[t]),i=[],z(_,(r?_:l||_).__k=t,u||f,f,void 0!==_.ownerSVGElement,l&&!r?[l]:u?null:_.childNodes.length?e.slice.call(_.childNodes):null,i,l||f,r),N(i,t)}n={__e:function(e,n){for(var t,o;n=n.__;)if((t=n.__c)&&!t.__)try{if(t.constructor&&null!=t.constructor.getDerivedStateFromError&&(o=!0,t.setState(t.constructor.getDerivedStateFromError(e))),null!=t.componentDidCatch&&(o=!0,t.componentDidCatch(e)),o)return w(t.__E=t)}catch(n){e=n}throw e}},l=function(e){return null!=e&&void 0===e.constructor},y.prototype.setState=function(e,n){var t;t=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof e&&(e=e(s({},t),this.props)),e&&s(t,e),null!=e&&this.__v&&(n&&this.__h.push(n),w(this))},y.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),w(this))},y.prototype.render=h,u=[],t=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,x.__r=0,o=f,r=0,exports.render=I,exports.hydrate=function(e,n){I(e,n,o)},exports.createElement=p,exports.h=p,exports.Fragment=h,exports.createRef=function(){return{current:null}},exports.isValidElement=l,exports.Component=y,exports.cloneElement=function(e,n,t){var o,_,l,r=arguments,u=s({},e.props);for(l in n)\"key\"==l?o=n[l]:\"ref\"==l?_=n[l]:u[l]=n[l];if(arguments.length>3)for(t=[t],l=3;l<arguments.length;l++)t.push(r[l]);return null!=t&&(u.children=t),v(e.type,u,o||e.key,_||e.ref,null)},exports.createContext=function(e,n){var t={__c:n=\"__cC\"+r++,__:e,Consumer:function(e,n){return e.children(n)},Provider:function(e,t,o){return this.getChildContext||(t=[],(o={})[n]=this,this.getChildContext=function(){return o},this.shouldComponentUpdate=function(e){this.props.value!==e.value&&t.some(w)},this.sub=function(e){t.push(e);var n=e.componentWillUnmount;e.componentWillUnmount=function(){t.splice(t.indexOf(e),1),n&&n.call(e)}}),e.children}};return t.Provider.__=t.Consumer.contextType=t},exports.toChildArray=function e(n,t){return t=t||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some((function(n){e(n,t)})):t.push(n)),t},exports.__u=j,exports.options=n;",
    "var n,t,r,u=require(\"preact\"),o=0,i=[],c=u.options.__r,e=u.options.diffed,f=u.options.__c,a=u.options.unmount;function p(_,n){u.options.__h&&u.options.__h(t,_,o||n),o=0;var e=t.__H||(t.__H={__:[],__h:[]});return _>=e.__.length&&e.__.push({}),e.__[_]}function v(_){return o=1,s(A,_)}function s(_,o,u){var e=p(n++,2);return e.t=_,e.__c||(e.__c=t,e.__=[u?u(o):A(void 0,o),function(_){var n=e.t(e.__[0],_);e.__[0]!==n&&(e.__=[n,e.__[1]],e.__c.setState({}))}]),e.__}function x(_,o){var e=p(n++,4);!u.options.__s&&q(e.__H,o)&&(e.__=_,e.__H=o,t.__h.push(e))}function m(_,t){var o=p(n++,7);return q(o.__H,t)?(o.__H=t,o.__h=_,o.__=_()):o.__}function y(){i.some((function(n){if(n.__P)try{n.__H.__h.forEach(h),n.__H.__h.forEach(_),n.__H.__h=[]}catch(_){return n.__H.__h=[],u.options.__e(_,n.__v),!0}})),i=[]}u.options.__r=function(o){c&&c(o),n=0;var u=(t=o.__c).__H;u&&(u.__h.forEach(h),u.__h.forEach(_),u.__h=[])},u.options.diffed=function(_){e&&e(_);var n=_.__c;n&&n.__H&&n.__H.__h.length&&(1!==i.push(n)&&r===u.options.requestAnimationFrame||((r=u.options.requestAnimationFrame)||function(_){var n,t=function(){clearTimeout(o),l&&cancelAnimationFrame(n),setTimeout(_)},o=setTimeout(t,100);l&&(n=requestAnimationFrame(t))})(y))},u.options.__c=function(n,t){t.some((function(n){try{n.__h.forEach(h),n.__h=n.__h.filter((function(n){return!n.__||_(n)}))}catch(_){t.some((function(_){_.__h&&(_.__h=[])})),t=[],u.options.__e(_,n.__v)}})),f&&f(n,t)},u.options.unmount=function(_){a&&a(_);var n=_.__c;if(n&&n.__H)try{n.__H.__.forEach(h)}catch(_){u.options.__e(_,n.__v)}};var l=\"function\"==typeof requestAnimationFrame;function h(_){\"function\"==typeof _.u&&_.u()}function _(_){_.u=_.__()}function q(_,n){return!_||n.some((function(n,t){return n!==_[t]}))}function A(_,n){return\"function\"==typeof n?n(_):n}exports.useState=v,exports.useReducer=s,exports.useEffect=function(_,o){var e=p(n++,3);!u.options.__s&&q(e.__H,o)&&(e.__=_,e.__H=o,t.__H.__h.push(e))},exports.useLayoutEffect=x,exports.useRef=function(_){return o=5,m((function(){return{current:_}}),[])},exports.useImperativeHandle=function(_,n,t){o=6,x((function(){\"function\"==typeof _?_(n()):_&&(_.current=n())}),null==t?t:t.concat(_))},exports.useMemo=m,exports.useCallback=function(_,n){return o=8,m((function(){return _}),n)},exports.useContext=function(_){var o=t.context[_.__c],u=p(n++,9);return u.__c=_,o?(null==u.__&&(u.__=!0,o.sub(t)),o.props.value):_.__},exports.useDebugValue=function(_,n){u.options.useDebugValue&&u.options.useDebugValue(n?n(_):_)},exports.useErrorBoundary=function(_){var o=p(n++,10),u=v();return o.__=_,t.componentDidCatch||(t.componentDidCatch=function(_){o.__&&o.__(_),u[1](_)}),[u[0],function(){u[1](void 0)}]};",
    "\"use strict\";var ReactPropTypesSecret=require(\"./lib/ReactPropTypesSecret\");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function e(e,t,n,r,o,p){if(p!==ReactPropTypesSecret){var c=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");throw c.name=\"Invariant Violation\",c}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return n.PropTypes=n,n};",
    "var ReactIs,throwOnDirectAccess;module.exports=require(\"./factoryWithThrowingShims\")();",
    "\"use strict\";var ReactPropTypesSecret=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";module.exports=ReactPropTypesSecret;",
    "\"use strict\";var strictUriEncode=require(\"strict-uri-encode\");exports.extract=function(r){return r.split(\"?\")[1]||\"\"},exports.parse=function(r){return\"string\"!=typeof r?{}:(r=r.trim().replace(/^(\\?|#|&)/,\"\"))?r.split(\"&\").reduce((function(r,t){var e=t.replace(/\\+/g,\" \").split(\"=\"),n=e.shift(),i=e.length>0?e.join(\"=\"):void 0;return n=decodeURIComponent(n),i=void 0===i?null:decodeURIComponent(i),r.hasOwnProperty(n)?Array.isArray(r[n])?r[n].push(i):r[n]=[r[n],i]:r[n]=i,r}),{}):{}},exports.stringify=function(r){return r?Object.keys(r).sort().map((function(t){var e=r[t];return void 0===e?\"\":null===e?t:Array.isArray(e)?e.slice().sort().map((function(r){return strictUriEncode(t)+\"=\"+strictUriEncode(r)})).join(\"&\"):strictUriEncode(t)+\"=\"+strictUriEncode(e)})).filter((function(r){return r.length>0})).join(\"&\"):\"\"};",
    "\"use strict\";function createThunkMiddleware(t){return function(e){var n=e.dispatch,r=e.getState;return function(e){return function(u){return\"function\"==typeof u?u(n,r,t):e(u)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk;",
    "\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0});var $$observable=_interopDefault(require(\"symbol-observable\")),randomString=function(){return Math.random().toString(36).substring(7).split(\"\").join(\".\")},ActionTypes={INIT:\"@@redux/INIT\"+randomString(),REPLACE:\"@@redux/REPLACE\"+randomString(),PROBE_UNKNOWN_ACTION:function(){return\"@@redux/PROBE_UNKNOWN_ACTION\"+randomString()}};function isPlainObject(e){if(\"object\"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function createStore(e,t,r){var n;if(\"function\"==typeof t&&\"function\"==typeof r||\"function\"==typeof r&&\"function\"==typeof arguments[3])throw new Error(\"It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.\");if(\"function\"==typeof t&&void 0===r&&(r=t,t=void 0),void 0!==r){if(\"function\"!=typeof r)throw new Error(\"Expected the enhancer to be a function.\");return r(createStore)(e,t)}if(\"function\"!=typeof e)throw new Error(\"Expected the reducer to be a function.\");var o=e,i=t,c=[],a=c,u=!1;function s(){a===c&&(a=c.slice())}function d(){if(u)throw new Error(\"You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.\");return i}function f(e){if(\"function\"!=typeof e)throw new Error(\"Expected the listener to be a function.\");if(u)throw new Error(\"You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.\");var t=!0;return s(),a.push(e),function(){if(t){if(u)throw new Error(\"You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.\");t=!1,s();var r=a.indexOf(e);a.splice(r,1),c=null}}}function p(e){if(!isPlainObject(e))throw new Error(\"Actions must be plain objects. Use custom middleware for async actions.\");if(void 0===e.type)throw new Error('Actions may not have an undefined \"type\" property. Have you misspelled a constant?');if(u)throw new Error(\"Reducers may not dispatch actions.\");try{u=!0,i=o(i,e)}finally{u=!1}for(var t=c=a,r=0;r<t.length;r++){(0,t[r])()}return e}function l(e){if(\"function\"!=typeof e)throw new Error(\"Expected the nextReducer to be a function.\");o=e,p({type:ActionTypes.REPLACE})}function y(){var e,t=f;return(e={subscribe:function(e){if(\"object\"!=typeof e||null===e)throw new TypeError(\"Expected the observer to be an object.\");function r(){e.next&&e.next(d())}return r(),{unsubscribe:t(r)}}})[$$observable]=function(){return this},e}return p({type:ActionTypes.INIT}),(n={dispatch:p,subscribe:f,getState:d,replaceReducer:l})[$$observable]=y,n}function warning(e){\"undefined\"!=typeof console&&\"function\"==typeof console.error&&console.error(e);try{throw new Error(e)}catch(e){}}function getUndefinedStateErrorMessage(e,t){var r=t&&t.type;return\"Given \"+(r&&'action \"'+String(r)+'\"'||\"an action\")+', reducer \"'+e+'\" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function getUnexpectedStateShapeWarningMessage(e,t,r,n){var o=Object.keys(t),i=r&&r.type===ActionTypes.INIT?\"preloadedState argument passed to createStore\":\"previous state received by the reducer\";if(0===o.length)return\"Store does not have a valid reducer. Make sure the argument passed to combineReducers is an object whose values are reducers.\";if(!isPlainObject(e))return\"The \"+i+' has unexpected type of \"'+{}.toString.call(e).match(/\\s([a-z|A-Z]+)/)[1]+'\". Expected argument to be an object with the following keys: \"'+o.join('\", \"')+'\"';var c=Object.keys(e).filter((function(e){return!t.hasOwnProperty(e)&&!n[e]}));return c.forEach((function(e){n[e]=!0})),r&&r.type===ActionTypes.REPLACE?void 0:c.length>0?\"Unexpected \"+(c.length>1?\"keys\":\"key\")+' \"'+c.join('\", \"')+'\" found in '+i+'. Expected to find one of the known reducer keys instead: \"'+o.join('\", \"')+'\". Unexpected keys will be ignored.':void 0}function assertReducerShape(e){Object.keys(e).forEach((function(t){var r=e[t];if(void 0===r(void 0,{type:ActionTypes.INIT}))throw new Error('Reducer \"'+t+\"\\\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.\");if(void 0===r(void 0,{type:ActionTypes.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer \"'+t+\"\\\" returned undefined when probed with a random type. Don't try to handle \"+ActionTypes.INIT+' or other actions in \"redux/*\" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}function combineReducers(e){for(var t=Object.keys(e),r={},n=0;n<t.length;n++){var o=t[n];0,\"function\"==typeof e[o]&&(r[o]=e[o])}var i,c=Object.keys(r);try{assertReducerShape(r)}catch(e){i=e}return function(e,t){if(void 0===e&&(e={}),i)throw i;for(var n=!1,o={},a=0;a<c.length;a++){var u=c[a],s=r[u],d=e[u],f=s(d,t);if(void 0===f){var p=getUndefinedStateErrorMessage(u,t);throw new Error(p)}o[u]=f,n=n||f!==d}return(n=n||c.length!==Object.keys(e).length)?o:e}}function bindActionCreator(e,t){return function(){return t(e.apply(this,arguments))}}function bindActionCreators(e,t){if(\"function\"==typeof e)return bindActionCreator(e,t);if(\"object\"!=typeof e||null===e)throw new Error(\"bindActionCreators expected an object or a function, instead received \"+(null===e?\"null\":typeof e)+'. Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');var r={};for(var n in e){var o=e[n];\"function\"==typeof o&&(r[n]=bindActionCreator(o,t))}return r}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ownKeys(e,t){var r=Object.keys(e);return Object.getOwnPropertySymbols&&r.push.apply(r,Object.getOwnPropertySymbols(e)),t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(r,!0).forEach((function(t){_defineProperty(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(r).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function compose(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}function applyMiddleware(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return function(e){return function(){var r=e.apply(void 0,arguments),n=function(){throw new Error(\"Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.\")},o={getState:r.getState,dispatch:function(){return n.apply(void 0,arguments)}},i=t.map((function(e){return e(o)}));return _objectSpread2({},r,{dispatch:n=compose.apply(void 0,i)(r.dispatch)})}}}function isCrushed(){}exports.__DO_NOT_USE__ActionTypes=ActionTypes,exports.applyMiddleware=applyMiddleware,exports.bindActionCreators=bindActionCreators,exports.combineReducers=combineReducers,exports.compose=compose,exports.createStore=createStore;",
    "\"use strict\";function defaultEqualityCheck(e,r){return e===r}function areArgumentsShallowlyEqual(e,r,t){if(null===r||null===t||r.length!==t.length)return!1;for(var n=r.length,o=0;o<n;o++)if(!e(r[o],t[o]))return!1;return!0}function defaultMemoize(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:defaultEqualityCheck,t=null,n=null;return function(){return areArgumentsShallowlyEqual(r,t,arguments)||(n=e.apply(null,arguments)),t=arguments,n}}function getDependencies(e){var r=Array.isArray(e[0])?e[0]:e;if(!r.every((function(e){return\"function\"==typeof e}))){var t=r.map((function(e){return typeof e})).join(\", \");throw new Error(\"Selector creators expect all input-selectors to be functions, instead received the following types: [\"+t+\"]\")}return r}function createSelectorCreator(e){for(var r=arguments.length,t=Array(r>1?r-1:0),n=1;n<r;n++)t[n-1]=arguments[n];return function(){for(var r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];var u=0,c=n.pop(),l=getDependencies(n),a=e.apply(void 0,[function(){return u++,c.apply(null,arguments)}].concat(t)),i=e((function(){for(var e=[],r=l.length,t=0;t<r;t++)e.push(l[t].apply(null,arguments));return a.apply(null,e)}));return i.resultFunc=c,i.dependencies=l,i.recomputations=function(){return u},i.resetRecomputations=function(){return u=0},i}}exports.__esModule=!0,exports.defaultMemoize=defaultMemoize,exports.createSelectorCreator=createSelectorCreator,exports.createStructuredSelector=createStructuredSelector;var createSelector=exports.createSelector=createSelectorCreator(defaultMemoize);function createStructuredSelector(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:createSelector;if(\"object\"!=typeof e)throw new Error(\"createStructuredSelector expects first argument to be an object where each property is a selector, instead received a \"+typeof e);var t=Object.keys(e);return r(t.map((function(r){return e[r]})),(function(){for(var e=arguments.length,r=Array(e),n=0;n<e;n++)r[n]=arguments[n];return r.reduce((function(e,r,n){return e[t[n]]=r,e}),{})}))}",
    "module.exports=require(\"./lib/retry\");",
    "var RetryOperation=require(\"./retry_operation\");exports.operation=function(r){var t=exports.timeouts(r);return new RetryOperation(t,{forever:r&&r.forever,unref:r&&r.unref,maxRetryTime:r&&r.maxRetryTime})},exports.timeouts=function(r){if(r instanceof Array)return[].concat(r);var t={retries:10,factor:2,minTimeout:1e3,maxTimeout:1/0,randomize:!1};for(var e in r)t[e]=r[e];if(t.minTimeout>t.maxTimeout)throw new Error(\"minTimeout is greater than maxTimeout\");for(var o=[],n=0;n<t.retries;n++)o.push(this.createTimeout(n,t));return r&&r.forever&&!o.length&&o.push(this.createTimeout(n,t)),o.sort((function(r,t){return r-t})),o},exports.createTimeout=function(r,t){var e=t.randomize?Math.random()+1:1,o=Math.round(e*t.minTimeout*Math.pow(t.factor,r));return o=Math.min(o,t.maxTimeout)},exports.wrap=function(r,t,e){if(t instanceof Array&&(e=t,t=null),!e)for(var o in e=[],r)\"function\"==typeof r[o]&&e.push(o);for(var n=0;n<e.length;n++){var i=e[n],a=r[i];r[i]=function(e){var o=exports.operation(t),n=Array.prototype.slice.call(arguments,1),i=n.pop();n.push((function(r){o.retry(r)||(r&&(arguments[0]=o.mainError()),i.apply(this,arguments))})),o.attempt((function(){e.apply(r,n)}))}.bind(r,a),r[i].options=t}};",
    "function RetryOperation(t,e){\"boolean\"==typeof e&&(e={forever:e}),this._originalTimeouts=JSON.parse(JSON.stringify(t)),this._timeouts=t,this._options=e||{},this._maxRetryTime=e&&e.maxRetryTime||1/0,this._fn=null,this._errors=[],this._attempts=1,this._operationTimeout=null,this._operationTimeoutCb=null,this._timeout=null,this._operationStart=null,this._options.forever&&(this._cachedTimeouts=this._timeouts.slice(0))}module.exports=RetryOperation,RetryOperation.prototype.reset=function(){this._attempts=1,this._timeouts=this._originalTimeouts},RetryOperation.prototype.stop=function(){this._timeout&&clearTimeout(this._timeout),this._timeouts=[],this._cachedTimeouts=null},RetryOperation.prototype.retry=function(t){if(this._timeout&&clearTimeout(this._timeout),!t)return!1;var e=(new Date).getTime();if(t&&e-this._operationStart>=this._maxRetryTime)return this._errors.unshift(new Error(\"RetryOperation timeout occurred\")),!1;this._errors.push(t);var i=this._timeouts.shift();if(void 0===i){if(!this._cachedTimeouts)return!1;this._errors.splice(this._errors.length-1,this._errors.length),this._timeouts=this._cachedTimeouts.slice(0),i=this._timeouts.shift()}var o=this,r=setTimeout((function(){o._attempts++,o._operationTimeoutCb&&(o._timeout=setTimeout((function(){o._operationTimeoutCb(o._attempts)}),o._operationTimeout),o._options.unref&&o._timeout.unref()),o._fn(o._attempts)}),i);return this._options.unref&&r.unref(),!0},RetryOperation.prototype.attempt=function(t,e){this._fn=t,e&&(e.timeout&&(this._operationTimeout=e.timeout),e.cb&&(this._operationTimeoutCb=e.cb));var i=this;this._operationTimeoutCb&&(this._timeout=setTimeout((function(){i._operationTimeoutCb()}),i._operationTimeout)),this._operationStart=(new Date).getTime(),this._fn(this._attempts)},RetryOperation.prototype.try=function(t){console.log(\"Using RetryOperation.try() is deprecated\"),this.attempt(t)},RetryOperation.prototype.start=function(t){console.log(\"Using RetryOperation.start() is deprecated\"),this.attempt(t)},RetryOperation.prototype.start=RetryOperation.prototype.try,RetryOperation.prototype.errors=function(){return this._errors},RetryOperation.prototype.attempts=function(){return this._attempts},RetryOperation.prototype.mainError=function(){if(0===this._errors.length)return null;for(var t={},e=null,i=0,o=0;o<this._errors.length;o++){var r=this._errors[o],s=r.message,n=(t[s]||0)+1;t[s]=n,n>=i&&(e=r,i=n)}return e};",
    "var COMPLETE=\"complete\",CANCELED=\"canceled\";function raf(e){if(\"requestAnimationFrame\"in window)return window.requestAnimationFrame(e);setTimeout(e,16)}function setElementScroll(e,t,n){e.self===e?e.scrollTo(t,n):(e.scrollLeft=t,e.scrollTop=n)}function getTargetScrollLocation(e,t){var n,l,i,o,r,a,s,f=e.align,c=e.target.getBoundingClientRect(),d=f&&null!=f.left?f.left:.5,u=f&&null!=f.top?f.top:.5,g=f&&null!=f.leftOffset?f.leftOffset:0,m=f&&null!=f.topOffset?f.topOffset:0,h=d,p=u;if(e.isWindow(t))a=Math.min(c.width,t.innerWidth),s=Math.min(c.height,t.innerHeight),l=c.left+t.pageXOffset-t.innerWidth*h+a*h,i=c.top+t.pageYOffset-t.innerHeight*p+s*p,i-=m,o=(l-=g)-t.pageXOffset,r=i-t.pageYOffset;else{a=c.width,s=c.height,n=t.getBoundingClientRect();var E=c.left-(n.left-t.scrollLeft),S=c.top-(n.top-t.scrollTop);l=E+a*h-t.clientWidth*h,i=S+s*p-t.clientHeight*p,l-=g,i-=m,l=Math.max(Math.min(l,t.scrollWidth-t.clientWidth),0),i=Math.max(Math.min(i,t.scrollHeight-t.clientHeight),0),o=l-t.scrollLeft,r=i-t.scrollTop}return{x:l,y:i,differenceX:o,differenceY:r}}function animate(e){var t=e._scrollSettings;if(t){var n=t.maxSynchronousAlignments,l=getTargetScrollLocation(t,e),i=Date.now()-t.startTime,o=Math.min(1/t.time*i,1);if(t.endIterations>=n)return setElementScroll(e,l.x,l.y),e._scrollSettings=null,t.end(COMPLETE);var r=1-t.ease(o);if(setElementScroll(e,l.x-l.differenceX*r,l.y-l.differenceY*r),i>=t.time)return t.endIterations++,animate(e);raf(animate.bind(null,e))}}function defaultIsWindow(e){return e.self===e}function transitionScrollTo(e,t,n,l){var i,o=!t._scrollSettings,r=t._scrollSettings,a=Date.now(),s={passive:!0};function f(e){t._scrollSettings=null,t.parentElement&&t.parentElement._scrollSettings&&t.parentElement._scrollSettings.end(e),n.debug&&console.log(\"Scrolling ended with type\",e,\"for\",t),l(e),i&&(t.removeEventListener(\"touchstart\",i,s),t.removeEventListener(\"wheel\",i,s))}r&&r.end(CANCELED);var c=n.maxSynchronousAlignments;return null==c&&(c=3),t._scrollSettings={startTime:a,endIterations:0,target:e,time:n.time,ease:n.ease,align:n.align,isWindow:n.isWindow||defaultIsWindow,maxSynchronousAlignments:c,end:f},\"cancellable\"in n&&!n.cancellable||(i=f.bind(null,CANCELED),t.addEventListener(\"touchstart\",i,s),t.addEventListener(\"wheel\",i,s)),o&&animate(t),i}function defaultIsScrollable(e){return\"pageXOffset\"in e||(e.scrollHeight!==e.clientHeight||e.scrollWidth!==e.clientWidth)&&\"hidden\"!==getComputedStyle(e).overflow}function defaultValidTarget(){return!0}function findParentElement(e){if(e.assignedSlot)return findParentElement(e.assignedSlot);if(e.parentElement)return\"BODY\"===e.parentElement.tagName?e.parentElement.ownerDocument.defaultView||e.parentElement.ownerDocument.ownerWindow:e.parentElement;if(e.getRootNode){var t=e.getRootNode();if(11===t.nodeType)return t.host}}module.exports=function(e,t,n){if(e){\"function\"==typeof t&&(n=t,t=null),t||(t={}),t.time=isNaN(t.time)?1e3:t.time,t.ease=t.ease||function(e){return 1-Math.pow(1-e,e/2)};var l,i=findParentElement(e),o=1,r=t.validTarget||defaultValidTarget,a=t.isScrollable;for(t.debug&&(console.log(\"About to scroll to\",e),i||console.error(\"Target did not have a parent, is it mounted in the DOM?\"));i;)if(t.debug&&console.log(\"Scrolling parent node\",i),r(i,o)&&(a?a(i,defaultIsScrollable):defaultIsScrollable(i))&&(o++,l=transitionScrollTo(e,i,t,s)),!(i=findParentElement(i))){s(COMPLETE);break}return l}function s(e){--o||n&&n(e)}};",
    "module.exports=function(r,e,t,o){var n=t?t.call(o,r,e):void 0;if(void 0!==n)return!!n;if(r===e)return!0;if(\"object\"!=typeof r||!r||\"object\"!=typeof e||!e)return!1;var i=Object.keys(r),f=Object.keys(e);if(i.length!==f.length)return!1;for(var u=Object.prototype.hasOwnProperty.bind(e),v=0;v<i.length;v++){var a=i[v];if(!u(a))return!1;var c=r[a],l=e[a];if(!1===(n=t?t.call(o,c,l,a):void 0)||void 0===n&&c!==l)return!1}return!0};",
    "\"use strict\";module.exports=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return\"%\"+e.charCodeAt(0).toString(16).toUpperCase()}))};",
    "\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var root,_ponyfill=require(\"./ponyfill.js\"),_ponyfill2=_interopRequireDefault(_ponyfill);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}root=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof module?module:Function(\"return this\")();var result=(0,_ponyfill2.default)(root);exports.default=result;",
    "\"use strict\";function symbolObservablePonyfill(e){var b,l=e.Symbol;return\"function\"==typeof l?l.observable?b=l.observable:(b=l(\"observable\"),l.observable=b):b=\"@@observable\",b}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=symbolObservablePonyfill;",
    "function E(){}E.prototype={on:function(t,n,e){var i=this.e||(this.e={});return(i[t]||(i[t]=[])).push({fn:n,ctx:e}),this},once:function(t,n,e){var i=this;function o(){i.off(t,o),n.apply(e,arguments)}return o._=n,this.on(t,o,e)},emit:function(t){for(var n=[].slice.call(arguments,1),e=((this.e||(this.e={}))[t]||[]).slice(),i=0,o=e.length;i<o;i++)e[i].fn.apply(e[i].ctx,n);return this},off:function(t,n){var e=this.e||(this.e={}),i=e[t],o=[];if(i&&n)for(var r=0,f=i.length;r<f;r++)i[r].fn!==n&&i[r].fn._!==n&&o.push(i[r]);return o.length?e[t]=o:delete e[t],this}},module.exports=E,module.exports.TinyEmitter=E;",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--plus\"><g fill-rule=\"evenodd\"><path fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 8V3v5H3h5zm0 0v5-5h5-5z\"></path><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect></g></svg>';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n  <path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M15 0c.27 0 .505.099.703.297A.961.961 0 0116 1v15l-4-3H1a.974.974 0 01-.703-.29A.953.953 0 010 12V1C0 .719.096.482.29.29A.966.966 0 011 0h14zM7 3l-.469.063c-.312.041-.656.187-1.031.437-.375.25-.719.646-1.031 1.188C4.156 5.229 4 6 4 7l.002.063.006.062a.896.896 0 01.008.11l-.002.074-.006.066a1.447 1.447 0 00.43 1.188C4.729 8.854 5.082 9 5.5 9c.417 0 .77-.146 1.063-.438C6.854 8.271 7 7.918 7 7.5c0-.417-.146-.77-.438-1.063A1.447 1.447 0 005.5 6c-.073 0-.146.005-.219.016-.073.01-.14.026-.203.046.177-1.03.542-1.632 1.094-1.804L7 4V3zm5 0l-.469.063c-.312.041-.656.187-1.031.437-.375.25-.719.646-1.031 1.188C9.156 5.229 9 6 9 7l.002.063.006.062a.896.896 0 01.008.11l-.002.074-.006.066a1.447 1.447 0 00.43 1.188c.291.291.645.437 1.062.437.417 0 .77-.146 1.063-.438.291-.291.437-.645.437-1.062 0-.417-.146-.77-.438-1.063A1.447 1.447 0 0010.5 6c-.073 0-.146.005-.219.016-.073.01-.14.026-.203.046.177-1.03.542-1.632 1.094-1.804L12 4V3z\"/>\\n</svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--arrow-left\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 12L3 8l4-4M4 8h9-9z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--arrow-right\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 4l4 4-4 4m3-4H3h9z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--cancel\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 8l3.536-3.536L8 8 4.464 4.464 8 8zm0 0l-3.536 3.536L8 8l3.536 3.536L8 8z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--caret-right\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 4l4 4-4 4\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--cc-std\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M7.985 0c2.238 0 4.143.781 5.715 2.343a7.694 7.694 0 011.714 2.579C15.804 5.888 16 6.914 16 8a8.164 8.164 0 01-.579 3.078 7.344 7.344 0 01-1.707 2.536 8.222 8.222 0 01-2.657 1.772c-.99.41-2.014.614-3.071.614a7.775 7.775 0 01-3.036-.607 8.047 8.047 0 01-2.6-1.757A7.846 7.846 0 010 8c0-1.057.202-2.074.607-3.05A8.033 8.033 0 012.371 2.33C3.895.777 5.766 0 7.985 0zm.03 1.443c-1.83 0-3.367.638-4.615 1.914a6.878 6.878 0 00-1.45 2.15A6.301 6.301 0 001.443 8c0 .858.168 1.684.507 2.479a6.627 6.627 0 001.45 2.129 6.593 6.593 0 002.129 1.428c.79.329 1.619.493 2.485.493.857 0 1.688-.166 2.494-.5a6.91 6.91 0 002.178-1.442c1.247-1.22 1.871-2.748 1.871-4.586a6.57 6.57 0 00-.486-2.515 6.397 6.397 0 00-1.413-2.114C11.37 2.086 9.824 1.443 8.014 1.443zm-.1 5.229l-1.073.557c-.114-.238-.254-.405-.42-.5a.95.95 0 00-.465-.143c-.714 0-1.072.472-1.072 1.415 0 .428.09.77.271 1.028.181.257.448.386.8.386.467 0 .796-.229.987-.686l.985.5a2.35 2.35 0 01-2.1 1.257c-.714 0-1.29-.218-1.729-.657-.438-.438-.657-1.047-.657-1.828 0-.762.222-1.367.665-1.814.442-.448 1.002-.672 1.678-.672.991 0 1.7.385 2.13 1.157zm4.613 0l-1.057.557c-.114-.238-.255-.405-.421-.5a.972.972 0 00-.479-.143c-.714 0-1.072.472-1.072 1.415 0 .428.091.77.272 1.028.18.257.447.386.8.386.466 0 .795-.229.985-.686l1 .5c-.218.39-.514.698-.885.922a2.308 2.308 0 01-1.214.335c-.724 0-1.302-.218-1.735-.657-.434-.438-.65-1.047-.65-1.828 0-.762.22-1.367.664-1.814.442-.448 1.002-.672 1.678-.672.99 0 1.696.385 2.114 1.157z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--cc-zero\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M7.983 0c2.238 0 4.148.78 5.72 2.342a7.662 7.662 0 011.715 2.582c.39.962.582 1.99.582 3.076a8.13 8.13 0 01-.583 3.087 7.262 7.262 0 01-1.703 2.526 8.213 8.213 0 01-2.655 1.77c-.99.41-2.018.617-3.076.617a7.902 7.902 0 01-3.042-.6 8.301 8.301 0 01-2.6-1.759A8.087 8.087 0 01.6 11.042 7.84 7.84 0 010 8c0-1.057.2-2.07.6-3.042a8.12 8.12 0 011.77-2.633C3.893.772 5.764 0 7.983 0zm.034 1.44c-1.829 0-3.369.64-4.616 1.915a6.962 6.962 0 00-1.457 2.157 6.388 6.388 0 000 4.969 6.83 6.83 0 003.585 3.558c.79.324 1.62.487 2.488.487.857 0 1.681-.165 2.482-.498a6.88 6.88 0 002.184-1.446C13.931 11.364 14.56 9.838 14.56 8a6.57 6.57 0 00-.487-2.515 6.418 6.418 0 00-1.418-2.118C11.37 2.081 9.826 1.44 8.017 1.44zM8 3.395c2.641 0 3.305 2.492 3.305 4.605 0 2.113-.664 4.605-3.305 4.605S4.694 10.113 4.694 8l.007-.355c.073-2.027.804-4.25 3.299-4.25zm1.316 3.227L7.35 10.017c-.274.412-.083.645.219.774l.135.044c.091.022.19.034.297.034 1.357 0 1.422-1.938 1.422-2.869l-.007-.409a7.282 7.282 0 00-.06-.72l-.04-.25zM8 5.132c-1.258 0-1.406 1.66-1.421 2.646L6.577 8c0 .24.005.544.035.865l.027.244 1.759-3.232c.182-.316.09-.542-.101-.706A1.222 1.222 0 008 5.13z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"Icon Icon--check\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 3L6 13 3 8\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n  <path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M7.456 4.212a.804.804 0 0 1 1.088 0l6.23 5.867c.301.283.301.742 0 1.025l-.726.684a.804.804 0 0 1-1.087.001L8 7.139l-4.961 4.65a.804.804 0 0 1-1.087-.001l-.727-.684a.695.695 0 0 1 0-1.025l6.23-5.867z\"/>\\n</svg>';",
    "module.exports='<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\\n    <g transform=\"matrix(6.12323e-17,1,-1,6.12323e-17,15.9996,0.000432345)\">\\n        <path fill=\"currentColor\" d=\"M7.456,4.212C7.762,3.931 8.238,3.931 8.544,4.212L14.774,10.079C15.075,10.362 15.075,10.821 14.774,11.104L14.048,11.788C13.742,12.069 13.267,12.069 12.961,11.789L8,7.139L3.039,11.789C2.733,12.069 2.258,12.069 1.952,11.788L1.225,11.104C1.081,10.972 0.999,10.786 0.999,10.592C0.999,10.397 1.081,10.211 1.225,10.079L7.455,4.212L7.456,4.212Z\" />\\n    </g>\\n</svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--copy\"><g fill-rule=\"evenodd\"><path fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 15H1V5h3m11-4v10H7V1h8z\"></path><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect></g></svg>';",
    "module.exports='<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n<svg width=\"10px\" height=\"30px\" viewBox=\"0 0 10 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n    \\x3c!-- Generator: Sketch 46.2 (44496) - http://www.bohemiancoding.com/sketch --\\x3e\\n    <title>Shape</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n        <g transform=\"translate(-239.000000, -73.000000)\" fill-rule=\"nonzero\" fill=\"#000000\">\\n            <g transform=\"translate(1.000000, 1.000000)\">\\n                <path d=\"M243.3125,75.186875 C243.3125,73.535 243.3125,72.625 246.434687,72.625 L248,72.625 L248,72 L246.434687,72 C244.324375,72 243.402813,72.4684375 243,73.183125 C242.597187,72.4684375 241.675625,72 239.565313,72 L238,72 L238,72.625 L239.565313,72.625 C242.6875,72.6246875 242.6875,73.5346875 242.6875,75.186875 L242.6875,82 L242.6875,86.6875 L240.929375,86.6875 L240.929375,87.3125 L242.6875,87.3125 L242.6875,92 L242.6875,98.5434375 C242.6875,100.187188 242.6875,101.375 239.565313,101.375 L238,101.375 L238,102 L239.565313,102 C241.675625,102 242.5975,101.442813 243,100.6525 C243.402813,101.442813 244.324375,102 246.434687,102 L248,102 L248,101.375 L246.434687,101.375 C243.3125,101.374688 243.3125,100.187188 243.3125,98.5434375 L243.3125,91.9996875 L243.3125,87.3121875 L245.070312,87.3121875 L245.070312,86.6871875 L243.3125,86.6871875 L243.3125,81.9996875 L243.3125,75.186875 Z\"></path>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--edit\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 4l1 1-9 9-2 1 1-2 9-9zm3-3l1 1-1 1-1-1 1-1z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--email\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M1 3v10h14V3H1zm0 0l7 6 7-6H1z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n  <path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M7.456 11.788L1.226 5.92a.695.695 0 0 1 0-1.025l.726-.684a.804.804 0 0 1 1.087-.001L8 8.861l4.961-4.65a.804.804 0 0 1 1.087.001l.727.684c.3.283.3.742 0 1.025l-6.23 5.867a.804.804 0 0 1-1.09 0z\"/>\\n</svg>';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--external\"><g fill-rule=\"evenodd\"><path fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 3h6v6m-1-5l-9 9 9-9z\"></path><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect></g></svg>';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--social-facebook\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M15.999 8.049c0-4.445-3.582-8.049-8-8.049S0 3.604 0 8.049C0 12.066 2.925 15.396 6.75 16v-5.624H4.717V8.049H6.75V6.276c0-2.018 1.195-3.132 3.022-3.132.875 0 1.79.157 1.79.157v1.981h-1.008c-.994 0-1.304.62-1.304 1.257v1.51h2.219l-.355 2.327H9.25V16c3.825-.604 6.75-3.934 6.75-7.951z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--flag-filled\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M2 1a1 1 0 01.883-.993L3 0h12c.852 0 1.297.986.783 1.623l-.076.084L12.415 5l3.292 3.293c.575.575.253 1.523-.485 1.684l-.108.017L15 10H4v5a1 1 0 01-1.993.117L2 15V1z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--flag\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 9v6V1h12l-4 4 4 4H3z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--editor-type-bold\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M8.661 16c.805 0 1.536-.117 2.193-.351a4.953 4.953 0 001.69-.993c.47-.428.831-.947 1.081-1.557s.375-1.287.375-2.03c0-.29-.038-.588-.114-.893a4.123 4.123 0 00-.325-.87 3.937 3.937 0 00-.495-.754 4.412 4.412 0 00-.604-.597c-.17-.126-.17-.264 0-.412.381-.335.699-.772.953-1.311.254-.54.382-1.062.382-1.568 0-.64-.132-1.244-.394-1.813a4.628 4.628 0 00-1.081-1.484c-.458-.42-1-.753-1.627-.999A5.531 5.531 0 008.66 0h-6.14a.534.534 0 00-.362.14A.415.415 0 002 .456v15.086c0 .119.053.225.159.318.106.093.227.139.362.139h6.14zm-.127-9.852H5.826c-.17 0-.254-.075-.254-.223V3.437c0-.157.085-.235.254-.235h2.708c.45 0 .847.145 1.195.435.347.29.521.633.521 1.027 0 .394-.174.74-.521 1.038a1.784 1.784 0 01-1.195.446zm0 6.65H5.826c-.17 0-.254-.075-.254-.223v-2.99c0-.157.085-.235.254-.235h2.708c.56 0 1.004.177 1.335.53.33.353.495.75.495 1.188 0 .454-.165.856-.495 1.205-.33.35-.776.525-1.335.525z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--editor-latex\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M13.392 16c.158 0 .299-.036.423-.108.123-.073.185-.155.185-.248v-1.778c0-.099-.062-.183-.185-.252a.848.848 0 00-.423-.104H6.85c-.138 0-.227-.028-.267-.083-.04-.055-.04-.105 0-.152l5.533-5.101c.158-.14.223-.265.193-.378a.755.755 0 00-.193-.325L6.88 2.707c-.04-.046-.042-.094-.007-.143.034-.05.13-.074.289-.074h6.17a.782.782 0 00.416-.108c.119-.073.178-.155.178-.248V.356c0-.093-.06-.175-.178-.248A.782.782 0 0013.333 0H2.905c-.158 0-.3.036-.423.108-.124.073-.185.155-.185.248v1.943c0 .128.037.236.11.326l.171.204 5.31 4.815c.04.047.065.106.075.178a.221.221 0 01-.074.195l-5.622 5.154c-.04.047-.094.113-.163.2A.512.512 0 002 13.7v1.943c0 .093.062.175.185.248a.822.822 0 00.423.108h10.784z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--editor-type-italic\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M10.61 16c.12 0 .23-.046.329-.14a.633.633 0 00.191-.317l.457-2.176a.348.348 0 00-.064-.313.336.336 0 00-.276-.133H8.845c-.142-.008-.198-.086-.17-.235l1.892-9.372c.035-.149.124-.223.266-.223H13a.49.49 0 00.335-.14.62.62 0 00.196-.318L13.99.457a.542.542 0 00.011-.1.337.337 0 00-.085-.223.336.336 0 00-.276-.134H5.805a.49.49 0 00-.335.14.62.62 0 00-.196.317l-.457 2.176a.353.353 0 00.069.318c.074.093.168.14.281.14h2.18c.141 0 .198.074.17.223l-1.893 9.372c-.028.156-.113.235-.255.235H2.967a.489.489 0 00-.324.133.59.59 0 00-.197.313l-.435 2.176a.542.542 0 00-.011.1c0 .082.025.156.074.223.071.09.16.134.266.134h8.27z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--list-ordered\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M2.748 11.5c.227 0 .443.034.646.103.203.069.381.164.534.286.155.123.276.267.364.432.089.168.134.35.134.543 0 .17-.042.333-.124.484a1.384 1.384 0 01-.19.269l-.062.061.047.035c.047.041.09.086.13.134l.058.075.075.122c.093.172.14.352.14.538 0 .201-.048.39-.143.566a1.44 1.44 0 01-.384.45c-.16.125-.344.223-.554.294-.21.072-.434.108-.67.108-.237 0-.461-.036-.671-.108a1.871 1.871 0 01-.555-.295 1.42 1.42 0 01-.382-.45 1.178 1.178 0 01-.132-.417L1 14.582l.002-.078.01-.05a.249.249 0 01.077-.111.283.283 0 01.121-.06l.07-.008h.708l.05.007c.044.01.084.028.12.056a.24.24 0 01.089.133l.006.054v.047l.005.077a.279.279 0 00.112.186c.088.066.213.101.378.101a.615.615 0 00.376-.102.29.29 0 00.12-.252.29.29 0 00-.12-.252.538.538 0 00-.262-.096l-.114-.007h-.1l-.051-.007a.292.292 0 01-.12-.059.244.244 0 01-.087-.13l-.006-.053.001-.57.01-.05a.249.249 0 01.078-.112.283.283 0 01.121-.06l.07-.008h.076l.112-.006a.454.454 0 00.224-.086.26.26 0 00.104-.222.246.246 0 00-.103-.213.533.533 0 00-.329-.09.527.527 0 00-.324.09.24.24 0 00-.098.148l-.006.065-.002.11-.01.05a.249.249 0 01-.081.112.292.292 0 01-.12.059l-.066.007h-.712l-.052-.007a.292.292 0 01-.12-.059.244.244 0 01-.087-.13l-.006-.054v-.096l.008-.135c.018-.141.062-.275.132-.402.091-.164.213-.307.366-.43.152-.122.33-.217.533-.286.203-.069.418-.103.645-.103zM15 13a1 1 0 01.117 1.993L15 15H7a1 1 0 01-.117-1.993L7 13h8zM2.777 5.5c.234 0 .454.034.66.101.207.068.389.164.544.288.156.124.28.27.372.437.093.17.14.355.14.551 0 .19-.049.37-.145.542-.07.123-.156.237-.258.34l-.108.1L2.71 8.932l1.52.001.053.006c.044.01.084.029.12.056.047.036.078.08.091.132l.007.054-.002.59-.01.05a.25.25 0 01-.083.113.298.298 0 01-.121.059L4.216 10H1.27l-.053-.007a.298.298 0 01-.122-.059.246.246 0 01-.089-.132L1 9.748v-.711l.004-.05a.26.26 0 01.04-.115l.034-.043.035-.033L3.04 7.167l.036-.036a.98.98 0 00.08-.114.295.295 0 00.055-.145.27.27 0 00-.099-.21c-.068-.062-.167-.094-.303-.094-.163 0-.285.032-.369.093a.244.244 0 00-.103.147l-.006.064-.002.123-.01.052a.25.25 0 01-.084.112.298.298 0 01-.12.058l-.069.008h-.726l-.053-.007a.298.298 0 01-.121-.059.246.246 0 01-.09-.132l-.006-.054V6.87l.01-.137c.017-.143.063-.28.135-.407.094-.167.22-.313.379-.437.157-.123.339-.219.544-.287.206-.067.425-.101.658-.101zM15 7a1 1 0 01.117 1.993L15 9H7a1 1 0 01-.117-1.993L7 7h8zM3.237 0l.052.008c.044.01.084.031.12.061a.248.248 0 01.083.132l.006.052-.004 3.167.744.001.051.007c.044.01.084.03.119.058.044.036.074.08.086.132l.006.053-.001.595-.01.05a.278.278 0 01-.197.176l-.07.008H1.29l-.051-.008a.287.287 0 01-.12-.061.248.248 0 01-.084-.132l-.006-.052.001-.596.01-.05a.247.247 0 01.077-.113.28.28 0 01.12-.06l.069-.008.932.002.003-1.959-.796.629-.068.037a.295.295 0 01-.196-.002.25.25 0 01-.172-.179L1 1.881v-.587l.007-.089.015-.075a.345.345 0 01.073-.132l.06-.059.83-.758.04-.036A.994.994 0 012.139.07a.498.498 0 01.183-.062L2.428 0h.809zM15 1a1 1 0 01.117 1.993L15 3H7a1 1 0 01-.117-1.993L7 1h8z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--list-unordered\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M15 1a1 1 0 01.117 1.993L15 3H7a1 1 0 01-.117-1.993L7 1h8zm0 6a1 1 0 01.117 1.993L15 9H7a1 1 0 01-.117-1.993L7 7h8zM2 12a2 2 0 110 4 2 2 0 010-4zm13 1a1 1 0 01.117 1.993L15 15H7a1 1 0 01-.117-1.993L7 13h8zM2 6a2 2 0 110 4 2 2 0 010-4zm0-6a2 2 0 110 4 2 2 0 010-4z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--editor-quote\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M2.701 14c.38 0 .659-.085.837-.255.177-.17.328-.343.45-.52l2.408-3.25c.246-.328.445-.725.598-1.19a4.69 4.69 0 00.23-1.475V2.775a.752.752 0 00-.23-.539A.713.713 0 006.47 2H1.947a.713.713 0 00-.524.236.752.752 0 00-.23.539v4.649c0 .214.077.396.23.548a.726.726 0 00.524.226h.901c.123 0 .23.054.322.161.092.107.101.224.028.35l-2.041 3.817c-.196.365-.208.702-.037 1.011.172.309.447.463.827.463h.754zm7.795 0c.367 0 .64-.085.818-.255.178-.17.328-.343.45-.52l2.409-3.25c.257-.328.46-.725.606-1.19A4.87 4.87 0 0015 7.31V2.775a.752.752 0 00-.23-.539.713.713 0 00-.524-.236H9.742a.703.703 0 00-.533.236.767.767 0 00-.22.539v4.649c0 .214.076.396.23.548a.726.726 0 00.523.226h.9c.123 0 .228.054.313.161.086.107.092.224.019.35L8.95 12.526c-.208.365-.223.702-.045 1.011.177.309.456.463.836.463h.754z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--groups\"><g fill-rule=\"evenodd\"><path fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M1 15a3 3 0 0 1 6 0m2-4a3 3 0 0 1 6 0M4 9a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm8-4a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\"></path><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--help\"><g fill-rule=\"evenodd\"><path fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4c0-1.657 1.79-3 4-3s4 1.343 4 3-1.79 3-4 3m0 0v2-2zm0 8a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"></path><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15H1h11zm-.5-6v2l-1 1v-2l1-1zm.5-7v6h-2V2h2zm0-1h-2 2zm0 8h-2 2z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--image\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 1v14H1V1h14zM1 15l3-8 4 6 3-4 4 6m-4-9a1 1 0 110-2 1 1 0 010 2z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n  <path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M8 0c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8 3.58-8 8-8zm0 14.452A6.45 6.45 0 0 0 14.452 8 6.45 6.45 0 0 0 8 1.548 6.45 6.45 0 0 0 1.548 8 6.45 6.45 0 0 0 8 14.452zm3.284-8.458L9.277 8l2.007 2.006a.387.387 0 0 1 0 .549l-.73.729a.387.387 0 0 1-.548 0L8 9.277l-2.006 2.007a.387.387 0 0 1-.549 0l-.729-.73a.387.387 0 0 1 0-.548L6.723 8 4.716 5.994a.387.387 0 0 1 0-.549l.73-.729a.387.387 0 0 1 .548 0L8 6.723l2.006-2.007a.387.387 0 0 1 .549 0l.729.73a.387.387 0 0 1 0 .548z\"/>\\n</svg>';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--link\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.069 3.042l1.057-1.274c1.193-1.106 3.035-.938 4.046 0 1.012.94 1.193 2.649 0 3.755L11.046 9.17m0 0c-1.193 1.107-2.853 1.107-4.046 0m-.069 3.788l-1.057 1.274c-1.193 1.106-3.035.938-4.046 0-1.012-.94-1.193-2.649 0-3.755L4.954 6.83m0 0C6.147 5.723 7.807 5.723 9 6.8\"></path></g></svg>\\n';",
    "module.exports='<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n<svg width=\"48px\" height=\"56px\" viewBox=\"0 0 48 56\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n        <g fill=\"currentColor\">\\n            <rect x=\"0\" y=\"24\" width=\"48\" height=\"32\"></rect>\\n            <path d=\"M24,0 C24,0 8,0 8,16 L8,32 L16,32 L16,16.0000004 C16,8 24,8 24,8 C24,8 32,8 32,16 L32,32 L40,32 L40,16 C40,0 24,0 24,0 Z\"></path>\\n        </g>\\n    </g>\\n</svg>\\n';",
    "module.exports='<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n<svg width=\"24px\" height=\"28px\" viewBox=\"0 0 24 28\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n    <rect fill=\"#ffffff\" stroke=\"none\" width=\"17.14407\" height=\"16.046612\" x=\"3.8855932\" y=\"3.9449153\" />\\n    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n        <path d=\"M0,2.00494659 C0,0.897645164 0.897026226,0 2.00494659,0 L21.9950534,0 C23.1023548,0 24,0.897026226 24,2.00494659 L24,21.9950534 C24,23.1023548 23.1029738,24 21.9950534,24 L2.00494659,24 C0.897645164,24 0,23.1029738 0,21.9950534 L0,2.00494659 Z M9,24 L12,28 L15,24 L9,24 Z M7.00811294,4 L4,4 L4,20 L7.00811294,20 L7.00811294,15.0028975 C7.00811294,12.004636 8.16824717,12.0097227 9,12 C10,12.0072451 11.0189302,12.0606714 11.0189302,14.003477 L11.0189302,20 L14.0270431,20 L14.0270431,13.1087862 C14.0270433,10 12,9.00309038 10,9.00309064 C8.01081726,9.00309091 8,9.00309086 7.00811294,11.0019317 L7.00811294,4 Z M19,19.9869002 C20.1045695,19.9869002 21,19.0944022 21,17.9934501 C21,16.892498 20.1045695,16 19,16 C17.8954305,16 17,16.892498 17,17.9934501 C17,19.0944022 17.8954305,19.9869002 19,19.9869002 Z\" fill=\"currentColor\"></path>\\n    </g>\\n</svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"8\" viewBox=\"0 0 15 8\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M0 8 L7 0 L15 8\" stroke=\"currentColor\" strokeWidth=\"2\" /></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--profile\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M1 15c0-2.761 3.134-5 7-5s7 2.239 7 5M8 7a3 3 0 1 1 0-6 3 3 0 0 1 0 6z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n  <path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zm2.655 11.535c.244-.242.442-.719.442-1.063a1.13 1.13 0 0 0-.288-.696l-.442-.442a1.033 1.033 0 0 0-.73-.302H7.484C7.181 8.88 6.791 8 6.452 8c-.34 0-.674-.08-.978-.231l-.357-.179a.386.386 0 0 1-.213-.345c0-.153.118-.317.263-.366l1.006-.335a.618.618 0 0 1 .163-.026c.106 0 .258.056.338.126l.3.26c.046.04.106.063.169.063h.182a.258.258 0 0 0 .23-.373l-.503-1.006a.306.306 0 0 1-.027-.116c0-.06.035-.143.078-.185l.32-.31a.258.258 0 0 1 .18-.074h.29c.06 0 .141-.034.183-.076l.258-.258c.1-.1.1-.264 0-.364l-.151-.152c-.101-.1-.101-.264 0-.365l.333-.333.151-.151a.516.516 0 0 0 0-.73l-.912-.913a6.45 6.45 0 0 0-.787.078v.365a.516.516 0 0 1-.747.461l-.775-.387a6.487 6.487 0 0 0-3.329 3.287c.32.474.813 1.205 1.116 1.65.138.203.4.503.582.668l.026.023c.308.278.65.516 1.021.702.452.227 1.111.586 1.575.842.328.182.53.527.53.903v1.032c0 .274.11.537.303.73.484.484.785 1.246.73 1.653v.884c.473 0 .932-.055 1.376-.152l.56-1.511c.067-.177.106-.362.155-.544a.771.771 0 0 1 .199-.346l.365-.364zm2.797-2.946l.94.235c.036-.27.06-.544.06-.824a6.4 6.4 0 0 0-.688-2.882l-.419.21a.773.773 0 0 0-.298.263l-.632.947a.908.908 0 0 0-.13.43c0 .13.058.321.13.43l.58.87c.107.16.27.274.457.32z\"/>\\n</svg>\\n';",
    "module.exports='<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n<svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n    \\x3c!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --\\x3e\\n    <defs/>\\n    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n        <g fill=\"currentColor\">\\n            <g>\\n                <path d=\"M0,8 C0,12.418278 3.581722,16 8,16 C12.418278,16 16,12.418278 16,8 C16,4.89580324 14.2154684,2.11256098 11.4682644,0.789110134 L10.6002482,2.59092808 C12.661769,3.58405472 14,5.6712248 14,8 C14,11.3137085 11.3137085,14 8,14 C4.6862915,14 2,11.3137085 2,8 C2,5.65296151 3.35941993,3.55225774 5.44569583,2.56903563 L4.59307587,0.759881355 C1.81273067,2.07020511 0,4.87140735 0,8 Z\" />\\n                <polygon points=\"7 8.58578644 7 0 9 0 9 8.58578644 10.2928932 7.29289322 11 6.58578644 12.4142136 8 11.7071068 8.70710678 8.70710678 11.7071068 8 12.4142136 7.64644661 12.0606602 7.29289322 11.7071068 4.29289322 8.70710678 3.58578644 8 5 6.58578644 5.70710678 7.29289322\"/>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n  <path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M6.422 5.422c2 0 3.542.417 4.625 1.25 1.083.833 1.875 1.75 2.375 2.75s.792 1.917.875 2.75l.125 1.25h-2l-.094-.938c-.062-.625-.281-1.312-.656-2.062-.375-.75-.969-1.438-1.781-2.063-.813-.625-1.97-.937-3.47-.937H4.829l2 2-1.406 1.422L1 6.422 5.422 2l1.406 1.422-2 2h1.594z\"/>\\n</svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 1C4.5 1 1 4.5 1 8s3.5 7 7 7 7-3.5 7-7-3.5-7-7-7zm0 7l-4 4 4-4 4-4-4 4z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--search\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.536 9.536a5 5 0 1 1-7.071-7.071 5 5 0 0 1 7.07 7.07L15 15 9.536 9.536z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--share\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 11V2m7 8v5H1v-5m3-5l4-4 4 4\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--sort\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 9V2v7zM1 5l4-4 4 4m2 2v7-7zm-4 4l4 4 4-4\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--trash\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2 4h12l-2 11H4L2 4zM1 1h14H1z\"></path></g></svg>\\n';",
    "module.exports='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" focusable=\"false\" class=\"Icon Icon--social-twitter\"><g fill-rule=\"evenodd\"><rect fill=\"none\" stroke=\"none\" x=\"0\" y=\"0\" width=\"16\" height=\"16\"></rect><path fill=\"currentColor\" stroke=\"none\" d=\"M15.969 3.049c-.59.259-1.22.436-1.884.516a3.305 3.305 0 0 0 1.442-1.815c-.634.37-1.336.64-2.084.79a3.28 3.28 0 0 0-5.59 2.988 9.29 9.29 0 0 1-6.76-3.418A3.214 3.214 0 0 0 .65 3.76c0 1.14.58 2.142 1.459 2.73a3.27 3.27 0 0 1-1.485-.41v.04a3.282 3.282 0 0 0 2.63 3.218 3.33 3.33 0 0 1-1.474.057 3.291 3.291 0 0 0 3.069 2.278A6.578 6.578 0 0 1 .78 13.076c-.26 0-.52-.015-.78-.044a9.33 9.33 0 0 0 5.038 1.472c6.036 0 9.332-4.997 9.332-9.323 0-.14 0-.28-.01-.42.64-.46 1.2-1.04 1.64-1.7l-.031-.012z\"></path></g></svg>\\n';",
    "/**\n * This module defines the set of global events that are dispatched\n * across the bridge between the sidebar and annotator\n */\nexport default {\n  // Events that the sidebar sends to the annotator\n  // ----------------------------------------------\n\n  /**\n   * The updated feature flags for the user\n   */\n  FEATURE_FLAGS_UPDATED: 'featureFlagsUpdated',\n\n  /**\n   * The sidebar is asking the annotator to open the partner site help page.\n   */\n  HELP_REQUESTED: 'helpRequested',\n\n  /** The sidebar is asking the annotator to do a partner site log in\n   *  (for example, pop up a log in window). This is used when the client is\n   *  embedded in a partner site and a log in button in the client is clicked.\n   */\n  LOGIN_REQUESTED: 'loginRequested',\n\n  /** The sidebar is asking the annotator to do a partner site log out.\n   *  This is used when the client is embedded in a partner site and a log out\n   *  button in the client is clicked.\n   */\n  LOGOUT_REQUESTED: 'logoutRequested',\n\n  /**\n   * The sidebar is asking the annotator to open the partner site profile page.\n   */\n  PROFILE_REQUESTED: 'profileRequested',\n\n  /**\n   * The set of annotations was updated.\n   */\n  PUBLIC_ANNOTATION_COUNT_CHANGED: 'publicAnnotationCountChanged',\n\n  /**\n   * The sidebar is asking the annotator to do a partner site sign-up.\n   */\n  SIGNUP_REQUESTED: 'signupRequested',\n\n  // Events that the annotator sends to the sidebar\n  // ----------------------------------------------\n};\n",
    "import RPC from './frame-rpc';\n\n/**\n * The Bridge service sets up a channel between frames and provides an events\n * API on top of it.\n */\nexport default class Bridge {\n  constructor() {\n    this.links = [];\n    this.channelListeners = {};\n    this.onConnectListeners = [];\n  }\n\n  /**\n   * Destroy all channels created with `createChannel`.\n   *\n   * This removes the event listeners for messages arriving from other windows.\n   */\n  destroy() {\n    Array.from(this.links).map(link => link.channel.destroy());\n  }\n\n  /**\n   * Create a communication channel between this window and `source`.\n   *\n   * The created channel is added to the list of channels which `call`\n   * and `on` send and receive messages over.\n   *\n   * @param {Window} source - The source window.\n   * @param {string} origin - The origin of the document in `source`.\n   * @param {string} token\n   * @return {RPC} - Channel for communicating with the window.\n   */\n  createChannel(source, origin, token) {\n    let channel = null;\n    let connected = false;\n\n    const ready = () => {\n      if (connected) {\n        return;\n      }\n      connected = true;\n      Array.from(this.onConnectListeners).forEach(cb =>\n        cb.call(null, channel, source)\n      );\n    };\n\n    const connect = (_token, cb) => {\n      if (_token === token) {\n        cb();\n        ready();\n      }\n    };\n\n    const listeners = { connect, ...this.channelListeners };\n\n    // Set up a channel\n    channel = new RPC(window, source, origin, listeners);\n\n    // Fire off a connection attempt\n    channel.call('connect', token, ready);\n\n    // Store the newly created channel in our collection\n    this.links.push({\n      channel,\n      window: source,\n    });\n\n    return channel;\n  }\n\n  /**\n   * Make a method call on all channels, collect the results and pass them to a\n   * callback when all results are collected.\n   *\n   * @param {string} method - Name of remote method to call.\n   * @param {any[]} args - Arguments to method.\n   * @return {Promise<any[]>} - Array of results, one per connected frame\n   */\n  call(method, ...args) {\n    let cb;\n    if (typeof args[args.length - 1] === 'function') {\n      cb = args[args.length - 1];\n      args = args.slice(0, -1);\n    }\n\n    const _makeDestroyFn = c => {\n      return error => {\n        c.destroy();\n        this.links = Array.from(this.links)\n          .filter(l => l.channel !== c)\n          .map(l => l);\n        throw error;\n      };\n    };\n\n    const promises = this.links.map(function (l) {\n      const p = new Promise(function (resolve, reject) {\n        const timeout = setTimeout(() => resolve(null), 1000);\n        try {\n          return l.channel.call(method, ...Array.from(args), function (\n            err,\n            result\n          ) {\n            clearTimeout(timeout);\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(result);\n            }\n          });\n        } catch (error) {\n          const err = error;\n          return reject(err);\n        }\n      });\n\n      // Don't assign here. The disconnect is handled asynchronously.\n      return p.catch(_makeDestroyFn(l.channel));\n    });\n\n    let resultPromise = Promise.all(promises);\n\n    if (cb) {\n      resultPromise = resultPromise\n        .then(results => cb(null, results))\n        .catch(error => cb(error));\n    }\n\n    return resultPromise;\n  }\n\n  /**\n   * Register a callback to be invoked when any connected channel sends a\n   * message to this `Bridge`.\n   *\n   * @param {string} method\n   * @param {Function} callback\n   */\n  on(method, callback) {\n    if (this.channelListeners[method]) {\n      throw new Error(`Listener '${method}' already bound in Bridge`);\n    }\n    this.channelListeners[method] = callback;\n    return this;\n  }\n\n  /**\n   * Unregister any callbacks registered with `on`.\n   *\n   * @param {string} method\n   */\n  off(method) {\n    delete this.channelListeners[method];\n    return this;\n  }\n\n  /**\n   * Add a function to be called upon a new connection.\n   *\n   * @param {Function} callback\n   */\n  onConnect(callback) {\n    this.onConnectListeners.push(callback);\n    return this;\n  }\n}\n",
    "/**\n * Normalize a keyboard event key name.\n *\n * Several old browsers, such as IE11, use alternate key\n * names for keyboard events. If any abnormal keys are used,\n * this method returns the normalized name so our UI\n * components don't require a special case.\n *\n * @param {string} key - The keyboard event `key` name\n * @return {string} - Normalized `key` name\n */\nexport function normalizeKeyName(key) {\n  const mappings = {\n    Left: 'ArrowLeft',\n    Up: 'ArrowUp',\n    Down: 'ArrowDown',\n    Right: 'ArrowRight',\n    Spacebar: ' ',\n    Del: 'Delete',\n  };\n  return mappings[key] ? mappings[key] : key;\n}\n",
    "import classnames from 'classnames';\nimport { createElement } from 'preact';\nimport { useLayoutEffect, useRef } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\n/**\n * Object mapping icon names to SVG markup.\n *\n * @typedef {Object.<string,string>} IconMap\n */\n\n/**\n * @template T\n * @typedef {import(\"preact/hooks\").Ref<T>} Ref\n */\n\n/**\n * Map of icon name to SVG data.\n *\n * @type {IconMap}\n */\nlet iconRegistry = {};\n\n/**\n * @typedef SvgIconProps\n * @prop {string} name - The name of the icon to display.\n *   The name must match a name that has already been registered using the\n *   `registerIcons` function.\n * @prop {string} [className] - A CSS class to apply to the `<svg>` element.\n * @prop {boolean} [inline] - Apply a style allowing for inline display of icon wrapper.\n * @prop {string} [title] - Optional title attribute to apply to the SVG's containing `span`.\n */\n\n/**\n * Component that renders icons using inline `<svg>` elements.\n * This enables their appearance to be customized via CSS.\n *\n * This matches the way we do icons on the website, see\n * https://github.com/hypothesis/h/pull/3675\n *\n * @param {SvgIconProps} props\n */\nexport default function SvgIcon({\n  name,\n  className = '',\n  inline = false,\n  title = '',\n}) {\n  if (!iconRegistry[name]) {\n    throw new Error(`Icon name \"${name}\" is not registered`);\n  }\n  const markup = iconRegistry[name];\n\n  const element = /** @type {Ref<HTMLElement>} */ (useRef());\n  useLayoutEffect(() => {\n    const svg = element.current.querySelector('svg');\n\n    // The icon should always contain an `<svg>` element, but check here as we\n    // don't validate the markup when it is registered.\n    if (svg) {\n      svg.setAttribute('class', className);\n    }\n  }, [\n    className,\n    // `markup` is a dependency of this effect because the SVG is replaced if\n    // it changes.\n    markup,\n  ]);\n\n  const spanProps = {};\n  if (title) {\n    spanProps.title = title;\n  }\n\n  return (\n    <span\n      className={classnames('svg-icon', { 'svg-icon--inline': inline })}\n      dangerouslySetInnerHTML={{ __html: markup }}\n      ref={element}\n      {...spanProps}\n    />\n  );\n}\n\nSvgIcon.propTypes = {\n  name: propTypes.string.isRequired,\n  className: propTypes.string,\n  inline: propTypes.bool,\n  title: propTypes.string,\n};\n\n/**\n * Register icons for use with the `SvgIcon` component.\n *\n * @param {IconMap} icons\n * @param {Object} options\n *  @param {boolean} [options.reset] - If `true`, remove existing registered icons.\n */\nexport function registerIcons(icons, { reset = false } = {}) {\n  if (reset) {\n    iconRegistry = {};\n  }\n  Object.assign(iconRegistry, icons);\n}\n\n/**\n * Return the currently available icons.\n *\n * To register icons, don't mutate this directly but call `registerIcons`\n * instead.\n *\n * @return {IconMap}\n */\nexport function availableIcons() {\n  return iconRegistry;\n}\n",
    "/**\n * Callback invoked when another frame is discovered in this window which runs\n * the Hypothesis sidebar or annotation layer code.\n *\n * @callback DiscoveryCallback\n * @param {Window} source - The frame that was discovered.\n * @param {string} origin - The origin to use when posting messages to this frame.\n * @param {string} token - A random identifier used by this frame.\n */\n\n/**\n * Discovery finds frames in the current tab/window that can be annotated (the\n * \"clients\") or can fetch annotations from the backend (the \"server\").\n *\n * Currently only one frame can be designated as the server.\n * (FIXME: This causes problems. See https://github.com/hypothesis/client/issues/249,\n * https://github.com/hypothesis/client/issues/187).\n *\n * The discovery process works as follows:\n *\n * 1. Clients and servers perform a top-down, breadth-first traversal of the\n *    frame hierarchy in the tab and send either an \"offer\" (server) or\n *    \"discovery\" (client) message to each frame, except for their own frame.\n * 2. Clients listen for \"offer\" messages and respond with \"request\" messages.\n * 3. Servers listen for \"discovery\" messages and respond with \"offer\"\n *    messages.\n * 4. Servers also listen for \"request\" messages and respond with \"ack\" messages\n *    that include a random channel identifier. At this point servers call\n *    the callback to `startDiscovery`.\n * 5. Clients listen for \"ack\" messages. When they receive one from a server\n *    they call the callback to `startDiscovery`.\n */\nexport default class Discovery {\n  /**\n   * @param {Window} target\n   * @param {Object} options\n   */\n  constructor(target, options = {}) {\n    /** The window to send and listen for messages with. */\n    this.target = target;\n\n    /**\n     * Set whether this frame acts as a server (fetches annotations from the\n     * API) or a client (contains annotatable content and displays highlights).\n     */\n    this.server = false;\n\n    /** Origins allowed to communicate with this frame. */\n    this.origin = '*';\n\n    /**\n     * Flag set in client frames to indicate when they are waiting for a\n     * confirmation from a server frame.\n     */\n    this.requestInProgress = false;\n\n    this.onDiscovery = null;\n\n    if (typeof options.server !== 'undefined') {\n      this.server = options.server;\n    }\n\n    if (typeof options.origin !== 'undefined') {\n      this.origin = options.origin;\n    }\n\n    this._onMessage = this._onMessage.bind(this);\n  }\n\n  /**\n   * Find other frames to communicate with.\n   *\n   * See the class overview for a description of how the discovery process\n   * works.\n   *\n   * @param {DiscoveryCallback} onDiscovery - Callback to invoke with a token when\n   *   another frame is discovered.\n   */\n  startDiscovery(onDiscovery) {\n    if (this.onDiscovery) {\n      throw new Error(\n        'Discovery is already in progress. Call stopDiscovery() first'\n      );\n    }\n\n    this.onDiscovery = onDiscovery;\n\n    // Listen for messages from other frames.\n    this.target.addEventListener('message', this._onMessage, false);\n    this._beacon();\n  }\n\n  /**\n   * Stop listening for communication requests from other frames.\n   */\n  stopDiscovery() {\n    this.onDiscovery = null;\n    this.target.removeEventListener('message', this._onMessage);\n  }\n\n  /**\n   * Send a message to other frames in the current window to inform them about\n   * the existence of this frame and tell them whether this frame is a client\n   * or server.\n   */\n  _beacon() {\n    let beaconMessage;\n    if (this.server) {\n      beaconMessage = '__cross_frame_dhcp_offer';\n    } else {\n      beaconMessage = '__cross_frame_dhcp_discovery';\n    }\n\n    // Perform a top-down, breadth-first traversal of frames in the current\n    // window and send messages to them.\n    const queue = [this.target.top];\n    while (queue.length > 0) {\n      const parent = /** @type {Window} */ (queue.shift());\n      if (parent !== this.target) {\n        parent.postMessage(beaconMessage, this.origin);\n      }\n      for (let i = 0; i < parent.frames.length; i++) {\n        queue.push(parent.frames[i]);\n      }\n    }\n  }\n\n  /**\n   * Handle a `MessageEvent` from another frame which _may_ be from a\n   * `Discovery` instance.\n   */\n  _onMessage(event) {\n    const { source, data } = event;\n    let origin = event.origin;\n\n    // If `origin` is 'null' the source frame is a file URL or loaded over some\n    // other scheme for which the `origin` is undefined. In this case, the only\n    // way to ensure the message arrives is to use the wildcard origin. See:\n    //\n    //   https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n    //\n    // When sending messages to or from a Firefox WebExtension, current\n    // versions of Firefox have a bug that causes the origin check to fail even\n    // though the target and actual origins of the message match.\n    if (\n      origin === 'null' ||\n      origin.match('moz-extension:') ||\n      window.location.protocol === 'moz-extension:'\n    ) {\n      origin = '*';\n    }\n\n    // Check if this is a recognized message from a `Discovery` instance in\n    // another frame.\n    const match =\n      typeof data === 'string' &&\n      data.match(\n        /^__cross_frame_dhcp_(discovery|offer|request|ack)(?::(\\d+))?$/\n      );\n    if (!match) {\n      return;\n    }\n\n    // Handle the message, and send a response back to the original frame if\n    // appropriate.\n    let [, messageType, messageToken] = match;\n    const { reply, discovered, token } = this._processMessage(\n      messageType,\n      messageToken,\n      origin\n    );\n\n    if (reply) {\n      source.postMessage('__cross_frame_dhcp_' + reply, origin);\n    }\n\n    // Notify caller of `startDiscovery` in this frame that we found another\n    // frame.\n    if (discovered && this.onDiscovery) {\n      this.onDiscovery.call(null, source, origin, token);\n    }\n  }\n\n  _processMessage(messageType, token, origin) {\n    let reply = null;\n    let discovered = false;\n\n    if (this.server) {\n      // Handle message as a server frame.\n      if (messageType === 'discovery') {\n        reply = 'offer';\n      } else if (messageType === 'request') {\n        token = this.generateToken();\n        reply = `ack:${token}`;\n        discovered = true;\n      } else if (messageType === 'offer' || messageType === 'ack') {\n        throw new Error(\n          `A second Discovery server has been detected at ${origin}.\n This is unsupported and will cause unexpected behaviour.`\n        );\n      }\n    } else {\n      // Handle message as a client frame.\n      // eslint-disable-next-line no-lonely-if\n      if (messageType === 'offer') {\n        // eslint-disable-line no-lonely-if\n        if (!this.requestInProgress) {\n          this.requestInProgress = true;\n          reply = 'request';\n        }\n      } else if (messageType === 'ack') {\n        this.requestInProgress = false;\n        discovered = true;\n      }\n    }\n\n    return { reply, discovered, token };\n  }\n\n  /**\n   * Generate a random identifier for a communication channel between a client\n   * and a server.\n   */\n  generateToken() {\n    return Math.random().toString().replace(/\\D/g, '');\n  }\n}\n",
    "/**\n * Ponyfills [1] for DOM element methods that are not supported in all browsers.\n *\n * [1] https://github.com/sindresorhus/ponyfill\n */\n\n/**\n * Implementation of `element.closest(selector)`. This is used to support browsers\n * (IE 11) that don't have a native implementation.\n *\n * @param {Element|null} element\n * @param {string} selector\n */\nexport function closest(element, selector) {\n  while (element) {\n    if (element.matches(selector)) {\n      return element;\n    }\n    element = element.parentElement;\n  }\n  return null;\n}\n",
    "/* eslint-disable */\n\n/** This software is released under the MIT license:\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n */\n\n/**\n * This is a modified copy of index.js from\n * https://github.com/substack/frame-rpc (see git log for the modifications),\n * upstream license above.\n */\n\nconst VERSION = '1.0.0';\n\n/**\n *  @constructor\n *  @param {Window} src\n *  @param {Window} dst\n *  @param {string} origin\n *  @param {(Object<string, ((any) => any)>) | ((any) => any)} methods\n */\nexport default function RPC(src, dst, origin, methods) {\n  if (!(this instanceof RPC)) return new RPC(src, dst, origin, methods);\n  const self = this;\n  this.src = src;\n  this.dst = dst;\n\n  if (origin === '*') {\n    this.origin = '*';\n  } else {\n    const uorigin = new URL(origin);\n    this.origin = uorigin.protocol + '//' + uorigin.host;\n  }\n\n  this._sequence = 0;\n  this._callbacks = {};\n\n  this._onmessage = function (ev) {\n    if (self._destroyed) return;\n    if (self.dst !== ev.source) return;\n    if (self.origin !== '*' && ev.origin !== self.origin) return;\n    if (!ev.data || typeof ev.data !== 'object') return;\n    if (ev.data.protocol !== 'frame-rpc') return;\n    if (!Array.isArray(ev.data.arguments)) return;\n    self._handle(ev.data);\n  };\n  this.src.addEventListener('message', this._onmessage);\n  this._methods =\n    (typeof methods === 'function' ? methods(this) : methods) || {};\n}\n\nRPC.prototype.destroy = function () {\n  this._destroyed = true;\n  this.src.removeEventListener('message', this._onmessage);\n};\n\n/**\n * @param {string} method\n */\nRPC.prototype.call = function (method) {\n  const args = [].slice.call(arguments, 1);\n  return this.apply(method, args);\n};\n\n/**\n * @param {string} method\n * @param {any[]} args\n */\nRPC.prototype.apply = function (method, args) {\n  if (this._destroyed) return;\n  const seq = this._sequence++;\n  if (typeof args[args.length - 1] === 'function') {\n    this._callbacks[seq] = args[args.length - 1];\n    args = args.slice(0, -1);\n  }\n  this.dst.postMessage(\n    {\n      protocol: 'frame-rpc',\n      version: VERSION,\n      sequence: seq,\n      method: method,\n      arguments: args,\n    },\n    this.origin\n  );\n};\n\nRPC.prototype._handle = function (msg) {\n  const self = this;\n  if (self._destroyed) return;\n  if (msg.hasOwnProperty('method')) {\n    if (!this._methods.hasOwnProperty(msg.method)) return;\n    const args = msg.arguments.concat(function () {\n      self.dst.postMessage(\n        {\n          protocol: 'frame-rpc',\n          version: VERSION,\n          response: msg.sequence,\n          arguments: [].slice.call(arguments),\n        },\n        self.origin\n      );\n    });\n    this._methods[msg.method].apply(this._methods, args);\n  } else if (msg.hasOwnProperty('response')) {\n    const cb = this._callbacks[msg.response];\n    delete this._callbacks[msg.response];\n    if (cb) cb.apply(null, msg.arguments);\n  }\n};\n",
    "/**\n * @typedef Provider\n * @prop {any} [value] - The value for the object\n * @prop {Function} [class] - A class that should be instantiated to create the object\n * @prop {Function} [factory] - Function that should be called to create the object\n */\n\n/**\n * @param {Provider} provider\n */\nfunction isValidProvider(provider) {\n  if (typeof provider !== 'object' || provider === null) {\n    return false;\n  }\n\n  return (\n    'value' in provider ||\n    typeof provider.class === 'function' ||\n    typeof provider.factory === 'function'\n  );\n}\n\n/**\n * `Injector` is a dependency injection container.\n *\n * It provides a convenient way to instantiate a set of named objects with\n * dependencies. Objects are constructed using a _provider_, which can be a\n * factory function, class constructor or value.\n *\n * If the provider is a factory function or constructor it may have dependencies\n * which are indicated by a `$inject` property on the function/class which\n * is a list of the names of the dependencies. The `$inject` property can be\n * added manually or by a compiler plugin (eg. `babel-plugin-angularjs-annotate`).\n *\n * To construct an object, call the `register` method with the name and provider\n * for the object and each of its dependencies, and then call\n * the `get` method to construct the object and its dependencies and return it.\n *\n * To run a function with arguments provided by the container, without registering\n * the function in the container for use by other factories or classes,\n * use the `run` method.\n */\nexport class Injector {\n  constructor() {\n    // Map of name to object specifying how to create/provide that object.\n    this._providers = new Map();\n\n    // Map of name to existing instance.\n    this._instances = new Map();\n\n    // Set of instances already being constructed. Used to detect circular\n    // dependencies.\n    this._constructing = new Set();\n  }\n\n  /**\n   * Construct or return the existing instance of an object with a given `name`\n   *\n   * @param {string} name - Name of object to construct\n   * @return {any} - The constructed object\n   */\n  get(name) {\n    if (this._instances.has(name)) {\n      return this._instances.get(name);\n    }\n\n    const provider = this._providers.get(name);\n\n    if (!provider) {\n      throw new Error(`\"${name}\" is not registered`);\n    }\n\n    if ('value' in provider) {\n      this._instances.set(name, provider.value);\n      return provider.value;\n    }\n\n    if (this._constructing.has(name)) {\n      throw new Error(\n        `Encountered a circular dependency when constructing \"${name}\"`\n      );\n    }\n\n    this._constructing.add(name);\n    try {\n      const resolvedDependencies = [];\n      const dependencies =\n        ('class' in provider && provider.class.$inject) ||\n        ('factory' in provider && provider.factory.$inject) ||\n        [];\n\n      for (const dependency of dependencies) {\n        try {\n          resolvedDependencies.push(this.get(dependency));\n        } catch (e) {\n          const resolveErr = new Error(\n            `Failed to construct dependency \"${dependency}\" of \"${name}\": ${e.message}`\n          );\n          // @ts-ignore - `cause` is a custom property\n          resolveErr.cause = e;\n          throw resolveErr;\n        }\n      }\n\n      let instance;\n      if (provider.class) {\n        // eslint-disable-next-line new-cap\n        instance = new provider.class(...resolvedDependencies);\n      } else {\n        const factory = provider.factory;\n        instance = factory(...resolvedDependencies);\n      }\n      this._instances.set(name, instance);\n\n      return instance;\n    } finally {\n      this._constructing.delete(name);\n    }\n  }\n\n  /**\n   * Register a provider for an object in the container.\n   *\n   * If `provider` is a function, it is treated like a class. In other words\n   * `register(name, SomeClass)` is the same as `register(name, { class: SomeClass })`.\n   *\n   * @param {string} name - Name of object\n   * @param {Function|Provider} provider -\n   *   The class or other provider to use to create the object.\n   * @return {this}\n   */\n  register(name, provider) {\n    if (typeof provider === 'function') {\n      provider = { class: provider };\n    } else if (!isValidProvider(provider)) {\n      throw new Error(`Invalid provider for \"${name}\"`);\n    }\n\n    this._providers.set(name, provider);\n    return this;\n  }\n\n  /**\n   * Run a function which uses one or more dependencies provided by the\n   * container.\n   *\n   * @param {Function} callback -\n   *   A callback to run, with dependencies annotated in the same way as\n   *   functions or classes passed to `register`.\n   * @return {any} - Returns the result of running the function.\n   */\n  run(callback) {\n    const tempName = 'Injector.run';\n    this.register(tempName, { factory: callback });\n\n    try {\n      return this.get(tempName);\n    } finally {\n      this._instances.delete(tempName);\n      this._providers.delete(tempName);\n    }\n  }\n}\n",
    "import { options } from 'preact';\n\nimport { isIE11 } from './user-agent';\n\n/**\n * Force the dir=\"auto\" attribute to be dir=\"\" as this otherwise causes\n * an exception in IE11 and breaks subsequent rendering.\n *\n * @param {Object} _options - Test seam\n */\nexport function setupIE11Fixes(_options = options) {\n  if (isIE11()) {\n    const prevHook = _options.vnode;\n    _options.vnode = vnode => {\n      if (typeof vnode.type === 'string') {\n        if ('dir' in vnode.props && vnode.props.dir === 'auto') {\n          // Re-assign `vnode.props.dir` if its value is \"auto\"\n          vnode.props.dir = '';\n        }\n      }\n      // Call previously defined hook if there was any\n      if (prevHook) {\n        prevHook(vnode);\n      }\n    };\n  }\n}\n",
    "// `Object.assign()`-like helper. Used because this script needs to work\n// in IE 10/11 without polyfills.\nfunction assign(dest, src) {\n  for (const k in src) {\n    if (src.hasOwnProperty(k)) {\n      dest[k] = src[k];\n    }\n  }\n  return dest;\n}\n\n/**\n * Return a parsed `js-hypothesis-config` object from the document, or `{}`.\n *\n * Find all `<script class=\"js-hypothesis-config\">` tags in the given document,\n * parse them as JSON, and return the parsed object.\n *\n * If there are no `js-hypothesis-config` tags in the document then return\n * `{}`.\n *\n * If there are multiple `js-hypothesis-config` tags in the document then merge\n * them into a single returned object (when multiple scripts contain the same\n * setting names, scripts further down in the document override those further\n * up).\n *\n * @param {Document|Element} document - The root element to search.\n */\nexport function jsonConfigsFrom(document) {\n  const config = {};\n  const settingsElements = document.querySelectorAll(\n    'script.js-hypothesis-config'\n  );\n\n  for (let i = 0; i < settingsElements.length; i++) {\n    let settings;\n    try {\n      settings = JSON.parse(settingsElements[i].textContent || '');\n    } catch (err) {\n      console.warn(\n        'Could not parse settings from js-hypothesis-config tags',\n        err\n      );\n      settings = {};\n    }\n    assign(config, settings);\n  }\n\n  return config;\n}\n",
    "/**\n * Type conversion methods that coerce incoming configuration values to an\n * expected type or format that other parts of the UI may make assumptions\n * on. This is needed for incoming configuration values that are otherwise\n * not sanitized.\n *\n * Note that if the values passed are plain javascript values (such as ones\n * produced from JSON.parse), then these methods do not throw errors.\n */\n\n/**\n * Returns a boolean\n *\n * @param {any} value - initial value\n * @return {boolean}\n */\nexport function toBoolean(value) {\n  if (typeof value === 'string') {\n    if (value.trim().toLocaleLowerCase() === 'false') {\n      // \"false\", \"False\", \" false\", \"FALSE\" all return false\n      return false;\n    }\n  }\n  const numericalVal = Number(value);\n  if (!isNaN(numericalVal)) {\n    return Boolean(numericalVal);\n  }\n  // Any non numerical or falsely string should return true, otherwise return false\n  return typeof value === 'string';\n}\n\n/**\n * Returns either an integer or NaN\n *\n * @param {any} value - initial value\n * @return {number}\n */\nexport function toInteger(value) {\n  // Acts as a simple wrapper\n  return parseInt(value);\n}\n\n/**\n * Returns either the value if its an object or an empty object\n *\n * @param {any} value - initial value\n * @return {Object}\n */\nexport function toObject(value) {\n  if (typeof value === 'object' && value !== null) {\n    return value;\n  }\n  // Don't attempt to fix the values, just ensure type correctness\n  return {};\n}\n\n/**\n * Returns the value as a string or an empty string if the\n * value undefined, null or otherwise falsely.\n *\n * @param {any} value - initial value\n * @return {string}\n */\nexport function toString(value) {\n  if (value && typeof value.toString === 'function') {\n    return value.toString();\n  }\n  return '';\n}\n",
    "/**\n * Helper methods to identify browser versions and os types\n */\n\n/**\n * Returns true when the browser is IE11.\n *\n * @param _userAgent {string} - Test seam\n */\nexport const isIE11 = (_userAgent = window.navigator.userAgent) => {\n  return _userAgent.indexOf('Trident/7.0') >= 0;\n};\n\n/**\n * Returns true when the OS is Mac OS.\n *\n * @param _userAgent {string} - Test seam\n */\nexport const isMacOS = (_userAgent = window.navigator.userAgent) => {\n  return _userAgent.indexOf('Mac OS') >= 0;\n};\n",
    "let shownWarnings = {};\n\n/**\n * Log a warning if it has not already been reported.\n *\n * This is useful to avoid spamming the console if a warning is emitted in a\n * context that may be called frequently.\n *\n * @param {...any} args -\n *   Arguments to forward to `console.warn`. The arguments `toString()` values\n *   are concatenated into a string key which is used to determine if the warning\n *   has been logged before.\n */\nexport default function warnOnce(...args) {\n  const key = args.join();\n  if (key in shownWarnings) {\n    return;\n  }\n  console.warn(...args);\n  shownWarnings[key] = true;\n}\n\nwarnOnce.reset = () => {\n  shownWarnings = {};\n};\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport uiConstants from '../ui-constants';\nimport useStore from '../store/use-store';\nimport { isShareable, shareURI } from '../util/annotation-sharing';\nimport { isPrivate, permits } from '../util/permissions';\nimport { withServices } from '../util/service-context';\n\nimport AnnotationShareControl from './annotation-share-control';\nimport Button from './button';\n\n/**\n *  @typedef {import(\"../../types/api\").Annotation} Annotation\n *  @typedef {import('../../types/config').HostConfig} HostConfig\n */\n\n/**\n * @typedef AnnotationActionBarProps\n * @prop {Annotation} annotation - The annotation in question\n * @prop {() => any} onReply - Callbacks for when action buttons are clicked/tapped\n * @prop {Object} annotationsService\n * @prop {HostConfig} settings\n * @prop {Object} toastMessenger\n */\n\n/**\n * A collection of `Button`s in the footer area of an annotation that take\n * actions on the annotation.\n *\n * @param {AnnotationActionBarProps} props\n */\nfunction AnnotationActionBar({\n  annotation,\n  annotationsService,\n  onReply,\n  settings,\n  toastMessenger,\n}) {\n  const userProfile = useStore(store => store.profile());\n  const annotationGroup = useStore(store => store.getGroup(annotation.group));\n  const isLoggedIn = useStore(store => store.isLoggedIn());\n\n  const openSidebarPanel = useStore(store => store.openSidebarPanel);\n  // Is the current user allowed to take the given `action` on this annotation?\n  const userIsAuthorizedTo = action => {\n    return permits(annotation.permissions, action, userProfile.userid);\n  };\n\n  const showDeleteAction = userIsAuthorizedTo('delete');\n  const showEditAction = userIsAuthorizedTo('update');\n\n  // Anyone may flag an annotation except the annotation's author.\n  // This option is even presented to anonymous users\n  const showFlagAction = userProfile.userid !== annotation.user;\n  const showShareAction = isShareable(annotation, settings);\n\n  const createDraft = useStore(store => store.createDraft);\n\n  const onDelete = () => {\n    if (window.confirm('Are you sure you want to delete this annotation?')) {\n      annotationsService.delete(annotation).catch(err => {\n        toastMessenger.error(err.message);\n      });\n    }\n  };\n\n  const onEdit = () => {\n    createDraft(annotation, {\n      tags: annotation.tags,\n      text: annotation.text,\n      isPrivate: isPrivate(annotation.permissions),\n    });\n  };\n\n  const onFlag = () => {\n    if (!userProfile.userid) {\n      toastMessenger.error('You must be logged in to report an annotation');\n      return;\n    }\n    annotationsService\n      .flag(annotation)\n      .catch(() => toastMessenger.error('Flagging annotation failed'));\n  };\n\n  const onReplyClick = () => {\n    if (!isLoggedIn) {\n      openSidebarPanel(uiConstants.PANEL_LOGIN_PROMPT);\n      return;\n    }\n    onReply();\n  };\n\n  return (\n    <div className=\"annotation-action-bar u-layout-row\">\n      {showEditAction && <Button icon=\"edit\" title=\"Edit\" onClick={onEdit} />}\n      {showDeleteAction && (\n        <Button icon=\"trash\" title=\"Delete\" onClick={onDelete} />\n      )}\n      <Button icon=\"reply\" title=\"Reply\" onClick={onReplyClick} />\n      {showShareAction && (\n        <AnnotationShareControl\n          annotation={annotation}\n          group={annotationGroup}\n          shareUri={shareURI(annotation)}\n        />\n      )}\n      {showFlagAction && !annotation.flagged && (\n        <Button\n          icon=\"flag\"\n          title=\"Report this annotation to moderators\"\n          onClick={onFlag}\n        />\n      )}\n      {showFlagAction && annotation.flagged && (\n        <Button\n          isPressed={true}\n          icon=\"flag--active\"\n          title=\"Annotation has been reported to the moderators\"\n        />\n      )}\n    </div>\n  );\n}\n\nAnnotationActionBar.propTypes = {\n  annotation: propTypes.object.isRequired,\n  onReply: propTypes.func.isRequired,\n  annotationsService: propTypes.object.isRequired,\n  settings: propTypes.object.isRequired,\n  toastMessenger: propTypes.object.isRequired,\n};\n\nAnnotationActionBar.injectedProps = [\n  'annotationsService',\n  'settings',\n  'toastMessenger',\n];\n\nexport default withServices(AnnotationActionBar);\n",
    "import { createElement } from 'preact';\nimport { useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport { isHidden } from '../util/annotation-metadata';\nimport { withServices } from '../util/service-context';\nimport { applyTheme } from '../util/theme';\n\nimport Button from './button';\nimport Excerpt from './excerpt';\nimport MarkdownEditor from './markdown-editor';\nimport MarkdownView from './markdown-view';\nimport TagEditor from './tag-editor';\nimport TagList from './tag-list';\n\n/**\n * @typedef {import(\"../../types/api\").Annotation} Annotation\n * @typedef {import(\"../../types/config\").MergedConfig} MergedConfig\n */\n\n/**\n * @typedef AnnotationBodyProps\n * @prop {Annotation} annotation - The annotation in question\n * @prop {boolean} [isEditing] - Whether to display the body in edit mode (if true) or view mode.\n * @prop {(a: Object<'tags', string[]>) => void} [onEditTags] - Callback invoked when the user edits tags.\n * @prop {(a?: Object<'text', string>) => void} [onEditText] - Callback invoked when the user edits the content of the annotation body.\n * @prop {string[]} tags\n * @prop {string} text -\n *     The markdown annotation body, which is either rendered as HTML (if `isEditing`\n *     is false) or displayed in a text area otherwise.\n * @prop {MergedConfig} [settings]\n */\n\n/**\n * Display the rendered content of an annotation.\n *\n * @param {AnnotationBodyProps} props\n */\nfunction AnnotationBody({\n  annotation,\n  isEditing,\n  onEditTags,\n  onEditText,\n  tags,\n  text,\n  settings,\n}) {\n  // Should the text content of `Excerpt` be rendered in a collapsed state,\n  // assuming it is collapsible (exceeds allotted collapsed space)?\n  const [isCollapsed, setIsCollapsed] = useState(true);\n\n  // Does the text content of `Excerpt` take up enough vertical space that\n  // collapsing/expanding is relevant?\n  const [isCollapsible, setIsCollapsible] = useState(false);\n\n  const toggleText = isCollapsed ? 'More' : 'Less';\n  const showExcerpt = !isEditing && text.length > 0;\n  const showTagList = !isEditing && tags.length > 0;\n\n  const textStyle = applyTheme(['annotationFontFamily'], settings);\n\n  return (\n    <div className=\"annotation-body\">\n      {showExcerpt && (\n        <Excerpt\n          collapse={isCollapsed}\n          collapsedHeight={400}\n          inlineControls={false}\n          onCollapsibleChanged={setIsCollapsible}\n          onToggleCollapsed={setIsCollapsed}\n          overflowThreshold={20}\n        >\n          <MarkdownView\n            textStyle={textStyle}\n            markdown={text}\n            textClass={{\n              'annotation-body__text': true,\n              'is-hidden': isHidden(annotation),\n            }}\n          />\n        </Excerpt>\n      )}\n      {isEditing && (\n        <MarkdownEditor\n          textStyle={textStyle}\n          label=\"Annotation body\"\n          text={text}\n          onEditText={onEditText}\n        />\n      )}\n      {isCollapsible && !isEditing && (\n        <div className=\"annotation-body__collapse-toggle\">\n          {/* @ts-ignore - TODO: Button props need to be fixed */}\n          <Button\n            buttonText={toggleText}\n            className=\"annotation-body__collapse-toggle-button\"\n            isExpanded={!isCollapsed}\n            onClick={() => {\n              setIsCollapsed(!isCollapsed);\n            }}\n            aria-label=\"Toggle visibility of full annotation text\"\n            title=\"Toggle visibility of full annotation text\"\n          />\n        </div>\n      )}\n      {showTagList && <TagList annotation={annotation} tags={tags} />}\n      {isEditing && <TagEditor onEditTags={onEditTags} tagList={tags} />}\n    </div>\n  );\n}\n\nAnnotationBody.propTypes = {\n  annotation: propTypes.object.isRequired,\n  isEditing: propTypes.bool,\n  onEditTags: propTypes.func,\n  onEditText: propTypes.func,\n  tags: propTypes.array.isRequired,\n  text: propTypes.string,\n  settings: propTypes.object,\n};\n\nAnnotationBody.injectedProps = ['settings'];\n\nexport default withServices(AnnotationBody);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport * as annotationMetadata from '../util/annotation-metadata';\n\n/** @typedef {import(\"../../types/api\").Annotation} Annotation */\n\n/**\n * @typedef AnnotationDocumentInfoProps\n * @prop {Annotation} annotation - Annotation for which the document metadata will be rendered\n */\n\n/**\n * Render some metadata about an annotation's document and link to it\n * if a link is available.\n *\n * @param {AnnotationDocumentInfoProps} props\n */\nexport default function AnnotationDocumentInfo({ annotation }) {\n  const documentInfo = annotationMetadata.domainAndTitle(annotation);\n  // If there's no document title, nothing to do here\n  if (!documentInfo.titleText) {\n    return null;\n  }\n\n  return (\n    <div className=\"annotation-document-info u-layout-row u-horizontal-rhythm\">\n      <div className=\"annotation-document-info__title u-color-text--muted\">\n        on &quot;\n        {documentInfo.titleLink ? (\n          <a href={documentInfo.titleLink}>{documentInfo.titleText}</a>\n        ) : (\n          <span>{documentInfo.titleText}</span>\n        )}\n        &quot;\n      </div>\n      {documentInfo.domain && (\n        <div className=\"annotation-document-info__domain u-color-text--muted\">\n          ({documentInfo.domain})\n        </div>\n      )}\n    </div>\n  );\n}\n\nAnnotationDocumentInfo.propTypes = {\n  annotation: propTypes.object.isRequired,\n};\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport { isHighlight, isReply } from '../util/annotation-metadata';\nimport { isPrivate } from '../util/permissions';\n\nimport AnnotationDocumentInfo from './annotation-document-info';\nimport AnnotationShareInfo from './annotation-share-info';\nimport AnnotationUser from './annotation-user';\nimport Button from './button';\nimport SvgIcon from '../../shared/components/svg-icon';\nimport Timestamp from './timestamp';\n\n/**\n * @typedef {import(\"../../types/api\").Annotation} Annotation\n */\n\n/**\n * @typedef AnnotationHeaderProps\n * @prop {Annotation} annotation\n * @prop {boolean} [isEditing] - Whether the annotation is actively being edited\n * @prop {number} [replyCount] - How many replies this annotation currently has\n * @prop {boolean} [showDocumentInfo] -\n *   Should document metadata be rendered? Hint: this is enabled for single annotation\n *   and stream views.\n * @prop {boolean} threadIsCollapsed - Is this thread currently collapsed?\n */\n\n/**\n * Render an annotation's header summary, including metadata about its user,\n * sharing status, document and timestamp. It also allows the user to\n * toggle sub-threads/replies in certain cases.\n *\n * @param {AnnotationHeaderProps} props\n */\nexport default function AnnotationHeader({\n  annotation,\n  isEditing,\n  replyCount,\n  showDocumentInfo,\n  threadIsCollapsed,\n}) {\n  const isCollapsedReply = isReply(annotation) && threadIsCollapsed;\n  const setExpanded = useStore(store => store.setExpanded);\n\n  const annotationIsPrivate = isPrivate(annotation.permissions);\n  const annotationLink = annotation.links ? annotation.links.html : '';\n\n  // NB: `created` and `updated` are strings, not `Date`s\n  const hasBeenEdited =\n    annotation.updated && annotation.created !== annotation.updated;\n  const showTimestamp = !isEditing && annotation.created;\n  const showEditedTimestamp = hasBeenEdited && !isCollapsedReply;\n\n  const replyPluralized = replyCount > 1 ? 'replies' : 'reply';\n  const replyButtonText = `${replyCount} ${replyPluralized}`;\n  const showReplyButton = replyCount > 0 && isCollapsedReply;\n  const showExtendedInfo = !isReply(annotation);\n\n  const onReplyCountClick = () => setExpanded(annotation.id, true);\n\n  return (\n    <header className=\"annotation-header\">\n      <div className=\"annotation-header__row\">\n        {annotationIsPrivate && !isEditing && (\n          <SvgIcon\n            className=\"annotation-header__icon\"\n            name=\"lock\"\n            title=\"This annotation is visible only to you\"\n          />\n        )}\n        <AnnotationUser annotation={annotation} />\n        {showReplyButton && (\n          <Button\n            className=\"annotation-header__reply-toggle\"\n            buttonText={replyButtonText}\n            onClick={onReplyCountClick}\n            title=\"Expand replies\"\n          />\n        )}\n\n        {showTimestamp && (\n          <div className=\"annotation-header__timestamp\">\n            {showEditedTimestamp && (\n              <span className=\"annotation-header__timestamp-edited\">\n                (edited{' '}\n                <Timestamp\n                  className=\"annotation-header__timestamp-edited-link\"\n                  timestamp={annotation.updated}\n                />\n                ){' '}\n              </span>\n            )}\n            <span className=\"annotation-header__timestamp-created\">\n              <Timestamp\n                className=\"annotation-header__timestamp-created-link u-color-text--muted\"\n                href={annotationLink}\n                timestamp={annotation.created}\n              />\n            </span>\n          </div>\n        )}\n      </div>\n\n      {showExtendedInfo && (\n        <div className=\"annotation-header__row\">\n          <AnnotationShareInfo annotation={annotation} />\n          {!isEditing && isHighlight(annotation) && (\n            <div className=\"annotation-header__highlight\">\n              <SvgIcon\n                name=\"highlight\"\n                title=\"This is a highlight. Click 'edit' to add a note or tag.\"\n                inline={true}\n                className=\"annotation-header__highlight-icon\"\n              />\n            </div>\n          )}\n          {showDocumentInfo && (\n            <AnnotationDocumentInfo annotation={annotation} />\n          )}\n        </div>\n      )}\n    </header>\n  );\n}\n\nAnnotationHeader.propTypes = {\n  annotation: propTypes.object.isRequired,\n  isEditing: propTypes.bool,\n  replyCount: propTypes.number,\n  showDocumentInfo: propTypes.bool,\n  threadIsCollapsed: propTypes.bool.isRequired,\n};\n",
    "import { createElement } from 'preact';\n\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * Render information about CC licensing\n */\nexport default function AnnotationLicense() {\n  return (\n    <div className=\"annotation-license\">\n      <a\n        className=\"u-layout-row u-color-text--muted\"\n        href=\"http://creativecommons.org/publicdomain/zero/1.0/\"\n        title=\"View more information about the Creative Commons Public Domain dedication\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <div className=\"annotation-license__icons\">\n          <SvgIcon name=\"cc-std\" inline={true} className=\"u-icon--xsmall\" />\n          <SvgIcon name=\"cc-zero\" inline={true} className=\"u-icon--xsmall\" />\n        </div>\n        Annotations can be freely reused by anyone for any purpose.\n      </a>\n    </div>\n  );\n}\n\nAnnotationLicense.propTypes = {};\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport { isNew, isReply } from '../util/annotation-metadata';\nimport { isShared } from '../util/permissions';\nimport { withServices } from '../util/service-context';\nimport { applyTheme } from '../util/theme';\n\nimport Button from './button';\nimport Menu from './menu';\nimport MenuItem from './menu-item';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef {import('../../types/api').Annotation} Annotation\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n */\n\n/**\n * @typedef AnnotationPublishControlProps\n * @prop {Annotation} annotation\n * @prop {boolean} [isDisabled]\n *  - Should the save button be disabled? Hint: it will be if the annotation has no content\n * @prop {() => any} onSave - Callback for save button click\n * @prop {MergedConfig} settings - Injected service\n */\n\n/**\n * Render a compound control button for publishing (saving) an annotation:\n * - Save the annotation — left side of button\n * - Choose sharing/privacy option - drop-down menu on right side of button\n *\n * @param {AnnotationPublishControlProps} props\n */\nfunction AnnotationPublishControl({\n  annotation,\n  isDisabled,\n  onSave,\n  settings,\n}) {\n  const draft = useStore(store => store.getDraft(annotation));\n  const group = useStore(store => store.getGroup(annotation.group));\n\n  const createDraft = useStore(store => store.createDraft);\n  const removeDraft = useStore(store => store.removeDraft);\n  const setDefault = useStore(store => store.setDefault);\n  const removeAnnotations = useStore(store => store.removeAnnotations);\n\n  if (!group) {\n    // If there is no group, then don't render anything as a missing group\n    // may mean the group is not loaded yet.\n    return null;\n  }\n\n  const isPrivate = draft ? draft.isPrivate : !isShared(annotation.permissions);\n\n  const publishDestination = isPrivate ? 'Only Me' : group.name;\n\n  // Revert changes to this annotation\n  const onCancel = () => {\n    removeDraft(annotation);\n    if (isNew(annotation)) {\n      removeAnnotations([annotation]);\n    }\n  };\n\n  const onSetPrivacy = level => {\n    createDraft(annotation, { ...draft, isPrivate: level === 'private' });\n    // Persist this as privacy default for future annotations unless this is a reply\n    if (!isReply(annotation)) {\n      setDefault('annotationPrivacy', level);\n    }\n  };\n\n  const buttonStyle = applyTheme(\n    ['ctaTextColor', 'ctaBackgroundColor'],\n    settings\n  );\n\n  const menuLabel = (\n    <div className=\"annotation-publish-button__menu-label\" style={buttonStyle}>\n      <SvgIcon name=\"expand-menu\" className=\"u-icon--small\" />\n    </div>\n  );\n\n  return (\n    <div className=\"annotation-publish-control\">\n      <div className=\"annotation-publish-button\">\n        <Button\n          className=\"annotation-publish-button__primary\"\n          style={buttonStyle}\n          onClick={onSave}\n          disabled={isDisabled}\n          title={`Publish this annotation to ${publishDestination}`}\n          buttonText={`Post to ${publishDestination}`}\n        />\n        {/* This wrapper div is necessary because of peculiarities with\n             Safari: see https://github.com/hypothesis/client/issues/2302 */}\n        <div\n          className=\"annotation-publish-button__menu-wrapper\"\n          style={buttonStyle}\n        >\n          <Menu\n            arrowClass=\"annotation-publish-button__menu-arrow\"\n            containerPositioned={false}\n            contentClass=\"annotation-publish-button__menu-content\"\n            label={menuLabel}\n            menuIndicator={false}\n            title=\"Change annotation sharing setting\"\n            align=\"left\"\n          >\n            <MenuItem\n              icon={group.type === 'open' ? 'public' : 'groups'}\n              label={group.name}\n              isSelected={!isPrivate}\n              onClick={() => onSetPrivacy('shared')}\n            />\n            <MenuItem\n              icon=\"lock\"\n              label=\"Only Me\"\n              isSelected={isPrivate}\n              onClick={() => onSetPrivacy('private')}\n            />\n          </Menu>\n        </div>\n      </div>\n      <div>\n        <Button\n          icon=\"cancel\"\n          className=\"annotation-publish-control__cancel-button\"\n          buttonText=\"Cancel\"\n          onClick={onCancel}\n        />\n      </div>\n    </div>\n  );\n}\n\nAnnotationPublishControl.propTypes = {\n  annotation: propTypes.object.isRequired,\n  isDisabled: propTypes.bool,\n  onSave: propTypes.func.isRequired,\n  settings: propTypes.object.isRequired,\n};\n\nAnnotationPublishControl.injectedProps = ['settings'];\n\nexport default withServices(AnnotationPublishControl);\n",
    "import classnames from 'classnames';\nimport { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport { isOrphan, quote } from '../util/annotation-metadata';\nimport { withServices } from '../util/service-context';\nimport { applyTheme } from '../util/theme';\n\nimport Excerpt from './excerpt';\n\n/**\n * @typedef {import('../../types/api').Annotation} Annotation\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n */\n\n/**\n * @typedef AnnotationQuoteProps\n * @prop {Annotation} annotation\n * @prop {boolean} [isFocused] - Is this annotation currently focused?\n * @prop {MergedConfig} [settings] - Used for theming.\n */\n\n/**\n * Display the selected text from the document associated with an annotation.\n *\n * @parm {AnnotationQuoteProps} props\n */\nfunction AnnotationQuote({ annotation, isFocused, settings = {} }) {\n  // The language for the quote may be different than the client's UI (set by\n  // `<html lang=\"...\">`).\n  //\n  // Use a blank string to indicate that it is unknown and it is up to the user\n  // agent to pick a default or analyze the content and guess.\n  //\n  // For web documents we could do better here and gather language information\n  // as part of the annotation anchoring process.\n  const documentLanguage = '';\n\n  return (\n    <div\n      className={classnames('annotation-quote', {\n        'is-orphan': isOrphan(annotation),\n        'is-focused': isFocused,\n      })}\n    >\n      <Excerpt\n        collapsedHeight={35}\n        inlineControls={true}\n        overflowThreshold={20}\n      >\n        <blockquote\n          className=\"annotation-quote__quote\"\n          dir=\"auto\"\n          lang={documentLanguage}\n          style={applyTheme(['selectionFontFamily'], settings)}\n        >\n          {quote(annotation)}\n        </blockquote>\n      </Excerpt>\n    </div>\n  );\n}\n\nAnnotationQuote.propTypes = {\n  annotation: propTypes.object.isRequired,\n  isFocused: propTypes.bool,\n  settings: propTypes.object,\n};\n\nAnnotationQuote.injectedProps = ['settings'];\n\nexport default withServices(AnnotationQuote);\n",
    "import { createElement } from 'preact';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport { copyText } from '../util/copy-to-clipboard';\nimport { isPrivate } from '../util/permissions';\nimport { withServices } from '../util/service-context';\n\nimport Button from './button';\nimport useElementShouldClose from './hooks/use-element-should-close';\nimport ShareLinks from './share-links';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef {import('../../types/api').Annotation} Annotation\n * @typedef {import('../../types/api').Group} Group\n */\n\n/**\n * @typedef AnnotationShareControlProps\n * @prop {Annotation} annotation - The annotation in question\n * @prop {Group} [group] -\n *  Group that the annotation is in. If missing, this component will not render.\n *  FIXME: Refactor after root cause is addressed.\n *  See https://github.com/hypothesis/client/issues/1542\n * @prop {string} shareUri - The URI to view the annotation on its own\n * @prop {Object} analytics - Injected service\n * @prop {Object} toastMessenger - Injected service\n */\n\n/**\n * \"Popup\"-style component for sharing a single annotation.\n *\n * @param {AnnotationShareControlProps} props\n */\nfunction AnnotationShareControl({\n  annotation,\n  analytics,\n  toastMessenger,\n  group,\n  shareUri,\n}) {\n  const annotationIsPrivate = isPrivate(annotation.permissions);\n  const shareRef = useRef(/** @type {HTMLDivElement|null} */ (null));\n  const inputRef = useRef(/** @type {HTMLInputElement|null} */ (null));\n\n  const [isOpen, setOpen] = useState(false);\n  const wasOpen = useRef(isOpen);\n\n  const toggleSharePanel = () => setOpen(!isOpen);\n  const closePanel = () => setOpen(false);\n\n  // Interactions outside of the component when it is open should close it\n  useElementShouldClose(shareRef, isOpen, closePanel);\n\n  useEffect(() => {\n    if (wasOpen.current !== isOpen) {\n      wasOpen.current = isOpen;\n      if (isOpen) {\n        // Panel was just opened: select and focus the share URI for convenience\n        inputRef.current.focus();\n        inputRef.current.select();\n      }\n    }\n  }, [isOpen]);\n\n  // FIXME: See https://github.com/hypothesis/client/issues/1542\n  if (!group) {\n    return null;\n  }\n\n  const copyShareLink = () => {\n    try {\n      copyText(shareUri);\n      toastMessenger.success('Copied share link to clipboard');\n    } catch (err) {\n      toastMessenger.error('Unable to copy link');\n    }\n  };\n\n  // Generate some descriptive text about who may see the annotation if they\n  // follow the share link.\n  // First: Based on the type of the group the annotation is in, who would\n  // be able to view it?\n  const groupSharingInfo =\n    group.type === 'private' ? (\n      <span>\n        Only members of the group <em>{group.name}</em> may view this\n        annotation.\n      </span>\n    ) : (\n      <span>Anyone using this link may view this annotation.</span>\n    );\n\n  // However, if the annotation is marked as \"only me\" (`annotationIsPrivate` is `true`),\n  // then group sharing settings are irrelevant—only the author may view the\n  // annotation.\n  const annotationSharingInfo = annotationIsPrivate ? (\n    <span>Only you may view this annotation.</span>\n  ) : (\n    groupSharingInfo\n  );\n\n  return (\n    <div className=\"annotation-share-control\" ref={shareRef}>\n      <Button\n        icon=\"share\"\n        title=\"Share\"\n        onClick={toggleSharePanel}\n        isExpanded={isOpen}\n      />\n      {isOpen && (\n        <div className=\"annotation-share-panel\">\n          <div className=\"annotation-share-panel__header\">\n            <div className=\"annotation-share-panel__title\">\n              Share this annotation\n            </div>\n          </div>\n          <div className=\"annotation-share-panel__content\">\n            <div className=\"u-layout-row\">\n              <input\n                aria-label=\"Use this URL to share this annotation\"\n                className=\"annotation-share-panel__form-input\"\n                type=\"text\"\n                value={shareUri}\n                readOnly\n                ref={inputRef}\n              />\n              <Button\n                icon=\"copy\"\n                title=\"Copy share link to clipboard\"\n                onClick={copyShareLink}\n                className=\"annotation-share-panel__icon-button\"\n              />\n            </div>\n            <div className=\"annotation-share-panel__permissions\">\n              {annotationSharingInfo}\n            </div>\n            <ShareLinks\n              shareURI={shareUri}\n              analyticsEventName={analytics.events.ANNOTATION_SHARED}\n              className=\"annotation-share-control__links\"\n            />\n          </div>\n          <SvgIcon\n            name=\"pointer\"\n            inline={true}\n            className=\"annotation-share-panel__arrow\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nAnnotationShareControl.propTypes = {\n  annotation: propTypes.object.isRequired,\n  group: propTypes.object,\n  shareUri: propTypes.string.isRequired,\n  analytics: propTypes.object.isRequired,\n  toastMessenger: propTypes.object.isRequired,\n};\n\nAnnotationShareControl.injectedProps = ['analytics', 'toastMessenger'];\n\nexport default withServices(AnnotationShareControl);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport { isPrivate } from '../util/permissions';\n\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef {import(\"../../types/api\").Annotation} Annotation\n * @typedef {import('../../types/api').Group} Group\n */\n\n/**\n * @typedef AnnotationShareInfoProps\n * @prop {Annotation} annotation\n */\n\n/**\n * Render information about what group an annotation is in and\n * whether it is private to the current user (only me)\n *\n * @param {AnnotationShareInfoProps} props\n */\nfunction AnnotationShareInfo({ annotation }) {\n  const group = useStore(store => store.getGroup(annotation.group));\n\n  // Only show the name of the group and link to it if there is a\n  // URL (link) returned by the API for this group. Some groups do not have links\n  const linkToGroup = group?.links.html;\n\n  const annotationIsPrivate = isPrivate(annotation.permissions);\n\n  return (\n    <div className=\"annotation-share-info u-layout-row--align-baseline\">\n      {group && linkToGroup && (\n        <a\n          className=\"u-layout-row--align-baseline u-color-text--muted\"\n          href={group.links.html}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {group.type === 'open' ? (\n            <SvgIcon className=\"annotation-share-info__icon\" name=\"public\" />\n          ) : (\n            <SvgIcon className=\"annotation-share-info__icon\" name=\"groups\" />\n          )}\n          <span className=\"annotation-share-info__group-info\">\n            {group.name}\n          </span>\n        </a>\n      )}\n      {annotationIsPrivate && !linkToGroup && (\n        <span className=\"u-layout-row--align-baseline u-color-text--muted\">\n          <span className=\"annotation-share-info__private-info\">Only me</span>\n        </span>\n      )}\n    </div>\n  );\n}\n\nAnnotationShareInfo.propTypes = {\n  annotation: propTypes.object.isRequired,\n};\n\nexport default AnnotationShareInfo;\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport { isThirdPartyUser, username } from '../util/account-id';\nimport { withServices } from '../util/service-context';\n\n/**\n * @typedef {import(\"../../types/api\").Annotation} Annotation\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n * @typedef {import('../services/service-url').ServiceUrlGetter} ServiceUrlGetter\n */\n\n/**\n * @typedef AnnotationUserProps\n * @prop {Annotation} annotation - The annotation whose user is relevant\n * @prop {Object} features - Injected service\n * @prop {ServiceUrlGetter} serviceUrl - Injected service\n * @prop {MergedConfig} settings - Injected service\n */\n\n/**\n * Display information about an annotation's user. Link to the user's\n * activity if it is a first-party user or `settings.usernameUrl` is present.\n *\n * @param {AnnotationUserProps} props\n */\nfunction AnnotationUser({ annotation, features, serviceUrl, settings }) {\n  const user = annotation.user;\n  const isFirstPartyUser = !isThirdPartyUser(user, settings.authDomain);\n  const username_ = username(user);\n\n  // How should the user's name be displayed?\n  const displayName = (() => {\n    if (isFirstPartyUser && !features.flagEnabled('client_display_names')) {\n      return username_;\n    }\n    if (annotation.user_info && annotation.user_info.display_name) {\n      return annotation.user_info.display_name;\n    }\n    return username_;\n  })();\n\n  const shouldLinkToActivity = isFirstPartyUser || settings.usernameUrl;\n\n  if (shouldLinkToActivity) {\n    return (\n      <div className=\"annotation-user\">\n        <a\n          className=\"annotation-user__link\"\n          href={\n            isFirstPartyUser\n              ? serviceUrl('user', { user })\n              : `${settings.usernameUrl}${username_}`\n          }\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <h3 className=\"annotation-user__user-name\">{displayName}</h3>\n        </a>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"annotation-user\">\n      <h3 className=\"annotation-user__user-name\">{displayName}</h3>\n    </div>\n  );\n}\n\nAnnotationUser.propTypes = {\n  annotation: propTypes.object.isRequired,\n  features: propTypes.object.isRequired,\n  serviceUrl: propTypes.func.isRequired,\n  settings: propTypes.object.isRequired,\n};\n\nAnnotationUser.injectedProps = ['features', 'serviceUrl', 'settings'];\nexport default withServices(AnnotationUser);\n",
    "import { Fragment, createElement } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport { withServices } from '../util/service-context';\nimport useRootThread from './hooks/use-root-thread';\n\nimport ThreadList from './thread-list';\nimport SidebarContentError from './sidebar-content-error';\n\n/**\n * @typedef AnnotationViewerContentProps\n * @prop {() => any} onLogin\n * @prop {Object} [loadAnnotationsService] - Injected service\n */\n\n/**\n * The main content for the single annotation page (aka. https://hypothes.is/a/<annotation ID>)\n *\n * @param {AnnotationViewerContentProps} props\n */\nfunction AnnotationViewerContent({ loadAnnotationsService, onLogin }) {\n  const annotationId = useStore(store => store.routeParams().id);\n  const clearAnnotations = useStore(store => store.clearAnnotations);\n  const highlightAnnotations = useStore(store => store.highlightAnnotations);\n  const rootThread = useRootThread();\n  const setExpanded = useStore(store => store.setExpanded);\n  const userid = useStore(store => store.profile().userid);\n\n  const [fetchError, setFetchError] = useState(false);\n\n  useEffect(() => {\n    setFetchError(false);\n    clearAnnotations();\n\n    loadAnnotationsService\n      .loadThread(annotationId)\n      .then(annots => {\n        // Find the top-level annotation in the thread that `annotationId` is\n        // part of. This will be different to `annotationId` if `annotationId`\n        // is a reply. A top-level annotation will not have any references.\n        const topLevelAnnot = annots.filter(\n          ann => (ann.references || []).length === 0\n        )[0];\n\n        if (!topLevelAnnot) {\n          // We were able to fetch annotations in the thread that `annotationId`\n          // is part of (note that `annotationId` may refer to a reply) but\n          // couldn't find a top-level (non-reply) annotation in that thread.\n          //\n          // This might happen if the top-level annotation was deleted or\n          // moderated or had its permissions changed.\n          //\n          // We need to decide what what be the most useful behavior in this case\n          // and implement it.\n          /* istanbul ignore next */\n          return;\n        }\n\n        // Make the full thread of annotations visible. By default replies are\n        // not shown until the user expands the thread.\n        annots.forEach(annot => setExpanded(annot.id, true));\n\n        // FIXME - This should show a visual indication of which reply the\n        // annotation ID in the URL refers to. That isn't currently working.\n        if (topLevelAnnot.id !== annotationId) {\n          highlightAnnotations([annotationId]);\n        }\n      })\n      .catch(() => {\n        setFetchError(true);\n      });\n  }, [\n    annotationId,\n\n    // This is not used by the effect but ensures that the annotation is\n    // fetched after the user logs in/out, in case the annotation is private.\n    userid,\n\n    // Static dependencies.\n    clearAnnotations,\n    highlightAnnotations,\n    loadAnnotationsService,\n    setExpanded,\n  ]);\n\n  return (\n    <Fragment>\n      {fetchError && (\n        // This is the same error shown if a direct-linked annotation cannot\n        // be fetched in the sidebar. Fortunately the error message makes sense\n        // for this scenario as well.\n        <SidebarContentError errorType=\"annotation\" onLoginRequest={onLogin} />\n      )}\n      <ThreadList thread={rootThread} />\n    </Fragment>\n  );\n}\n\nAnnotationViewerContent.propTypes = {\n  onLogin: propTypes.func.isRequired,\n  loadAnnotationsService: propTypes.object,\n};\n\nAnnotationViewerContent.injectedProps = ['loadAnnotationsService'];\n\nexport default withServices(AnnotationViewerContent);\n",
    "import classnames from 'classnames';\nimport { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport { normalizeKeyName } from '../../shared/browser-compatibility-utils';\nimport useStore from '../store/use-store';\nimport { isReply, quote } from '../util/annotation-metadata';\nimport { isShared } from '../util/permissions';\nimport { withServices } from '../util/service-context';\n\nimport AnnotationActionBar from './annotation-action-bar';\nimport AnnotationBody from './annotation-body';\nimport AnnotationHeader from './annotation-header';\nimport AnnotationLicense from './annotation-license';\nimport AnnotationPublishControl from './annotation-publish-control';\nimport AnnotationQuote from './annotation-quote';\nimport Button from './button';\n\n/**\n * @typedef {import(\"../../types/api\").Annotation} Annotation\n * @typedef {import('../../types/api').Group} Group\n */\n\n/**\n * @typedef AnnotationProps\n * @prop {Annotation} annotation\n * @prop {number} replyCount - Number of replies to this annotation (thread)\n * @prop {boolean} showDocumentInfo - Should extended document info be rendered (e.g. in non-sidebar contexts)?\n * @prop {boolean} threadIsCollapsed - Is the thread to which this annotation belongs currently collapsed?\n * @prop {Object} annotationsService - Injected service\n * @prop {Object} toastMessenger - Injected service\n */\n\n/**\n * A single annotation.\n *\n * @param {AnnotationProps} props\n */\nfunction Annotation({\n  annotation,\n  annotationsService,\n  replyCount,\n  showDocumentInfo,\n  threadIsCollapsed,\n  toastMessenger,\n}) {\n  const createDraft = useStore(store => store.createDraft);\n  const isFocused = useStore(store =>\n    store.isAnnotationFocused(annotation.$tag)\n  );\n  const setExpanded = useStore(store => store.setExpanded);\n\n  // An annotation will have a draft if it is being edited\n  const draft = useStore(store => store.getDraft(annotation));\n  const group = useStore(store => store.getGroup(annotation.group));\n  const userid = useStore(store => store.profile().userid);\n  const isSaving = useStore(store => store.isSavingAnnotation(annotation));\n\n  const isCollapsedReply = isReply(annotation) && threadIsCollapsed;\n  const isPrivate = draft ? draft.isPrivate : !isShared(annotation.permissions);\n  const tags = draft ? draft.tags : annotation.tags;\n  const text = draft ? draft.text : annotation.text;\n\n  const hasQuote = !!quote(annotation);\n  const isEmpty = !text && !tags.length;\n\n  const isEditing = !!draft && !isSaving;\n\n  const toggleAction = threadIsCollapsed ? 'Show replies' : 'Hide replies';\n  const toggleText = `${toggleAction} (${replyCount})`;\n\n  const shouldShowActions = !isSaving && !isEditing;\n  const shouldShowLicense =\n    isEditing && !isPrivate && group && group.type !== 'private';\n  const shouldShowReplyToggle = replyCount > 0 && !isReply(annotation);\n\n  const onEditTags = ({ tags }) => {\n    createDraft(annotation, { ...draft, tags });\n  };\n\n  const onEditText = ({ text }) => {\n    createDraft(annotation, { ...draft, text });\n  };\n\n  const onReply = () => annotationsService.reply(annotation, userid);\n\n  const onSave = async () => {\n    try {\n      await annotationsService.save(annotation);\n    } catch (err) {\n      toastMessenger.error('Saving annotation failed');\n    }\n  };\n\n  // Allow saving of annotation by pressing CMD/CTRL-Enter\n  const onKeyDown = event => {\n    const key = normalizeKeyName(event.key);\n    if (isEmpty || !isEditing) {\n      return;\n    }\n    if ((event.metaKey || event.ctrlKey) && key === 'Enter') {\n      event.stopPropagation();\n      event.preventDefault();\n      onSave();\n    }\n  };\n\n  const onToggleReplies = () => setExpanded(annotation.id, !!threadIsCollapsed);\n\n  return (\n    /* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */\n    <article\n      className={classnames('annotation', {\n        'annotation--reply': isReply(annotation),\n        'is-collapsed': threadIsCollapsed,\n        'is-focused': isFocused,\n      })}\n      onKeyDown={onKeyDown}\n    >\n      <AnnotationHeader\n        annotation={annotation}\n        isEditing={isEditing}\n        replyCount={replyCount}\n        showDocumentInfo={showDocumentInfo}\n        threadIsCollapsed={threadIsCollapsed}\n      />\n\n      {hasQuote && (\n        <AnnotationQuote annotation={annotation} isFocused={isFocused} />\n      )}\n\n      {!isCollapsedReply && (\n        <AnnotationBody\n          annotation={annotation}\n          isEditing={isEditing}\n          onEditTags={onEditTags}\n          onEditText={onEditText}\n          tags={tags}\n          text={text}\n        />\n      )}\n\n      {isEditing && (\n        <div className=\"annotation__form-actions u-layout-row\">\n          <AnnotationPublishControl\n            annotation={annotation}\n            isDisabled={isEmpty}\n            onSave={onSave}\n          />\n        </div>\n      )}\n      {shouldShowLicense && <AnnotationLicense />}\n\n      {!isCollapsedReply && (\n        <footer className=\"annotation__footer\">\n          <div className=\"annotation__controls u-layout-row\">\n            {shouldShowReplyToggle && (\n              <Button\n                className=\"annotation__reply-toggle\"\n                onClick={onToggleReplies}\n                buttonText={toggleText}\n              />\n            )}\n            {isSaving && <div className=\"annotation__actions\">Saving...</div>}\n            {shouldShowActions && (\n              <div className=\"annotation__actions\">\n                <AnnotationActionBar\n                  annotation={annotation}\n                  onReply={onReply}\n                />\n              </div>\n            )}\n          </div>\n        </footer>\n      )}\n    </article>\n  );\n}\n\nAnnotation.propTypes = {\n  annotation: propTypes.object.isRequired,\n  replyCount: propTypes.number.isRequired,\n  showDocumentInfo: propTypes.bool.isRequired,\n  threadIsCollapsed: propTypes.bool.isRequired,\n  annotationsService: propTypes.object.isRequired,\n  toastMessenger: propTypes.object.isRequired,\n};\n\nAnnotation.injectedProps = ['annotationsService', 'toastMessenger'];\n\nexport default withServices(Annotation);\n",
    "import { createElement } from 'preact';\nimport classnames from 'classnames';\nimport { useMemo } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nconst defaultListFormatter = item => item;\n\n/**\n * @template T\n * @typedef AutocompleteListProps\n * @prop {number} [activeItem] - The index of the highlighted item.\n * @prop {string} [id] - Optional unique HTML attribute id. This can be used\n *   for parent `aria-controls` coupling.\n * @prop {string} [itemPrefixId] - Optional unique HTML attribute id prefix\n *   for each item in the list. The final value of each items' id is\n *   `{itemPrefixId}{activeItem}`\n * @prop {T[]} list - The list of items to render. This can be a simple\n *   list of strings or a list of objects when used with listFormatter.\n * @prop {(item: T, index?: number) => any} [listFormatter] - An optional formatter\n *   to render each item inside an <li> tag This is useful if the list is an array of\n *   objects rather than just strings.\n * @prop {(item: T) => void} onSelectItem - Callback when an item is clicked with\n *   the mouse.\n * @prop {boolean} [open] - Is the list open or closed?\n */\n\n/**\n * Custom autocomplete component. Use this in conjunction with an <input> field.\n * To make this component W3 accessibility compliant, it is is intended to be\n * coupled to an <input> field or the TagEditor component and can not be\n * used by itself.\n *\n * Modeled after the \"ARIA 1.1 Combobox with Listbox Popup\"\n *\n * @template T\n * @param {AutocompleteListProps<T>} props\n */\nexport default function AutocompleteList({\n  activeItem = -1,\n  id,\n  itemPrefixId,\n  list,\n  listFormatter = defaultListFormatter,\n  onSelectItem,\n  open = false,\n}) {\n  const items = useMemo(() => {\n    return list.map((item, index) => {\n      // only add an id if itemPrefixId is passed\n      const props = itemPrefixId ? { id: `${itemPrefixId}${index}` } : {};\n\n      return (\n        // The parent <input> field should capture keyboard events\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n        <li\n          key={`autocomplete-list-${index}`}\n          role=\"option\"\n          aria-selected={(activeItem === index).toString()}\n          className={classnames(\n            {\n              'is-selected': activeItem === index,\n            },\n            'autocomplete-list__li'\n          )}\n          onClick={() => {\n            onSelectItem(item);\n          }}\n          {...props}\n        >\n          {listFormatter(item, index)}\n        </li>\n      );\n    });\n  }, [activeItem, itemPrefixId, list, listFormatter, onSelectItem]);\n\n  const props = id ? { id } : {}; // only add the id if its passed\n  const isHidden = list.length === 0 || !open;\n  return (\n    <div\n      className={classnames(\n        {\n          'is-hidden': isHidden,\n        },\n        'autocomplete-list'\n      )}\n    >\n      <ul\n        className=\"autocomplete-list__items\"\n        tabIndex={-1}\n        aria-label=\"Suggestions\"\n        role=\"listbox\"\n        {...props}\n      >\n        {items}\n      </ul>\n    </div>\n  );\n}\n\nAutocompleteList.propTypes = {\n  activeItem: propTypes.number,\n  id: propTypes.string,\n  itemPrefixId: propTypes.string,\n  list: propTypes.array.isRequired,\n  listFormatter: propTypes.func,\n  onSelectItem: propTypes.func.isRequired,\n  open: propTypes.bool,\n};\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef ButtonProps\n * @prop {string} [buttonText] -\n *   The presence of this property indicates that the button will have a visibly-rendered\n *   label (with this prop's value). For brevity, when providing `buttonText`, the `title`\n *   prop is optional—if `title` is not present, the value of `buttonText` will be used for\n *   the button's `title` attribute, as they are typically identical. When this prop is\n *   missing, an icon-only button will be rendered.\n * @prop {string} [className] -\n *   When present, this will be used as the base class name and will override all styling.\n *   See `buttons` SCSS mixins module for more details.\n * @prop {string} [icon] -\n *   The name of the SVGIcon to render. This is optional if a `buttonText` is provided.\n * @prop {boolean} [isExpanded] -\n *   Is the expandable element controlled by this button currently expanded?\n * @prop {boolean} [isPressed] -\n *   Indicate that this is a toggle button (if `isPressed` is a boolean) and whether it\n *   is pressed.  If omitted, the button is a non-toggle button.\n * @prop {(e: Event) => any} [onClick] - callback for button clicks\n * @prop {boolean} [disabled] - disables the button when true\n * @prop {Object} [style] - optional inline styling\n * @prop {string} [title] -\n *   `title`, used for button `title`, is required unless `buttonText` is present\n */\n\n/**\n * A button.\n *\n * By default, styling will be applied for the button based on its general\n * \"type\" (e.g. an icon-only button, a labeled button). The presence of a\n * `className` prop will disable all default styling.\n *\n * @param {ButtonProps} props\n */\nexport default function Button({\n  buttonText = '',\n  className = '',\n  disabled = false,\n  icon = '',\n  isExpanded,\n  isPressed,\n  onClick = () => {},\n  style = {},\n  title,\n}) {\n  // If `buttonText` is provided, the `title` prop is optional and the `button`'s\n  // `title` attribute will be set from the `buttonText`\n  title = title || buttonText;\n\n  const buttonModifier = buttonText ? 'labeled' : 'icon-only';\n  // `className` overrides default class naming when present\n  const baseClassName = className || `button--${buttonModifier}`;\n\n  const extraProps = {};\n\n  // If there is no displayed text in the button, or if the provided `title`\n  // differs from the displayed text, add `aria-label` and `title` attributes\n  if (!buttonText || title !== buttonText) {\n    extraProps.title = title;\n    extraProps['aria-label'] = title;\n  }\n  if (typeof isPressed === 'boolean') {\n    // Indicate that this is a toggle button.\n    extraProps['aria-pressed'] = isPressed;\n  }\n  if (typeof isExpanded === 'boolean') {\n    extraProps['aria-expanded'] = isExpanded;\n  }\n\n  return (\n    <button\n      className={baseClassName}\n      onClick={onClick}\n      style={style}\n      disabled={disabled}\n      {...extraProps}\n    >\n      {icon && <SvgIcon name={icon} />}\n      {buttonText}\n    </button>\n  );\n}\n\n/**\n * Validation callback for `propTypes`. The given `propName` is conditionally\n * required depending on the presence or absence of the `buttonText` property. Return\n * an `Error` on validation failure, per propTypes API.\n *\n * @return {Error|undefined}\n */\nfunction requiredStringIfButtonTextMissing(props, propName, componentName) {\n  if (\n    typeof props.buttonText !== 'string' &&\n    typeof props[propName] !== 'string'\n  ) {\n    return new Error(\n      `string property '${propName}' must be supplied to component '${componentName}'\\\nif string property 'buttonText' omitted`\n    );\n  }\n  return undefined;\n}\n\nButton.propTypes = {\n  buttonText: propTypes.string,\n  className: propTypes.string,\n  icon: requiredStringIfButtonTextMissing,\n  isExpanded: propTypes.bool,\n  isPressed: propTypes.bool,\n  onClick: propTypes.func,\n  disabled: propTypes.bool,\n  style: propTypes.object,\n  title: requiredStringIfButtonTextMissing,\n};\n",
    "import classnames from 'classnames';\nimport { createElement } from 'preact';\nimport { useCallback, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport observeElementSize from '../util/observe-element-size';\nimport { withServices } from '../util/service-context';\nimport { applyTheme } from '../util/theme';\n\n/**\n * @typedef InlineControlsProps\n * @prop {boolean} [isCollapsed]\n * @prop {(collapsed: boolean) => any} [setCollapsed]\n * @prop {Object} [linkStyle]\n */\n\n/**\n * An optional toggle link at the bottom of an excerpt which controls whether\n * it is expanded or collapsed.\n *\n * @param {InlineControlsProps} props\n */\nfunction InlineControls({ isCollapsed, setCollapsed, linkStyle = {} }) {\n  const toggleLabel = isCollapsed ? 'More' : 'Less';\n\n  return (\n    <div className=\"excerpt__inline-controls\">\n      <span className=\"excerpt__toggle-link\">\n        <button\n          className=\"excerpt__toggle-button\"\n          onClick={() => setCollapsed(!isCollapsed)}\n          aria-expanded={!isCollapsed}\n          aria-label=\"Toggle visibility of full excerpt text\"\n          style={linkStyle}\n        >\n          {toggleLabel}\n        </button>\n      </span>\n    </div>\n  );\n}\n\nInlineControls.propTypes = {\n  isCollapsed: propTypes.bool,\n  setCollapsed: propTypes.func,\n  linkStyle: propTypes.object,\n};\n\nconst noop = () => {};\n\n/**\n * @typedef ExcerptProps\n * @prop {Object} [children]\n * @prop {boolean} [inlineControls] - If `true`, the excerpt provides internal\n *   controls to expand and collapse the content. If `false`, the caller sets\n *   the collapsed state via the `collapse` prop.  When using inline controls,\n *   the excerpt is initially collapsed.\n * @prop {boolean} [collapse] - If the content should be truncated if its height\n *   exceeds `collapsedHeight + overflowThreshold`.  This prop is only used if\n *   `inlineControls` is false.\n * @prop {number} collapsedHeight - Maximum height of the container, in pixels,\n *   when it is collapsed.\n * @prop {number} [overflowThreshold] - An additional margin of pixels by which\n *   the content height can exceed `collapsedHeight` before it becomes collapsible.\n * @prop {(isCollapsible?: boolean) => any} [onCollapsibleChanged] - Called when the content height\n *   exceeds or falls below `collapsedHeight + overflowThreshold`.\n * @prop {(collapsed?: boolean) => any} [onToggleCollapsed] - When `inlineControls` is `false`, this\n *   function is called when the user requests to expand the content by clicking a\n *   zone at the bottom of the container.\n * @prop {Object} [settings] - Used for theming.\n */\n\n/**\n * A container which truncates its content when they exceed a specified height.\n *\n * The collapsed state of the container can be handled either via internal\n * controls (if `inlineControls` is `true`) or by the caller using the\n * `collapse` prop.\n *\n * @param {ExcerptProps} props\n */\nfunction Excerpt({\n  children,\n  collapse = false,\n  collapsedHeight,\n  inlineControls = true,\n  onCollapsibleChanged = noop,\n  onToggleCollapsed = noop,\n  overflowThreshold = 0,\n  settings = {},\n}) {\n  const [collapsedByInlineControls, setCollapsedByInlineControls] = useState(\n    true\n  );\n\n  // Container for the excerpt's content.\n  const contentElement = useRef(/** @type {HTMLDivElement|null} */ (null));\n\n  // Measured height of `contentElement` in pixels.\n  const [contentHeight, setContentHeight] = useState(0);\n\n  // Update the measured height of the content after the initial render and\n  // when the size of the content element changes.\n  const updateContentHeight = useCallback(() => {\n    const newContentHeight = contentElement.current.clientHeight;\n    setContentHeight(newContentHeight);\n\n    // prettier-ignore\n    const isCollapsible =\n      newContentHeight > (collapsedHeight + overflowThreshold);\n    onCollapsibleChanged(isCollapsible);\n  }, [collapsedHeight, onCollapsibleChanged, overflowThreshold]);\n\n  useLayoutEffect(() => {\n    const cleanup = observeElementSize(\n      contentElement.current,\n      updateContentHeight\n    );\n    updateContentHeight();\n    return cleanup;\n  }, [updateContentHeight]);\n\n  // Render the (possibly truncated) content and controls for\n  // expanding/collapsing the content.\n  // prettier-ignore\n  const isOverflowing = contentHeight > (collapsedHeight + overflowThreshold);\n  const isCollapsed = inlineControls ? collapsedByInlineControls : collapse;\n  const isExpandable = isOverflowing && isCollapsed;\n\n  /** @type {Object} */\n  const contentStyle = {};\n  if (contentHeight !== 0) {\n    contentStyle['max-height'] = isExpandable ? collapsedHeight : contentHeight;\n  }\n\n  const setCollapsed = collapsed =>\n    inlineControls\n      ? setCollapsedByInlineControls(collapsed)\n      : onToggleCollapsed(collapsed);\n\n  return (\n    <div className=\"excerpt\" style={contentStyle}>\n      <div className=\"excerpt__content\" ref={contentElement}>\n        {children}\n      </div>\n      <div\n        role=\"presentation\"\n        onClick={() => setCollapsed(false)}\n        className={classnames({\n          excerpt__shadow: true,\n          'excerpt__shadow--transparent': inlineControls,\n          'is-hidden': !isExpandable,\n        })}\n        title=\"Show the full excerpt\"\n      />\n      {isOverflowing && inlineControls && (\n        <InlineControls\n          isCollapsed={collapsedByInlineControls}\n          setCollapsed={setCollapsed}\n          linkStyle={applyTheme(['selectionFontFamily'], settings)}\n        />\n      )}\n    </div>\n  );\n}\n\nExcerpt.propTypes = {\n  children: propTypes.object,\n  inlineControls: propTypes.bool,\n  collapse: propTypes.bool,\n  collapsedHeight: propTypes.number,\n  overflowThreshold: propTypes.number,\n  onCollapsibleChanged: propTypes.func,\n  onToggleCollapsed: propTypes.func,\n  settings: propTypes.object,\n};\n\nExcerpt.injectedProps = ['settings'];\n\nexport default withServices(Excerpt);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport { countVisible } from '../util/thread';\n\nimport Button from './button';\n\nimport useRootThread from './hooks/use-root-thread';\nimport useStore from '../store/use-store';\n\n/**\n * @typedef {import('../store/modules/selection').FilterState} FilterState\n * @typedef {import('../util/build-thread').Thread} Thread\n */\n\n/**\n * @typedef FilterStatusPanelProps\n * @prop {object} actionButton -\n *   A `Button` component that serves as an action button, typically to clear\n *   the currently-applied filters\n * @prop {number} [additionalCount=0] -\n *   A count of items that don't match the filter(s) but should be visible\n *   anyway: threads that have been forced-visible by the user, or newly-created\n *   annotations or replies that don't match the current filter(s), but should\n *   be visible. Similar to `resultCount`, this value includes both annotations\n *   and replies, except when there are selected annotations, when it includes\n *   top-level annotations only.\n * @prop {string} [entitySingular=\"annotation\"] -\n *   singular variant of the \"thing\" being shown (e.g. \"result\" when there is\n *   a query string)\n * @prop {string} [entityPlural=\"annotations\"]\n * @prop {string|null} [filterQuery] - Currently-applied filter query string, if any\n * @prop {string|null} [focusDisplayName] -\n *   Display name for the user currently being focused\n * @prop {number} resultCount -\n *   The number of \"things\" that match the current filter(s). When searching by\n *   query or focusing on a user, this value includes annotations and replies.\n *   When there are selected annotations, this number includes only top-level\n *   annotations.\n */\n\n/**\n * @typedef FilterModeProps\n * @prop {FilterState} filterState\n * @prop {Thread} rootThread\n */\n\n/**\n * Render information about the currently-applied filters and a button that\n * allows the user to clear filters (or toggle user-focus mode on and off).\n *\n * @param {FilterStatusPanelProps} props\n */\nfunction FilterStatusPanel({\n  actionButton,\n  additionalCount = 0,\n  entitySingular = 'annotation',\n  entityPlural = 'annotations',\n  filterQuery,\n  focusDisplayName,\n  resultCount,\n}) {\n  return (\n    <div className=\"filter-status\">\n      <div className=\"u-layout-row--align-center\">\n        <div className=\"filter-status__text\">\n          {resultCount > 0 && <span>Showing </span>}\n          <span className=\"filter-facet\">\n            {resultCount > 0 ? resultCount : 'No'}{' '}\n            {resultCount === 1 ? entitySingular : entityPlural}\n          </span>\n          {filterQuery && (\n            <span>\n              {' '}\n              for{' '}\n              <span className=\"filter-facet--pre\">&#39;{filterQuery}&#39;</span>\n            </span>\n          )}\n          {focusDisplayName && (\n            <span>\n              {' '}\n              by <span className=\"filter-facet\">{focusDisplayName}</span>\n            </span>\n          )}\n          {additionalCount > 0 && (\n            <span className=\"filter-facet--muted\">\n              {' '}\n              (and {additionalCount} more)\n            </span>\n          )}\n        </div>\n        <div>{actionButton}</div>\n      </div>\n    </div>\n  );\n}\n\nFilterStatusPanel.propTypes = {\n  resultCount: propTypes.number.isRequired,\n  actionButton: propTypes.object.isRequired,\n  additionalCount: propTypes.number,\n  entitySingular: propTypes.string,\n  entityPlural: propTypes.string,\n  filterQuery: propTypes.string,\n  focusDisplayName: propTypes.string,\n};\n\n/**\n * This status is used when there are selected annotations (including direct-\n * linked annotations). This status takes precedence over others.\n *\n * Message formatting:\n * \"[Showing] (No|<resultCount>) annotation[s] [\\(and <additionalCount> more\\)]\"\n * Button:\n * \"<cancel icon> Show all [\\(<totalCount)\\)]\" - clears the selection\n *\n * @param {FilterModeProps} props\n */\nfunction SelectionFilterStatus({ filterState, rootThread }) {\n  const clearSelection = useStore(store => store.clearSelection);\n  // The total number of top-level annotations (visible or not)\n  const totalCount = useStore(store => store.annotationCount());\n  // Count the number of visible annotations—top-level only\n  const visibleAnnotationCount = (rootThread.children || []).filter(\n    thread => thread.annotation && thread.visible\n  ).length;\n\n  // The number displayed in \"(and x more)\" is the difference between\n  // all visible top-level annotations and the count of selected annotations\n  // (i.e. additionalCount accounts for any visible top-level annotations\n  // that are not in the current selection)\n  const additionalCount = visibleAnnotationCount - filterState.selectedCount;\n\n  // Because of the confusion between counts of entities between selected\n  // annotations and filtered annotations, don't display the total number\n  // when in user-focus mode because the numbers won't appear to make sense.\n  const buttonText = filterState.focusConfigured\n    ? 'Show all'\n    : `Show all (${totalCount})`;\n\n  const button = (\n    <Button\n      buttonText={buttonText}\n      className=\"button--primary\"\n      onClick={() => clearSelection()}\n      icon=\"cancel\"\n    />\n  );\n  return (\n    <FilterStatusPanel\n      resultCount={filterState.selectedCount}\n      additionalCount={additionalCount}\n      actionButton={button}\n    />\n  );\n}\n\nSelectionFilterStatus.propTypes = {\n  filterState: propTypes.object.isRequired,\n  rootThread: propTypes.object.isRequired,\n};\n\n/**\n * This status is used when there is an applied filter query and\n * `SelectionFilterStatus` does not apply.\n *\n * Message formatting:\n * \"[Showing] (No|<resultCount>) result[s] for '<filterQuery>'\n *  [by <focusDisplayName] [\\(and <additionalCount> more\\)]\"\"\n *\n * Button:\n * \"<cancel icon> Clear search\" - Clears the selection\n *\n * @param {FilterModeProps} props\n */\nfunction QueryFilterStatus({ filterState, rootThread }) {\n  const clearSelection = useStore(store => store.clearSelection);\n  const visibleCount = countVisible(rootThread);\n  const resultCount = visibleCount - filterState.forcedVisibleCount;\n\n  const button = (\n    <Button\n      icon=\"cancel\"\n      className=\"button--primary\"\n      buttonText=\"Clear search\"\n      onClick={() => clearSelection()}\n    />\n  );\n\n  return (\n    <FilterStatusPanel\n      actionButton={button}\n      additionalCount={filterState.forcedVisibleCount}\n      entitySingular=\"result\"\n      entityPlural=\"results\"\n      filterQuery={filterState.filterQuery}\n      focusDisplayName={filterState.focusDisplayName}\n      resultCount={resultCount}\n    />\n  );\n}\n\nQueryFilterStatus.propTypes = {\n  filterState: propTypes.object.isRequired,\n  rootThread: propTypes.object.isRequired,\n};\n\n/**\n * This status is used if user-focus mode is configured and neither\n * `SelectionFilterStatus` nor `QueryFilterStatus` apply.\n *\n * Message formatting:\n * \"[Showing] (No|<resultCount>) annotation[s] [by <focusDisplayName>]\n *   [\\(and <additionalCount> more\\)]\"\n *\n * Button:\n *  - If there are no forced-visible threads:\n * \"Show (all|only <focusDisplayName>)\" - Toggles the user filter activation\n * - If there are any forced-visible threads:\n * \"Reset filters\" - Clears selection (does not affect user filter activation)\n *\n * @param {FilterModeProps} props\n */\nfunction FocusFilterStatus({ filterState, rootThread }) {\n  const clearSelection = useStore(store => store.clearSelection);\n  const toggleFocusMode = useStore(store => store.toggleFocusMode);\n  const visibleCount = countVisible(rootThread);\n  const resultCount = visibleCount - filterState.forcedVisibleCount;\n  const buttonProps = {};\n\n  if (filterState.forcedVisibleCount > 0) {\n    buttonProps.onClick = () => clearSelection();\n    buttonProps.buttonText = 'Reset filters';\n  } else {\n    buttonProps.onClick = () => toggleFocusMode();\n    buttonProps.buttonText = filterState.focusActive\n      ? 'Show all'\n      : `Show only ${filterState.focusDisplayName}`;\n  }\n  const focusDisplayName = filterState.focusActive\n    ? filterState.focusDisplayName\n    : '';\n\n  const button = <Button className=\"button--primary\" {...buttonProps} />;\n\n  return (\n    <FilterStatusPanel\n      resultCount={resultCount}\n      actionButton={button}\n      additionalCount={filterState.forcedVisibleCount}\n      filterQuery={filterState.filterQuery}\n      focusDisplayName={focusDisplayName}\n    />\n  );\n}\n\nFocusFilterStatus.propTypes = {\n  filterState: propTypes.object.isRequired,\n  rootThread: propTypes.object.isRequired,\n};\n\n/**\n * Determine which (if any) of the filter status variants to render depending\n * on current `filterState`. Only one filter status panel is displayed at a time:\n * they are mutually exclusive.\n */\nexport default function FilterStatus() {\n  const rootThread = useRootThread();\n  const filterState = useStore(store => store.filterState());\n\n  if (filterState.selectedCount > 0) {\n    return (\n      <SelectionFilterStatus\n        filterState={filterState}\n        rootThread={rootThread}\n      />\n    );\n  } else if (filterState.filterQuery) {\n    return (\n      <QueryFilterStatus filterState={filterState} rootThread={rootThread} />\n    );\n  } else if (filterState.focusConfigured) {\n    return (\n      <FocusFilterStatus filterState={filterState} rootThread={rootThread} />\n    );\n  }\n  return null;\n}\n\nFilterStatus.propTypes = {};\n",
    "import { Fragment, createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport { copyText } from '../util/copy-to-clipboard';\nimport { orgName } from '../util/group-list-item-common';\nimport { withServices } from '../util/service-context';\n\nimport MenuItem from './menu-item';\n\n/**\n * @typedef {import('../../types/api').Group} Group\n */\n\n/**\n * @typedef GroupListItemProps\n * @prop {Group} group\n * @prop {boolean} [isExpanded] - Whether the submenu for this group is expanded\n * @prop {(expand: boolean) => any} [onExpand] -\n *   Callback invoked to expand or collapse the current group\n * @prop {Object} analytics - Injected service\n * @prop {Object} groups - Injected service\n * @prop {Object} toastMessenger - Injected service\n */\n\n/**\n * An item in the groups selection menu.\n *\n * The item has a primary action which selects the group, along with a set of\n * secondary actions accessible via a toggle menu.\n *\n * @param {GroupListItemProps} props\n */\nfunction GroupListItem({\n  analytics,\n  isExpanded,\n  group,\n  groups: groupsService,\n  onExpand,\n  toastMessenger,\n}) {\n  const activityUrl = group.links.html;\n  const hasActionMenu = activityUrl || group.canLeave;\n  const isSelectable =\n    (group.scopes && !group.scopes.enforced) || group.isScopedToUri;\n\n  const focusedGroupId = useStore(store => store.focusedGroupId());\n  const isSelected = group.id === focusedGroupId;\n\n  const actions = useStore(store => ({\n    clearDirectLinkedGroupFetchFailed: store.clearDirectLinkedGroupFetchFailed,\n    clearDirectLinkedIds: store.clearDirectLinkedIds,\n  }));\n\n  const focusGroup = () => {\n    analytics.track(analytics.events.GROUP_SWITCH);\n    actions.clearDirectLinkedGroupFetchFailed();\n    actions.clearDirectLinkedIds();\n    groupsService.focus(group.id);\n  };\n\n  const leaveGroup = () => {\n    const message = `Are you sure you want to leave the group \"${group.name}\"?`;\n    if (window.confirm(message)) {\n      analytics.track(analytics.events.GROUP_LEAVE);\n      groupsService.leave(group.id);\n    }\n  };\n\n  /**\n   * Opens or closes the submenu.\n   *\n   * @param {MouseEvent|KeyboardEvent} event\n   */\n  const toggleSubmenu = event => {\n    event.stopPropagation();\n\n    // Prevents group items opening a new window when clicked.\n    // TODO - Fix this more cleanly in `MenuItem`.\n    event.preventDefault();\n\n    onExpand(!isExpanded);\n  };\n\n  const copyLink = () => {\n    try {\n      copyText(activityUrl);\n      toastMessenger.success(`Copied link for \"${group.name}\"`);\n    } catch (err) {\n      toastMessenger.error('Unable to copy link');\n    }\n  };\n\n  const copyLinkLabel =\n    group.type === 'private' ? 'Copy invite link' : 'Copy activity link';\n\n  return (\n    <MenuItem\n      icon={group.logo || 'blank'}\n      iconAlt={orgName(group)}\n      isDisabled={!isSelectable}\n      isExpanded={hasActionMenu ? isExpanded : false}\n      isSelected={isSelected}\n      isSubmenuVisible={hasActionMenu ? isExpanded : undefined}\n      label={group.name}\n      onClick={isSelectable ? focusGroup : toggleSubmenu}\n      onToggleSubmenu={toggleSubmenu}\n      submenu={\n        <Fragment>\n          <ul>\n            {activityUrl && (\n              <li>\n                <MenuItem\n                  href={activityUrl}\n                  icon=\"external\"\n                  isSubmenuItem={true}\n                  label=\"View group activity\"\n                />\n              </li>\n            )}\n            {activityUrl && (\n              <li>\n                <MenuItem\n                  onClick={copyLink}\n                  icon=\"copy\"\n                  isSubmenuItem={true}\n                  label={copyLinkLabel}\n                />\n              </li>\n            )}\n            {group.canLeave && (\n              <li>\n                <MenuItem\n                  icon=\"leave\"\n                  isSubmenuItem={true}\n                  label=\"Leave group\"\n                  onClick={leaveGroup}\n                />\n              </li>\n            )}\n          </ul>\n          {!isSelectable && (\n            <p className=\"group-list-item__footer\">\n              This group is restricted to specific URLs.\n            </p>\n          )}\n        </Fragment>\n      }\n    />\n  );\n}\n\nGroupListItem.propTypes = {\n  group: propTypes.object.isRequired,\n  isExpanded: propTypes.bool,\n  onExpand: propTypes.func,\n  analytics: propTypes.object.isRequired,\n  groups: propTypes.object.isRequired,\n  toastMessenger: propTypes.object.isRequired,\n};\n\nGroupListItem.injectedProps = ['analytics', 'groups', 'toastMessenger'];\n\nexport default withServices(GroupListItem);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport GroupListItem from './group-list-item';\nimport MenuSection from './menu-section';\n\n/**\n * @typedef {import('../../types/api').Group} Group\n */\n\n/**\n * @typedef GroupListSectionProps\n * @prop {Group|null} [expandedGroup]\n *  - The `Group` whose submenu is currently expanded, or `null` if no group is currently expanded\n * @prop {Group[]} [groups] - The list of groups to be displayed in the group list section\n * @prop {string} [heading] - The string name of the group list section\n * @prop {(group: Group|null) => any} [onExpandGroup] -\n *   Callback invoked when a group is expanded or collapsed.  The argument is the group being\n *   expanded, or `null` if the expanded group is being collapsed.\n */\n\n/**\n * A labeled section of the groups list.\n *\n * @param {GroupListSectionProps} props\n */\nexport default function GroupListSection({\n  expandedGroup,\n  onExpandGroup,\n  groups,\n  heading,\n}) {\n  return (\n    <MenuSection heading={heading}>\n      {groups.map(group => (\n        <GroupListItem\n          key={group.id}\n          isExpanded={group === expandedGroup}\n          onExpand={expanded => onExpandGroup(expanded ? group : null)}\n          group={group}\n        />\n      ))}\n    </MenuSection>\n  );\n}\n\nGroupListSection.propTypes = {\n  expandedGroup: propTypes.object,\n  groups: propTypes.arrayOf(propTypes.object),\n  heading: propTypes.string,\n  onExpandGroup: propTypes.func,\n};\n",
    "import { createElement } from 'preact';\nimport { useMemo, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport serviceConfig from '../service-config';\nimport useStore from '../store/use-store';\nimport { isThirdPartyUser } from '../util/account-id';\nimport { orgName } from '../util/group-list-item-common';\nimport groupsByOrganization from '../util/group-organizations';\nimport isThirdPartyService from '../util/is-third-party-service';\nimport { withServices } from '../util/service-context';\n\nimport GroupListSection from './group-list-section';\nimport Menu from './menu';\nimport MenuItem from './menu-item';\n\n/**\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n * @typedef {import('../../types/api').Group} Group\n * @typedef {import('../services/service-url').ServiceUrlGetter} ServiceUrlGetter\n */\n\n/**\n * Return the custom icon for the top bar configured by the publisher in\n * the Hypothesis client configuration.\n */\nfunction publisherProvidedIcon(settings) {\n  const svc = serviceConfig(settings);\n  return svc && svc.icon ? svc.icon : null;\n}\n\n/**\n * @typedef GroupListProps\n * @prop {ServiceUrlGetter} [serviceUrl]\n * @prop {MergedConfig} [settings]\n */\n\n/**\n * Menu allowing the user to select which group to show and also access\n * additional actions related to groups.\n *\n * @param {GroupListProps} props\n */\nfunction GroupList({ serviceUrl, settings }) {\n  const currentGroups = useStore(store => store.getCurrentlyViewingGroups());\n  const featuredGroups = useStore(store => store.getFeaturedGroups());\n  const myGroups = useStore(store => store.getMyGroups());\n  const focusedGroup = useStore(store => store.focusedGroup());\n  const userid = useStore(store => store.profile().userid);\n\n  const myGroupsSorted = useMemo(() => groupsByOrganization(myGroups), [\n    myGroups,\n  ]);\n\n  const featuredGroupsSorted = useMemo(\n    () => groupsByOrganization(featuredGroups),\n    [featuredGroups]\n  );\n\n  const currentGroupsSorted = useMemo(\n    () => groupsByOrganization(currentGroups),\n    [currentGroups]\n  );\n\n  const { authDomain } = settings;\n  const canCreateNewGroup = userid && !isThirdPartyUser(userid, authDomain);\n  const newGroupLink = serviceUrl('groups.new');\n\n  // The group whose submenu is currently open, or `null` if no group item is\n  // currently expanded.\n  //\n  // nb. If we create other menus that behave similarly in future, we may want\n  // to move this state to the `Menu` component.\n  const [expandedGroup, setExpandedGroup] = useState(\n    /** @type {Group|null} */ (null)\n  );\n\n  let label;\n  if (focusedGroup) {\n    const icon =\n      focusedGroup.organization.logo || publisherProvidedIcon(settings) || '';\n\n    // If org name is missing, then treat this icon like decoration\n    // and pass an empty string.\n    const altName = orgName(focusedGroup) ? orgName(focusedGroup) : '';\n    label = (\n      <span className=\"group-list__menu-label\">\n        {icon && (\n          <img className=\"group-list__menu-icon\" src={icon} alt={altName} />\n        )}\n        {focusedGroup.name}\n      </span>\n    );\n  } else {\n    label = <span>…</span>;\n  }\n\n  // If there is only one group and no actions available for that group,\n  // just show the group name as a label.\n  const actionsAvailable = !isThirdPartyService(settings);\n  if (\n    !actionsAvailable &&\n    currentGroups.length + featuredGroups.length + myGroups.length < 2\n  ) {\n    return label;\n  }\n\n  const menuTitle = focusedGroup\n    ? `Select group (now viewing: ${focusedGroup.name})`\n    : 'Select group';\n\n  return (\n    <Menu\n      align=\"left\"\n      contentClass=\"group-list__content\"\n      label={label}\n      onOpenChanged={() => setExpandedGroup(null)}\n      title={menuTitle}\n    >\n      {currentGroupsSorted.length > 0 && (\n        <GroupListSection\n          expandedGroup={expandedGroup}\n          onExpandGroup={setExpandedGroup}\n          heading=\"Currently Viewing\"\n          groups={currentGroupsSorted}\n        />\n      )}\n      {featuredGroupsSorted.length > 0 && (\n        <GroupListSection\n          expandedGroup={expandedGroup}\n          onExpandGroup={setExpandedGroup}\n          heading=\"Featured Groups\"\n          groups={featuredGroupsSorted}\n        />\n      )}\n      {myGroupsSorted.length > 0 && (\n        <GroupListSection\n          expandedGroup={expandedGroup}\n          onExpandGroup={setExpandedGroup}\n          heading=\"My Groups\"\n          groups={myGroupsSorted}\n        />\n      )}\n\n      {canCreateNewGroup && (\n        <MenuItem icon=\"add\" href={newGroupLink} label=\"New private group\" />\n      )}\n    </Menu>\n  );\n}\n\nGroupList.propTypes = {\n  serviceUrl: propTypes.func,\n  settings: propTypes.object,\n};\n\nGroupList.injectedProps = ['serviceUrl', 'settings'];\n\nexport default withServices(GroupList);\n",
    "import { createElement } from 'preact';\nimport { useCallback, useMemo, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport uiConstants from '../ui-constants';\nimport { withServices } from '../util/service-context';\nimport VersionData from '../util/version-data';\n\nimport SidebarPanel from './sidebar-panel';\nimport SvgIcon from '../../shared/components/svg-icon';\nimport Tutorial from './tutorial';\nimport VersionInfo from './version-info';\n\n/**\n * @typedef {import('../components/user-menu').AuthState} AuthState\n */\n\n/**\n * External link \"tabs\" inside of the help panel.\n *\n * @param {Object} props\n *   @param {string} props.linkText - What the tab's link should say\n *   @param {string} props.url - Where the tab's link should go\n */\nfunction HelpPanelTab({ linkText, url }) {\n  return (\n    <div className=\"help-panel-tabs__tab\">\n      <a\n        href={url}\n        className=\"help-panel-tabs__link\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {linkText}{' '}\n        <SvgIcon\n          name=\"external\"\n          className=\"help-panel-tabs__icon\"\n          inline={true}\n        />\n      </a>\n    </div>\n  );\n}\n\nHelpPanelTab.propTypes = {\n  linkText: propTypes.string.isRequired,\n  url: propTypes.string.isRequired,\n};\n\n/**\n * @typedef HelpPanelProps\n * @prop {AuthState} auth - Object with auth and user information\n * @prop {Object} session - Injected service\n */\n\n/**\n * A help sidebar panel with two sub-panels: tutorial and version info.\n *\n * @param {HelpPanelProps} props\n */\nfunction HelpPanel({ auth, session }) {\n  const mainFrame = useStore(store => store.mainFrame());\n\n  // Should this panel be auto-opened at app launch? Note that the actual\n  // auto-open triggering of this panel is owned by the `hypothesis-app` component.\n  // This reference is such that we know whether we should \"dismiss\" the tutorial\n  // (permanently for this user) when it is closed.\n  const hasAutoDisplayPreference = useStore(\n    store => !!store.profile().preferences.show_sidebar_tutorial\n  );\n\n  // The \"Tutorial\" (getting started) subpanel is the default panel shown\n  const [activeSubPanel, setActiveSubPanel] = useState('tutorial');\n\n  // Build version details about this session/app\n  const versionData = useMemo(() => {\n    const userInfo = auth || { status: 'logged-out' };\n    const documentInfo = mainFrame || {};\n    return new VersionData(userInfo, documentInfo);\n  }, [auth, mainFrame]);\n\n  // The support ticket URL encodes some version info in it to pre-fill in the\n  // create-new-ticket form\n  const supportTicketURL = `https://web.hypothes.is/get-help/?sys_info=${versionData.asEncodedURLString()}`;\n\n  const subPanelTitles = {\n    tutorial: 'Getting started',\n    versionInfo: 'About this version',\n  };\n\n  const openSubPanel = (e, panelName) => {\n    e.preventDefault();\n    setActiveSubPanel(panelName);\n  };\n\n  const dismissFn = session.dismissSidebarTutorial; // Reference for useCallback dependency\n  const onActiveChanged = useCallback(\n    active => {\n      if (!active && hasAutoDisplayPreference) {\n        // If the tutorial is currently being auto-displayed, update the user\n        // preference to disable the auto-display from happening on subsequent\n        // app launches\n        dismissFn();\n      }\n    },\n    [dismissFn, hasAutoDisplayPreference]\n  );\n\n  return (\n    <SidebarPanel\n      title=\"Help\"\n      panelName={uiConstants.PANEL_HELP}\n      onActiveChanged={onActiveChanged}\n    >\n      <div className=\"help-panel__content u-vertical-rhythm\">\n        <div className=\"u-layout-row--align-middle\">\n          <h3 className=\"help-panel__sub-panel-title\">\n            {subPanelTitles[activeSubPanel]}\n          </h3>\n          <div>\n            {activeSubPanel === 'versionInfo' && (\n              <button\n                className=\"help-panel__sub-panel-navigation-button\"\n                onClick={e => openSubPanel(e, 'tutorial')}\n                aria-label=\"Show tutorial panel\"\n              >\n                Getting started\n                <SvgIcon\n                  name=\"arrow-right\"\n                  className=\"help-panel__sub-panel-link-icon\"\n                />\n              </button>\n            )}\n            {activeSubPanel === 'tutorial' && (\n              <button\n                className=\"help-panel__sub-panel-navigation-button\"\n                onClick={e => openSubPanel(e, 'versionInfo')}\n                aria-label=\"Show version information panel\"\n              >\n                About this version\n                <SvgIcon name=\"arrow-right\" />\n              </button>\n            )}\n          </div>\n        </div>\n        <div className=\"help-panel__subcontent\">\n          {activeSubPanel === 'tutorial' && <Tutorial />}\n          {activeSubPanel === 'versionInfo' && (\n            <VersionInfo versionData={versionData} />\n          )}\n        </div>\n        <div className=\"help-panel-tabs\">\n          <HelpPanelTab\n            linkText=\"Help topics\"\n            url=\"https://web.hypothes.is/help/\"\n          />\n          <HelpPanelTab linkText=\"New support ticket\" url={supportTicketURL} />\n        </div>\n      </div>\n    </SidebarPanel>\n  );\n}\n\nHelpPanel.propTypes = {\n  auth: propTypes.object.isRequired,\n  session: propTypes.object.isRequired,\n};\n\nHelpPanel.injectedProps = ['session'];\nexport default withServices(HelpPanel);\n",
    "import { useEffect } from 'preact/hooks';\n\nimport { normalizeKeyName } from '../../../shared/browser-compatibility-utils';\nimport { listen } from '../../util/dom';\n\n/**\n * @template T\n * @typedef {import(\"preact/hooks\").Ref<T>} Ref\n */\n\n/**\n * @typedef PreactElement\n * @prop {Node} base\n */\n\n/**\n * @typedef {Ref<HTMLElement> | Ref<PreactElement>} PreactRef\n */\n\n/**\n * This hook adds appropriate `eventListener`s to the document when a target\n * element (`closeableEl`) is open. Events such as `click` and `focus` on\n * elements that fall outside of `closeableEl` in the document, or keydown\n * events for the `esc` key, will invoke the provided `handleClose` function\n * to indicate that `closeableEl` should be closed. This hook also performs\n * cleanup to remove `eventListener`s when appropriate.\n *\n * Limitation: This will not work when attached to a custom component that has\n * more than one element nested under a root <Fragment>\n *\n * @param {PreactRef} closeableEl - ref object:\n *                                Reference to a DOM element or preat component\n *                                that should be closed when DOM elements external\n *                                to it are interacted with or `Esc` is pressed\n * @param {boolean} isOpen - Whether the element is currently open. This hook does\n *                        not attach event listeners/do anything if it's not.\n * @param {() => void} handleClose - A function that will do the actual closing\n *                                   of `closeableEl`\n */\nexport default function useElementShouldClose(\n  closeableEl,\n  isOpen,\n  handleClose\n) {\n  /**\n   *  Helper to return the underlying node object whether\n   *  `closeableEl` is attached to an HTMLNode or Preact component.\n   *\n   *  @param {PreactRef} closeableEl\n   *  @returns {Node}\n   */\n\n  const getCurrentNode = closeableEl => {\n    // if base is present, assume its a preact component\n    const node = /** @type {PreactElement} */ (closeableEl.current).base\n      ? /** @type {PreactElement} */ (closeableEl.current).base\n      : closeableEl.current;\n    if (typeof node !== 'object') {\n      throw new Error('useElementShouldClose can not find a node reference');\n    }\n    return /** @type {Node} */ (node);\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      return () => {};\n    }\n\n    // Close element when user presses Escape key, regardless of focus.\n    const removeKeyDownListener = listen(document.body, ['keydown'], (\n      /** @type {KeyboardEvent}*/ event\n    ) => {\n      if (normalizeKeyName(event.key) === 'Escape') {\n        handleClose();\n      }\n    });\n\n    // Close element if user focuses an element outside of it via any means\n    // (key press, programmatic focus change).\n    const removeFocusListener = listen(\n      document.body,\n      'focus',\n      event => {\n        const current = getCurrentNode(closeableEl);\n        if (!current.contains(/** @type {Node} */ (event.target))) {\n          handleClose();\n        }\n      },\n      { useCapture: true }\n    );\n\n    // Close element if user clicks outside of it, even if on an element which\n    // does not accept focus.\n    const removeClickListener = listen(\n      document.body,\n      ['mousedown', 'click'],\n      event => {\n        const current = getCurrentNode(closeableEl);\n        if (!current.contains(/** @type {Node} */ (event.target))) {\n          handleClose();\n        }\n      },\n      { useCapture: true }\n    );\n\n    return () => {\n      removeKeyDownListener();\n      removeClickListener();\n      removeFocusListener();\n    };\n  }, [closeableEl, isOpen, handleClose]);\n}\n",
    "import useStore from '../../store/use-store';\nimport threadAnnotations from '../../util/thread-annotations';\n\n/** @typedef {import('../../util/build-thread').Thread} Thread */\n\n/**\n * Gather together state relevant to building a root thread of annotations and\n * replies and return an updated root thread when changes occur.\n *\n * @return {Thread}\n */\nexport default function useRootThread() {\n  return useStore(store => threadAnnotations(store.threadState()));\n}\n",
    "import { createElement } from 'preact';\nimport { useEffect, useMemo } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport bridgeEvents from '../../shared/bridge-events';\nimport { isIE11 } from '../../shared/user-agent';\nimport serviceConfig from '../service-config';\nimport useStore from '../store/use-store';\nimport uiConstants from '../ui-constants';\nimport { parseAccountID } from '../util/account-id';\nimport { shouldAutoDisplayTutorial } from '../util/session';\nimport { applyTheme } from '../util/theme';\nimport { withServices } from '../util/service-context';\n\nimport AnnotationViewerContent from './annotation-viewer-content';\nimport HelpPanel from './help-panel';\nimport ShareAnnotationsPanel from './share-annotations-panel';\nimport SidebarContent from './sidebar-content';\nimport StreamContent from './stream-content';\nimport ToastMessages from './toast-messages';\nimport TopBar from './top-bar';\n\n/**\n * @typedef {import('../../types/api').Profile} Profile\n * @typedef {import('../services/service-url').ServiceUrlGetter} ServiceUrlGetter\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n * @typedef {import('../../shared/bridge').default} Bridge\n */\n\n/**\n * Return the user's authentication status from their profile.\n *\n * @param {Profile} profile - The profile object from the API.\n */\nfunction authStateFromProfile(profile) {\n  const parsed = parseAccountID(profile.userid);\n  if (parsed) {\n    let displayName = parsed.username;\n    if (profile.user_info && profile.user_info.display_name) {\n      displayName = profile.user_info.display_name;\n    }\n    return {\n      status: 'logged-in',\n      displayName,\n      userid: profile.userid,\n      username: parsed.username,\n      provider: parsed.provider,\n    };\n  } else {\n    return { status: 'logged-out' };\n  }\n}\n\n/**\n * @typedef HypothesisAppProps\n * @prop {Object} [auth]\n * @prop {Bridge} [bridge]\n * @prop {ServiceUrlGetter} [serviceUrl]\n * @prop {MergedConfig} [settings]\n * @prop {Object} [session]\n * @prop {Object} [toastMessenger]\n */\n\n/**\n * The root component for the Hypothesis client.\n *\n * This handles login/logout actions and renders the top navigation bar\n * and content appropriate for the current route.\n *\n * @param {HypothesisAppProps} props\n */\nfunction HypothesisApp({\n  auth,\n  bridge,\n  serviceUrl,\n  settings,\n  session,\n  toastMessenger,\n}) {\n  const clearGroups = useStore(store => store.clearGroups);\n  const closeSidebarPanel = useStore(store => store.closeSidebarPanel);\n  const countDrafts = useStore(store => store.countDrafts);\n  const discardAllDrafts = useStore(store => store.discardAllDrafts);\n  const hasFetchedProfile = useStore(store => store.hasFetchedProfile());\n  const openSidebarPanel = useStore(store => store.openSidebarPanel);\n  const profile = useStore(store => store.profile());\n  const removeAnnotations = useStore(store => store.removeAnnotations);\n  const route = useStore(store => store.route());\n  const unsavedAnnotations = useStore(store => store.unsavedAnnotations);\n\n  const authState = useMemo(() => {\n    if (!hasFetchedProfile) {\n      return { status: 'unknown' };\n    }\n    return authStateFromProfile(profile);\n  }, [hasFetchedProfile, profile]);\n\n  const backgroundStyle = useMemo(\n    () => applyTheme(['appBackgroundColor'], settings),\n    [settings]\n  );\n\n  const isSidebar = route === 'sidebar';\n\n  useEffect(() => {\n    if (shouldAutoDisplayTutorial(isSidebar, profile, settings)) {\n      openSidebarPanel(uiConstants.PANEL_HELP);\n    }\n  }, [isSidebar, profile, openSidebarPanel, settings]);\n\n  // Show a deprecation warning if current browser is IE11\n  useEffect(() => {\n    if (isIE11()) {\n      toastMessenger.notice(\n        'Hypothesis is ending support for this browser (Internet Explorer 11) on July 1, 2020.',\n        {\n          autoDismiss: false,\n          moreInfoURL:\n            'https://web.hypothes.is/help/which-browsers-are-supported-by-hypothesis/',\n        }\n      );\n    }\n  }, [toastMessenger]);\n\n  const login = async () => {\n    if (serviceConfig(settings)) {\n      // Let the host page handle the login request\n      bridge.call(bridgeEvents.LOGIN_REQUESTED);\n      return;\n    }\n\n    try {\n      await auth.login();\n\n      closeSidebarPanel(uiConstants.PANEL_LOGIN_PROMPT);\n      clearGroups();\n      session.reload();\n    } catch (err) {\n      toastMessenger.error(err.message);\n    }\n  };\n\n  const signUp = () => {\n    if (serviceConfig(settings)) {\n      // Let the host page handle the signup request\n      bridge.call(bridgeEvents.SIGNUP_REQUESTED);\n      return;\n    }\n    window.open(serviceUrl('signup'));\n  };\n\n  const promptToLogout = () => {\n    // TODO - Replace this with a UI which doesn't look terrible.\n    let text = '';\n    const drafts = countDrafts();\n    if (drafts === 1) {\n      text =\n        'You have an unsaved annotation.\\n' +\n        'Do you really want to discard this draft?';\n    } else if (drafts > 1) {\n      text =\n        'You have ' +\n        drafts +\n        ' unsaved annotations.\\n' +\n        'Do you really want to discard these drafts?';\n    }\n    return drafts === 0 || window.confirm(text);\n  };\n\n  const logout = () => {\n    if (!promptToLogout()) {\n      return;\n    }\n    clearGroups();\n    removeAnnotations(unsavedAnnotations());\n    discardAllDrafts();\n\n    if (serviceConfig(settings)) {\n      bridge.call(bridgeEvents.LOGOUT_REQUESTED);\n      return;\n    }\n\n    session.logout();\n  };\n\n  return (\n    <div\n      className=\"hypothesis-app js-thread-list-scroll-root\"\n      style={backgroundStyle}\n    >\n      <TopBar\n        auth={authState}\n        onLogin={login}\n        onSignUp={signUp}\n        onLogout={logout}\n        isSidebar={isSidebar}\n      />\n      <div className=\"hypothesis-app__content\">\n        <ToastMessages />\n        <HelpPanel auth={authState} />\n        <ShareAnnotationsPanel />\n\n        {route && (\n          <main>\n            {route === 'annotation' && (\n              <AnnotationViewerContent onLogin={login} />\n            )}\n            {route === 'stream' && <StreamContent />}\n            {route === 'sidebar' && (\n              <SidebarContent onLogin={login} onSignUp={signUp} />\n            )}\n          </main>\n        )}\n      </div>\n    </div>\n  );\n}\n\nHypothesisApp.propTypes = {\n  auth: propTypes.object,\n  bridge: propTypes.object,\n  serviceUrl: propTypes.func,\n  settings: propTypes.object,\n  session: propTypes.object,\n  toastMessenger: propTypes.object,\n};\n\nHypothesisApp.injectedProps = [\n  'auth',\n  'bridge',\n  'serviceUrl',\n  'session',\n  'settings',\n  'toastMessenger',\n];\n\nexport default withServices(HypothesisApp);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport { withServices } from '../util/service-context';\n\nimport Button from './button';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/** @typedef {import('../services/service-url').ServiceUrlGetter} ServiceUrlGetter */\n\n/**\n * @typedef LoggedOutMessageProps\n * @prop {() => any} onLogin\n * @prop {ServiceUrlGetter} serviceUrl\n */\n\n/**\n * Render a call-to-action to log in or sign up. This message is intended to be\n * displayed to non-auth'd users when viewing a single annotation in a\n * direct-linked context (i.e. URL with syntax `/#annotations:<annotation_id>`)\n *\n * @param {LoggedOutMessageProps} props\n */\nfunction LoggedOutMessage({ onLogin, serviceUrl }) {\n  return (\n    <div className=\"logged-out-message\">\n      <span>\n        This is a public annotation created with Hypothesis. <br />\n        To reply or make your own annotations on this document,{' '}\n        <a\n          className=\"logged-out-message__link\"\n          href={serviceUrl('signup')}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          create a free account\n        </a>{' '}\n        or{' '}\n        <Button\n          className=\"logged-out-message__link\"\n          onClick={onLogin}\n          buttonText=\"log in\"\n        />\n        .\n      </span>\n      <div className=\"logged-out-message__logo\">\n        <a\n          href=\"https://hypothes.is\"\n          aria-label=\"Hypothesis homepage\"\n          title=\"Hypothesis homepage\"\n        >\n          <SvgIcon name=\"logo\" className=\"logged-out-message__logo-icon\" />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nLoggedOutMessage.propTypes = {\n  onLogin: propTypes.func.isRequired,\n  serviceUrl: propTypes.func.isRequired,\n};\n\nLoggedOutMessage.injectedProps = ['serviceUrl'];\n\nexport default withServices(LoggedOutMessage);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport uiConstants from '../ui-constants';\n\nimport Button from './button';\nimport SidebarPanel from './sidebar-panel';\n\n/**\n * @typedef LoginPromptPanelProps\n * @prop {() => any} onLogin\n * @prop {() => any} onSignUp\n */\n\n/**\n * A sidebar panel that prompts a user to log in (or sign up) to annotate.\n *\n * @param {LoginPromptPanelProps} props\n */\nexport default function LoginPromptPanel({ onLogin, onSignUp }) {\n  const isLoggedIn = useStore(store => store.isLoggedIn());\n  if (isLoggedIn) {\n    return null;\n  }\n  return (\n    <SidebarPanel\n      icon=\"restricted\"\n      title=\"Login needed\"\n      panelName={uiConstants.PANEL_LOGIN_PROMPT}\n    >\n      <p>Please log in to create annotations or highlights.</p>\n      <div className=\"sidebar-panel__actions\">\n        <Button\n          buttonText=\"Sign up\"\n          className=\"sidebar-panel__button\"\n          onClick={onSignUp}\n        />\n        <Button\n          buttonText=\"Log in\"\n          className=\"sidebar-panel__button--primary\"\n          onClick={onLogin}\n        />\n      </div>\n    </SidebarPanel>\n  );\n}\n\nLoginPromptPanel.propTypes = {\n  onLogin: propTypes.func.isRequired,\n  onSignUp: propTypes.func.isRequired,\n};\n",
    "import classnames from 'classnames';\nimport { createElement, createRef } from 'preact';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport {\n  LinkType,\n  convertSelectionToLink,\n  toggleBlockStyle,\n  toggleSpanStyle,\n} from '../markdown-commands';\nimport { normalizeKeyName } from '../../shared/browser-compatibility-utils';\nimport { isMacOS } from '../../shared/user-agent';\n\nimport MarkdownView from './markdown-view';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n// Mapping of toolbar command name to key for Ctrl+<key> keyboard shortcuts.\n// The shortcuts are taken from Stack Overflow's editor.\nconst SHORTCUT_KEYS = {\n  bold: 'b',\n  italic: 'i',\n  link: 'l',\n  quote: 'q',\n  image: 'g',\n  numlist: 'o',\n  list: 'u',\n};\n\n/**\n * Apply a toolbar command to an editor input field.\n *\n * @param {string} command\n * @param {HTMLInputElement|HTMLTextAreaElement} inputEl\n */\nfunction handleToolbarCommand(command, inputEl) {\n  const update = newStateFn => {\n    // Apply the toolbar command to the current state of the input field.\n    const newState = newStateFn({\n      text: inputEl.value,\n      selectionStart: inputEl.selectionStart,\n      selectionEnd: inputEl.selectionEnd,\n    });\n\n    // Update the input field to match the new state.\n    inputEl.value = newState.text;\n    inputEl.selectionStart = newState.selectionStart;\n    inputEl.selectionEnd = newState.selectionEnd;\n\n    // Restore input field focus which is lost when its contents are changed.\n    inputEl.focus();\n  };\n\n  const insertMath = state => {\n    const before = state.text.slice(0, state.selectionStart);\n    if (\n      before.length === 0 ||\n      before.slice(-1) === '\\n' ||\n      before.slice(-2) === '$$'\n    ) {\n      return toggleSpanStyle(state, '$$', '$$', 'Insert LaTeX');\n    } else {\n      return toggleSpanStyle(state, '\\\\(', '\\\\)', 'Insert LaTeX');\n    }\n  };\n\n  switch (command) {\n    case 'bold':\n      update(state => toggleSpanStyle(state, '**', '**', 'Bold'));\n      break;\n    case 'italic':\n      update(state => toggleSpanStyle(state, '*', '*', 'Italic'));\n      break;\n    case 'quote':\n      update(state => toggleBlockStyle(state, '> '));\n      break;\n    case 'link':\n      update(state => convertSelectionToLink(state));\n      break;\n    case 'image':\n      update(state => convertSelectionToLink(state, LinkType.IMAGE_LINK));\n      break;\n    case 'math':\n      update(insertMath);\n      break;\n    case 'numlist':\n      update(state => toggleBlockStyle(state, '1. '));\n      break;\n    case 'list':\n      update(state => toggleBlockStyle(state, '* '));\n      break;\n    default:\n      throw new Error(`Unknown toolbar command \"${command}\"`);\n  }\n}\n\n/**\n * @typedef ToolbarButtonProps\n * @prop {Object} buttonRef\n * @prop {boolean} [disabled]\n * @prop {string} [iconName]\n * @prop {string} [label]\n * @prop {(e: MouseEvent) => void} onClick\n * @prop {string} [shortcutKey]\n * @prop {number} tabIndex\n * @prop {string} [title]\n */\n\n/** @param {ToolbarButtonProps} props */\nfunction ToolbarButton({\n  buttonRef,\n  disabled = false,\n  iconName,\n  label,\n  onClick,\n  shortcutKey,\n  tabIndex,\n  title = '',\n}) {\n  const modifierKey = useMemo(() => (isMacOS() ? 'Cmd' : 'Ctrl'), []);\n\n  let tooltip = title;\n  if (shortcutKey) {\n    tooltip += ` (${modifierKey}-${shortcutKey.toUpperCase()})`;\n  }\n\n  return (\n    <button\n      className={classnames(\n        'markdown-editor__toolbar-button',\n        label && 'is-text'\n      )}\n      disabled={disabled}\n      onClick={onClick}\n      aria-label={tooltip}\n      title={tooltip}\n      tabIndex={tabIndex}\n      ref={buttonRef}\n    >\n      {iconName && (\n        <SvgIcon\n          name={iconName}\n          className=\"markdown-editor__toolbar-button-icon\"\n        />\n      )}\n      {label}\n    </button>\n  );\n}\n\nToolbarButton.propTypes = {\n  buttonRef: propTypes.object.isRequired,\n  disabled: propTypes.bool,\n  iconName: propTypes.string,\n  label: propTypes.string,\n  onClick: propTypes.func.isRequired,\n  shortcutKey: propTypes.string,\n  tabIndex: propTypes.number.isRequired,\n  title: propTypes.string,\n};\n\n/**\n * @typedef {'bold'|'italic'|'quote'|'link'|'image'|'math'|'numlist'|'list'|'preview'|'help'} ButtonID\n */\n\n/**\n * @typedef ToolbarProps\n * @prop {boolean} [isPreviewing] - `true` if the editor's \"Preview\" mode is active.\n * @prop {(a: ButtonID) => any} [onCommand] - Callback invoked with the selected command when a toolbar button is clicked.\n * @prop {() => any} [onTogglePreview] - Callback invoked when the \"Preview\" toggle button is clicked.\n */\n\n/**\n * An array of toolbar elements with a roving tab stop. Left and right\n * array keys can be used to change focus of the elements. Home and end\n * keys will navigate to the first and last elements respectively.\n *\n * Canonical example\n * https://www.w3.org/TR/wai-aria-practices/examples/toolbar/toolbar.html\n *\n * @param {ToolbarProps} props\n */\nfunction Toolbar({ isPreviewing, onCommand, onTogglePreview }) {\n  const buttonIds = {\n    // Ordered buttons\n    bold: 0,\n    italic: 1,\n    quote: 2,\n    link: 3,\n    image: 4,\n    math: 5,\n    numlist: 6,\n    list: 7,\n    help: 8,\n    preview: 9,\n\n    // Total button count\n    maxId: 10,\n  };\n\n  // Keep track of a roving index. The active roving tabIndex\n  // is set to 0, and all other elements are set to -1.\n  const [rovingElement, setRovingElement] = useState(0);\n\n  // An array of refs\n  const buttonRefs = useRef([]).current;\n  if (buttonRefs.length === 0) {\n    // Initialize buttonRefs on first render only\n    for (let i = 0; i <= buttonIds.maxId; i++) {\n      buttonRefs.push(createRef());\n    }\n  }\n\n  /**\n   * Sets the element to be both focused and the active roving index.\n   *\n   * @param {number} index - Ordered index that matches the element\n   */\n  const setFocusedElement = index => {\n    setRovingElement(index);\n    buttonRefs[index].current.focus();\n  };\n\n  /**\n   * Handles left and right arrow navigation as well as home and end\n   * keys so the user may navigate the toolbar without multiple tab stops.\n   */\n  const handleKeyDown = e => {\n    let lowerLimit = 0;\n    const upperLimit = buttonIds.maxId - 1;\n    if (isPreviewing) {\n      // When isPreviewing is true, only allow navigation of\n      // the last 2 items.\n      lowerLimit = buttonIds.help;\n    }\n    let newFocusedElement = null;\n    switch (normalizeKeyName(e.key)) {\n      case 'ArrowLeft':\n        if (rovingElement <= lowerLimit) {\n          newFocusedElement = upperLimit;\n        } else {\n          newFocusedElement = rovingElement - 1;\n        }\n        break;\n      case 'ArrowRight':\n        if (rovingElement >= upperLimit) {\n          newFocusedElement = lowerLimit;\n        } else {\n          newFocusedElement = rovingElement + 1;\n        }\n        break;\n      case 'Home':\n        newFocusedElement = lowerLimit;\n        break;\n      case 'End':\n        newFocusedElement = upperLimit;\n        break;\n    }\n    if (newFocusedElement !== null) {\n      setFocusedElement(newFocusedElement);\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Returns the tab index value for a given element.\n   * Each element should be set to -1 unless its the\n   * active roving index, in which case it will be 0.\n   *\n   * @param {number} index - An index from `buttonIds`\n   * @return {number}\n   */\n  const getTabIndex = index => {\n    if (rovingElement === index) {\n      return 0;\n    } else {\n      return -1;\n    }\n  };\n\n  return (\n    <div\n      className=\"markdown-editor__toolbar\"\n      role=\"toolbar\"\n      aria-label=\"Markdown editor toolbar\"\n      onKeyDown={handleKeyDown}\n    >\n      <ToolbarButton\n        disabled={isPreviewing}\n        iconName=\"format-bold\"\n        onClick={() => onCommand('bold')}\n        shortcutKey={SHORTCUT_KEYS.bold}\n        buttonRef={buttonRefs[buttonIds.bold]}\n        tabIndex={getTabIndex(buttonIds.bold)}\n        title=\"Bold\"\n      />\n      <ToolbarButton\n        disabled={isPreviewing}\n        iconName=\"format-italic\"\n        onClick={() => onCommand('italic')}\n        shortcutKey={SHORTCUT_KEYS.italic}\n        buttonRef={buttonRefs[buttonIds.italic]}\n        tabIndex={getTabIndex(buttonIds.italic)}\n        title=\"Italic\"\n      />\n      <ToolbarButton\n        disabled={isPreviewing}\n        iconName=\"format-quote\"\n        onClick={() => onCommand('quote')}\n        shortcutKey={SHORTCUT_KEYS.quote}\n        buttonRef={buttonRefs[buttonIds.quote]}\n        tabIndex={getTabIndex(buttonIds.quote)}\n        title=\"Quote\"\n      />\n      <ToolbarButton\n        disabled={isPreviewing}\n        iconName=\"link\"\n        onClick={() => onCommand('link')}\n        shortcutKey={SHORTCUT_KEYS.link}\n        buttonRef={buttonRefs[buttonIds.link]}\n        tabIndex={getTabIndex(buttonIds.link)}\n        title=\"Insert link\"\n      />\n      <ToolbarButton\n        disabled={isPreviewing}\n        iconName=\"image\"\n        onClick={() => onCommand('image')}\n        shortcutKey={SHORTCUT_KEYS.image}\n        buttonRef={buttonRefs[buttonIds.image]}\n        tabIndex={getTabIndex(buttonIds.image)}\n        title=\"Insert image\"\n      />\n      <ToolbarButton\n        disabled={isPreviewing}\n        iconName=\"format-functions\"\n        onClick={() => onCommand('math')}\n        buttonRef={buttonRefs[buttonIds.math]}\n        tabIndex={getTabIndex(buttonIds.math)}\n        title=\"Insert math (LaTeX is supported)\"\n      />\n      <ToolbarButton\n        disabled={isPreviewing}\n        iconName=\"format-list-numbered\"\n        onClick={() => onCommand('numlist')}\n        shortcutKey={SHORTCUT_KEYS.numlist}\n        buttonRef={buttonRefs[buttonIds.numlist]}\n        tabIndex={getTabIndex(buttonIds.numlist)}\n        title=\"Numbered list\"\n      />\n      <ToolbarButton\n        disabled={isPreviewing}\n        iconName=\"format-list-unordered\"\n        onClick={() => onCommand('list')}\n        shortcutKey={SHORTCUT_KEYS.list}\n        buttonRef={buttonRefs[buttonIds.list]}\n        tabIndex={getTabIndex(buttonIds.list)}\n        title=\"Bulleted list\"\n      />\n      <span className=\"u-stretch\" />\n      <div className=\"markdown-editor__toolbar-help-link\">\n        <a\n          href=\"https://web.hypothes.is/help/formatting-annotations-with-markdown/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"markdown-editor__toolbar-button\"\n          ref={buttonRefs[buttonIds.help]}\n          tabIndex={getTabIndex(buttonIds.help)}\n          title=\"Formatting help\"\n          aria-label=\"Formatting help\"\n        >\n          <SvgIcon\n            name=\"help\"\n            className=\"markdown-editor__toolbar-button-icon\"\n          />\n        </a>\n      </div>\n      <ToolbarButton\n        label={isPreviewing ? 'Write' : 'Preview'}\n        onClick={onTogglePreview}\n        buttonRef={buttonRefs[buttonIds.preview]}\n        tabIndex={getTabIndex(buttonIds.preview)}\n      />\n    </div>\n  );\n}\n\nToolbar.propTypes = {\n  isPreviewing: propTypes.bool,\n  onCommand: propTypes.func,\n  onTogglePreview: propTypes.func,\n};\n\n/**\n * @typedef MarkdownEditorProps\n * @prop {string} label - An accessible label for the input field.\n * @prop {Object.<string,string>} [textStyle] -\n *   Additional CSS properties to apply to the input field and rendered preview\n * @prop {string} [text] - The markdown text to edit.\n * @prop {(a?: Object<'text', string>) => void} [onEditText]\n *   - Callback invoked with `{ text }` object when user edits text.\n *   TODO: Simplify this callback to take just a string rather than an object once the\n *   parent component is converted to Preact.\n */\n\n/**\n * Viewer/editor for the body of an annotation in markdown format.\n *\n * @param {MarkdownEditorProps} props\n */\nexport default function MarkdownEditor({\n  label = '',\n  onEditText = () => {},\n  text = '',\n  textStyle = {},\n}) {\n  // Whether the preview mode is currently active.\n  const [preview, setPreview] = useState(false);\n\n  // The input element where the user inputs their comment.\n  const input = useRef(/** @type {HTMLTextAreaElement|null} */ (null));\n\n  useEffect(() => {\n    if (!preview) {\n      input.current.focus();\n    }\n  }, [preview]);\n\n  const togglePreview = () => setPreview(!preview);\n  const handleCommand = command => {\n    const inputEl = input.current;\n    handleToolbarCommand(command, inputEl);\n    onEditText({ text: inputEl.value });\n  };\n\n  const handleKeyDown = event => {\n    if (!event.ctrlKey && !event.metaKey) {\n      return;\n    }\n\n    for (let [command, key] of Object.entries(SHORTCUT_KEYS)) {\n      if (key === normalizeKeyName(event.key)) {\n        event.stopPropagation();\n        event.preventDefault();\n        handleCommand(command);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Toolbar\n        onCommand={handleCommand}\n        isPreviewing={preview}\n        onTogglePreview={togglePreview}\n      />\n      {preview ? (\n        <MarkdownView\n          markdown={text}\n          textClass={{ 'markdown-editor__preview': true }}\n          textStyle={textStyle}\n        />\n      ) : (\n        <textarea\n          aria-label={label}\n          className=\"markdown-editor__input\"\n          dir=\"auto\"\n          ref={input}\n          onClick={e => e.stopPropagation()}\n          onKeyDown={handleKeyDown}\n          onInput={e => {\n            onEditText({\n              text: /** @type {HTMLTextAreaElement} */ (e.target).value,\n            });\n          }}\n          value={text}\n          style={textStyle}\n        />\n      )}\n    </div>\n  );\n}\n\nMarkdownEditor.propTypes = {\n  textStyle: propTypes.object,\n  label: propTypes.string.isRequired,\n  text: propTypes.string,\n  onEditText: propTypes.func,\n};\n",
    "import classnames from 'classnames';\nimport { createElement } from 'preact';\nimport { useEffect, useMemo, useRef } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport { replaceLinksWithEmbeds } from '../media-embedder';\nimport renderMarkdown from '../render-markdown';\n\n/**\n * @typedef MarkdownViewProps\n * @prop {string} markdown - The string of markdown to display\n * @prop {Object.<string,string>} [textStyle] -\n *   Additional CSS properties to apply to the rendered markdown\n * @prop {Object.<string,boolean>} [textClass] -\n *   Map of classes to apply to the container of the rendered markdown\n */\n\n/**\n * A component which renders markdown as HTML and replaces recognized links\n * with embedded video/audio.\n *\n * @param {MarkdownViewProps} props\n */\nexport default function MarkdownView({\n  markdown = '',\n  textClass = {},\n  textStyle = {},\n}) {\n  const html = useMemo(() => (markdown ? renderMarkdown(markdown) : ''), [\n    markdown,\n  ]);\n  const content = useRef(/** @type {HTMLDivElement|null} */ (null));\n\n  useEffect(() => {\n    replaceLinksWithEmbeds(content.current, {\n      className: 'markdown-view__embed',\n    });\n  }, [markdown]);\n\n  // Use a blank string to indicate that the content language is unknown and may be\n  // different than the client UI. The user agent may pick a default or analyze\n  // the content to guess.\n  const contentLanguage = '';\n\n  return (\n    <div\n      className={classnames('markdown-view', textClass)}\n      dir=\"auto\"\n      lang={contentLanguage}\n      ref={content}\n      dangerouslySetInnerHTML={{ __html: html }}\n      style={textStyle}\n    />\n  );\n}\n\nMarkdownView.propTypes = {\n  markdown: propTypes.string,\n  textClass: propTypes.object,\n  textStyle: propTypes.object,\n};\n",
    "import classnames from 'classnames';\nimport { Fragment, createElement } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport { normalizeKeyName } from '../../shared/browser-compatibility-utils';\n\nimport SvgIcon from '../../shared/components/svg-icon';\nimport MenuKeyboardNavigation from './menu-keyboard-navigation';\nimport Slider from './slider';\n\n/**\n * @typedef MenuItemProps\n * @prop {string} [href] -\n *   URL of the external link to open when this item is clicked. Either the `href` or an\n *   `onClick` callback should be supplied.\n * @prop {string} [iconAlt] - Alt text for icon.\n * @prop {string} [icon] -\n *   Name or URL of icon to display. If the value is a URL it is displayed using an `<img>`,\n *   if it is a name it is displayed using `SvgIcon`.  If the property is `\"blank\"` a blank\n *   placeholder is displayed in place of an icon. If the property is falsey, no placeholder\n *   is displayed. The placeholder is useful to keep menu item labels aligned in a list if\n *   some items have icons and others do not.\n * @prop {boolean} [isDisabled] -\n *   Dim the label to indicate that this item is not currently available.  The `onClick`\n *   callback will still be invoked when this item is clicked and the submenu, if any,\n *   can still be toggled.\n * @prop {boolean} [isExpanded] -\n *   Indicates that the submenu associated with this item is currently open.\n * @prop {boolean} [isSelected] -\n *   Display an indicator to show that this menu item represents something which is currently\n *   selected/active/focused.\n * @prop {boolean} [isSubmenuItem] -\n *   True if this item is part of a submenu, in which case it is rendered with a different\n *   style (shaded background)\n * @prop {boolean|undefined} [isSubmenuVisible] -\n *   If present, display a button to toggle the sub-menu associated with this item and\n *   indicate the current state; `true` if the submenu is visible. Note. Omit this prop,\n *    or set it to null, if there is no `submenu`.\n * @prop {string} label - Label of the menu item.\n * @prop {(e: Event) => any} [onClick] - Callback to invoke when the menu item is clicked.\n * @prop {(e: Event) => any} [onToggleSubmenu] -\n *   Callback when the user clicks on the toggle to change the expanded state of the menu.\n * @prop {Object} [submenu] -\n *   Contents of the submenu for this item.  This is typically a list of `MenuItem` components\n *    with the `isSubmenuItem` prop set to `true`, but can include other content as well.\n *    The submenu is only rendered if `isSubmenuVisible` is `true`.\n */\n\n/**\n * An item in a dropdown menu.\n *\n * Dropdown menu items display an icon, a label and can optionally have a submenu\n * associated with them.\n *\n * When clicked, menu items either open an external link, if the `href` prop\n * is provided, or perform a custom action via the `onClick` callback.\n *\n * The icon can either be an external SVG image, referenced by URL, or a named\n * icon rendered by an `SvgIcon`.\n *\n * For items that have submenus, the `MenuItem` will call the `renderSubmenu`\n * prop to render the content of the submenu, when the submenu is visible.\n * Note that the `submenu` is not supported for link (`href`) items.\n *\n * @param {MenuItemProps} props\n */\nexport default function MenuItem({\n  href,\n  icon,\n  iconAlt,\n  isDisabled,\n  isExpanded,\n  isSelected,\n  isSubmenuItem,\n  isSubmenuVisible,\n  label,\n  onClick,\n  onToggleSubmenu,\n  submenu,\n}) {\n  const iconClass = 'menu-item__icon';\n  const iconIsUrl = icon && icon.indexOf('/') !== -1;\n\n  const hasLeftIcon = icon || isSubmenuItem;\n  const hasRightIcon = icon && isSubmenuItem;\n\n  const menuItemRef = useRef(\n    /** @type {(HTMLAnchorElement & HTMLDivElement)|null} */ (null)\n  );\n  let focusTimer = null;\n\n  let renderedIcon = null;\n  if (icon !== 'blank') {\n    renderedIcon = iconIsUrl ? (\n      <img className={iconClass} alt={iconAlt} src={icon} />\n    ) : (\n      <SvgIcon name={icon} className=\"menu-item__icon\" />\n    );\n  }\n  const leftIcon = isSubmenuItem ? null : renderedIcon;\n  const rightIcon = isSubmenuItem ? renderedIcon : null;\n\n  // menuItem can be either a link or a button\n  let menuItem;\n  const hasSubmenuVisible = typeof isSubmenuVisible === 'boolean';\n  const isRadioButtonType = typeof isSelected === 'boolean';\n\n  useEffect(() => {\n    return () => {\n      // unmount\n      clearTimeout(focusTimer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onCloseSubmenu = event => {\n    if (onToggleSubmenu) {\n      onToggleSubmenu(event);\n    }\n    // The focus won't work without delaying rendering.\n    focusTimer = setTimeout(() => {\n      menuItemRef.current.focus();\n    });\n  };\n\n  const onKeyDown = event => {\n    switch (normalizeKeyName(event.key)) {\n      case 'ArrowRight':\n        if (onToggleSubmenu) {\n          event.stopPropagation();\n          event.preventDefault();\n          onToggleSubmenu(event);\n        }\n        break;\n      case 'Enter':\n      case ' ':\n        if (onClick) {\n          // Let event propagate so the menu closes\n          onClick(event);\n        }\n    }\n  };\n  if (href) {\n    // The menu item is a link\n    menuItem = (\n      <a\n        ref={menuItemRef}\n        className={classnames('menu-item', {\n          'is-submenu': isSubmenuItem,\n          'is-disabled': isDisabled,\n        })}\n        href={href}\n        target=\"_blank\"\n        tabIndex={-1}\n        rel=\"noopener noreferrer\"\n        role=\"menuitem\"\n        onKeyDown={onKeyDown}\n      >\n        {hasLeftIcon && (\n          <div className=\"menu-item__icon-container\">{leftIcon}</div>\n        )}\n        <span className=\"menu-item__label\">{label}</span>\n        {hasRightIcon && (\n          <div className=\"menu-item__icon-container\">{rightIcon}</div>\n        )}\n      </a>\n    );\n  } else {\n    // The menu item is a clickable button or radio button.\n    // In either case there may be an optional submenu.\n\n    menuItem = (\n      <div\n        ref={menuItemRef}\n        className={classnames('menu-item', {\n          'is-submenu': isSubmenuItem,\n          'is-disabled': isDisabled,\n          'is-expanded': isExpanded,\n          'is-selected': isSelected,\n        })}\n        tabIndex={-1}\n        onKeyDown={onKeyDown}\n        onClick={onClick}\n        role={isRadioButtonType ? 'menuitemradio' : 'menuitem'}\n        aria-checked={isRadioButtonType ? isSelected : undefined}\n        aria-haspopup={hasSubmenuVisible}\n        aria-expanded={hasSubmenuVisible ? isSubmenuVisible : undefined}\n      >\n        {hasLeftIcon && (\n          <div className=\"menu-item__icon-container\">{leftIcon}</div>\n        )}\n        <span className=\"menu-item__label\">{label}</span>\n        {hasRightIcon && (\n          <div className=\"menu-item__icon-container\">{rightIcon}</div>\n        )}\n\n        {hasSubmenuVisible && (\n          <div\n            // We should not have a <button> inside of the menu item itself\n            // but we have a non-standard mechanism with the toggle control\n            // requiring an onClick event nested inside a \"menuitemradio|menuitem\".\n            // Therefore, a static element with a role=\"none\" is necessary here.\n            role=\"none\"\n            icon={isSubmenuVisible ? 'collapse-menu' : 'expand-menu'}\n            className=\"menu-item__toggle\"\n            onClick={onToggleSubmenu}\n            title={`Show actions for ${label}`}\n          >\n            <SvgIcon\n              name={isSubmenuVisible ? 'collapse-menu' : 'expand-menu'}\n              className=\"menu-item__toggle-icon\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      {menuItem}\n      {hasSubmenuVisible && (\n        <Slider visible={/** @type {boolean} */ (isSubmenuVisible)}>\n          <MenuKeyboardNavigation\n            closeMenu={onCloseSubmenu}\n            visible={/** @type {boolean} */ (isSubmenuVisible)}\n            className=\"menu-item__submenu\"\n          >\n            {submenu}\n          </MenuKeyboardNavigation>\n        </Slider>\n      )}\n    </Fragment>\n  );\n}\n\nMenuItem.propTypes = {\n  href: propTypes.string,\n  iconAlt: propTypes.string,\n  icon: propTypes.string,\n  isDisabled: propTypes.bool,\n  isExpanded: propTypes.bool,\n  isSelected: propTypes.bool,\n  isSubmenuItem: propTypes.bool,\n  isSubmenuVisible: propTypes.bool,\n  label: propTypes.string.isRequired,\n  onClick: propTypes.func,\n  onToggleSubmenu: propTypes.func,\n  submenu: propTypes.any,\n};\n",
    "import { createElement } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport { normalizeKeyName } from '../../shared/browser-compatibility-utils';\n\nfunction isElementVisible(element) {\n  return element.offsetParent !== null;\n}\n\n/**\n * @typedef MenuKeyboardNavigationProps\n * @prop {string} [className]\n * @prop {(e: KeyboardEvent) => any} [closeMenu] - Callback when the menu is closed via keyboard input\n * @prop {boolean} [visible] - When  true`, sets focus on the first item in the list\n * @prop {Object} children - Array of nodes which may contain <MenuItems> or any nodes\n */\n\n/**\n * Helper component used by Menu and MenuItem to facilitate keyboard navigation of a\n * list of <MenuItem> components. This component should not be used directly.\n *\n * Note that `ArrowRight` shall be handled by the parent <MenuItem> directly and\n * all other focus() related navigation is handled here.\n *\n * @param {MenuKeyboardNavigationProps} props\n */\nexport default function MenuKeyboardNavigation({\n  className,\n  closeMenu,\n  children,\n  visible,\n}) {\n  const menuRef = useRef(/** @type {HTMLDivElement|null} */ (null));\n\n  useEffect(() => {\n    let focusTimer = null;\n    if (visible) {\n      focusTimer = setTimeout(() => {\n        // The focus won't work without delaying rendering.\n        const firstItem = menuRef.current.querySelector('[role^=\"menuitem\"]');\n        if (firstItem) {\n          /** @type {HTMLElement} */ (firstItem).focus();\n        }\n      });\n    }\n    return () => {\n      // unmount\n      clearTimeout(focusTimer);\n    };\n  }, [visible]);\n\n  const onKeyDown = event => {\n    const menuItems = Array.from(\n      /** @type {NodeListOf<HTMLElement>} */\n      (menuRef.current.querySelectorAll('[role^=\"menuitem\"]'))\n    ).filter(isElementVisible);\n\n    let focusedIndex = menuItems.findIndex(el =>\n      el.contains(document.activeElement)\n    );\n\n    let handled = false;\n\n    switch (normalizeKeyName(event.key)) {\n      case 'ArrowLeft':\n      case 'Escape':\n        if (closeMenu) {\n          closeMenu(event);\n          handled = true;\n        }\n        break;\n      case 'ArrowUp':\n        focusedIndex -= 1;\n        if (focusedIndex < 0) {\n          focusedIndex = menuItems.length - 1;\n        }\n        handled = true;\n        break;\n      case 'ArrowDown':\n        focusedIndex += 1;\n        if (focusedIndex === menuItems.length) {\n          focusedIndex = 0;\n        }\n        handled = true;\n        break;\n      case 'Home':\n        focusedIndex = 0;\n        handled = true;\n        break;\n      case 'End':\n        focusedIndex = menuItems.length - 1;\n        handled = true;\n        break;\n    }\n\n    if (handled && focusedIndex >= 0) {\n      event.stopPropagation();\n      event.preventDefault();\n      menuItems[focusedIndex].focus();\n    }\n  };\n\n  return (\n    // This element needs to have role=\"menu\" to facilitate readers\n    // correctly enumerating discrete submenu items, but it also needs\n    // to facilitate keydown events for navigation. Disable the linter\n    // error so it can do both.\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    <div role=\"menu\" className={className} ref={menuRef} onKeyDown={onKeyDown}>\n      {children}\n    </div>\n  );\n}\n\nMenuKeyboardNavigation.propTypes = {\n  className: propTypes.string,\n\n  // Callback when the menu is closed via keyboard input\n  closeMenu: propTypes.func,\n\n  // When  true`, sets focus on the first item in the list\n  // which has a role=\"menuitem\" attribute.\n  visible: propTypes.bool,\n\n  // Array of nodes which may contain <MenuItems> or any nodes\n  // that have role set to 'menuitem', 'menuitemradio', or 'menuitemcheckbox'\n  children: propTypes.any.isRequired,\n};\n",
    "import { Fragment, createElement, toChildArray } from 'preact';\nimport propTypes from 'prop-types';\n\n/** @typedef {import(\"preact\").JSX.Element} JSXElement */\n\n/**\n * @typedef MenuSectionProps\n * @prop {string} [heading] - Heading displayed at the top of the menu.\n * @prop {Object} children - Menu items to display in this section.\n */\n\n/**\n * Group a set of menu items together visually, with an optional header.\n *\n * @example\n *   <Menu label=\"Things\">\n *     <MenuSection heading=\"Big things\">\n *       <MenuItem .../>\n *       <MenuItem .../>\n *     </MenuSection>\n *     <MenuSection heading=\"Little things\">\n *       <MenuItem .../>\n *       <MenuItem .../>\n *     </MenuSection>\n *   </Menu>\n *\n * @param {MenuSectionProps} props\n */\nexport default function MenuSection({ heading, children }) {\n  return (\n    <Fragment>\n      {heading && <h2 className=\"menu-section__heading\">{heading}</h2>}\n      <ul className=\"menu-section__content\">\n        {toChildArray(children).map(child => (\n          <li key={/** @type {JSXElement} **/ (child).key}>{child}</li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\n\nMenuSection.propTypes = {\n  heading: propTypes.string,\n  children: propTypes.any.isRequired,\n};\n",
    "import classnames from 'classnames';\nimport { Fragment, createElement } from 'preact';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport useElementShouldClose from './hooks/use-element-should-close';\nimport { normalizeKeyName } from '../../shared/browser-compatibility-utils';\n\nimport SvgIcon from '../../shared/components/svg-icon';\nimport MenuKeyboardNavigation from './menu-keyboard-navigation';\n\n// The triangular indicator below the menu toggle button that visually links it\n// to the menu content.\nconst menuArrow = className => (\n  <svg className={classnames('menu__arrow', className)} width={15} height={8}>\n    <path d=\"M0 8 L7 0 L15 8\" stroke=\"currentColor\" strokeWidth=\"2\" />\n  </svg>\n);\n\n/**\n * Flag indicating whether the next click event on the menu's toggle button\n * should be ignored, because the action it would trigger has already been\n * triggered by a preceding \"mousedown\" event.\n */\nlet ignoreNextClick = false;\n\n/**\n * @typedef MenuProps\n * @prop {'left'|'right'} [align] -\n *   Whether the menu content is aligned with the left (default) or right edges of the\n *   toggle element.\n * @prop {string} [arrowClass] -\n *   Additional CSS class for the arrow caret at the edge of the menu content that \"points\"\n *   toward the menu's toggle button. This can be used to adjust the position of that caret\n *   respective to the toggle button.\n * @prop {Object|string} [label] - Label element for the toggle button that hides and shows the menu.\n * @prop {Object} [children] -\n *   Menu items and sections to display in the content area of the menu.  These are typically\n *   `MenuSection` and `MenuItem` components, but other custom content is also allowed.\n * @prop {boolean} [containerPositioned] -\n *   Whether the menu elements should be positioned relative to the Menu container. When\n *   `false`, the consumer is responsible for positioning.\n * @prop {string} [contentClass] - Additional CSS classes to apply to the menu.\n * @prop {boolean} [defaultOpen] - Whether the menu is open or closed when initially rendered.\n * @prop {(open: boolean) => any} [onOpenChanged] - Callback invoked when the menu is\n *   opened or closed.  This can be used, for example, to reset any ephemeral state that the\n *   menu content may have.\n * @prop {string} title -\n *   A title for the menu. This is important for accessibility if the menu's toggle button\n *   has only an icon as a label.\n * @prop {boolean} [menuIndicator] -\n *   Whether to display an indicator next to the label that there is a dropdown menu.\n */\n\n/**\n * A drop-down menu.\n *\n * Menus consist of a button which toggles whether the menu is open, an\n * an arrow indicating the state of the menu and content when is shown when\n * the menu is open. The children of the menu component are rendered as the\n * content of the menu when open. Typically this consists of a list of\n * `MenuSection` and/or `MenuItem` components.\n *\n * @example\n *   <Menu label=\"Preferences\">\n *     <MenuItem label=\"View\" onClick={showViewSettings}/>\n *     <MenuItem label=\"Theme\" onClick={showThemeSettings}/>\n *     <MenuSection>\n *       <MenuItem label=\"Log out\"/>\n *     </MenuSection>\n *   </Menu>\n *\n * @param {MenuProps} props\n */\nexport default function Menu({\n  align = 'left',\n  arrowClass = '',\n  children,\n  containerPositioned = true,\n  contentClass,\n  defaultOpen = false,\n  label,\n  onOpenChanged,\n  menuIndicator = true,\n  title,\n}) {\n  const [isOpen, setOpen] = useState(defaultOpen);\n\n  // Notify parent when menu is opened or closed.\n  const wasOpen = useRef(isOpen);\n  useEffect(() => {\n    if (typeof onOpenChanged === 'function' && wasOpen.current !== isOpen) {\n      wasOpen.current = isOpen;\n      onOpenChanged(isOpen);\n    }\n  }, [isOpen, onOpenChanged]);\n\n  // Toggle menu when user presses toggle button. The menu is shown on mouse\n  // press for a more responsive/native feel but also handles a click event for\n  // activation via other input methods.\n  const toggleMenu = event => {\n    // If the menu was opened on press, don't close it again on the subsequent\n    // mouse up (\"click\") event.\n    if (event.type === 'mousedown') {\n      ignoreNextClick = true;\n    } else if (event.type === 'click' && ignoreNextClick) {\n      // Ignore \"click\" event triggered from the mouse up action.\n      ignoreNextClick = false;\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    setOpen(!isOpen);\n  };\n  const closeMenu = useCallback(() => setOpen(false), [setOpen]);\n\n  // Set up an effect which adds document-level event handlers when the menu\n  // is open and removes them when the menu is closed or removed.\n  //\n  // These handlers close the menu when the user taps or clicks outside the\n  // menu or presses Escape.\n  const menuRef = useRef(/** @type {HTMLDivElement|null} */ (null));\n\n  // Menu element should close via `closeMenu` whenever it's open and there\n  // are user interactions outside of it (e.g. clicks) in the document\n  useElementShouldClose(menuRef, isOpen, closeMenu);\n\n  const stopPropagation = e => e.stopPropagation();\n\n  // It should also close if the user presses a key which activates menu items.\n  const handleMenuKeyDown = event => {\n    const key = normalizeKeyName(event.key);\n    if (key === 'Enter' || key === ' ') {\n      // The browser will not open the link if the link element is removed\n      // from within the keypress event that triggers it. Add a little\n      // delay to work around that.\n      setTimeout(() => {\n        closeMenu();\n      });\n    }\n  };\n\n  const containerStyle = {\n    position: containerPositioned ? 'relative' : 'static',\n  };\n\n  return (\n    // See https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md#case-the-event-handler-is-only-being-used-to-capture-bubbled-events\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n    <div\n      className=\"menu\"\n      ref={menuRef}\n      // Add inline styles for positioning\n      style={containerStyle}\n      // Don't close the menu if the mouse is released over one of the menu\n      // elements outside the content area (eg. the arrow at the top of the\n      // content).\n      onClick={stopPropagation}\n      // Don't close the menu if the user presses the mouse down on menu elements\n      // except for the toggle button.\n      onMouseDown={stopPropagation}\n    >\n      <button\n        aria-expanded={isOpen ? 'true' : 'false'}\n        aria-haspopup={true}\n        className=\"menu__toggle\"\n        onMouseDown={toggleMenu}\n        onClick={toggleMenu}\n        aria-label={title}\n        title={title}\n      >\n        <span\n          // wrapper is needed to serve as the flex layout for the label and indicator content.\n          className=\"menu__toggle-wrapper\"\n        >\n          {label}\n          {menuIndicator && (\n            <span\n              className={classnames('menu__toggle-arrow', isOpen && 'is-open')}\n            >\n              <SvgIcon name=\"expand-menu\" className=\"menu__toggle-icon\" />\n            </span>\n          )}\n        </span>\n      </button>\n      {isOpen && (\n        <Fragment>\n          {menuArrow(arrowClass)}\n          <div\n            className={classnames(\n              'menu__content',\n              `menu__content--align-${align}`,\n              contentClass\n            )}\n            role=\"menu\"\n            tabIndex={-1}\n            onClick={closeMenu}\n            onKeyDown={handleMenuKeyDown}\n          >\n            <MenuKeyboardNavigation visible={true}>\n              {children}\n            </MenuKeyboardNavigation>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  align: propTypes.oneOf(['left', 'right']),\n  arrowClass: propTypes.string,\n  label: propTypes.oneOfType([\n    propTypes.object.isRequired,\n    propTypes.string.isRequired,\n  ]),\n  children: propTypes.any,\n  containerPositioned: propTypes.bool,\n  contentClass: propTypes.string,\n  defaultOpen: propTypes.bool,\n  onOpenChanged: propTypes.func,\n  title: propTypes.string.isRequired,\n  menuIndicator: propTypes.bool,\n};\n",
    "import classnames from 'classnames';\nimport { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport * as annotationMetadata from '../util/annotation-metadata';\nimport { withServices } from '../util/service-context';\n\n/**\n * @typedef {import('../../types/api').Annotation} Annotation\n */\n\n/**\n * @typedef ModerationBannerProps\n * @prop {Annotation} annotation -\n *   The annotation object for this banner. This contains state about the flag count\n *   or its hidden value.\n * @prop {Object} api - Injected service\n * @prop {Object} toastMessenger - Injected service\n */\n\n/**\n * Banner allows moderators to hide/unhide the flagged\n * annotation from other users.\n *\n * @param {ModerationBannerProps} props\n */\nfunction ModerationBanner({ annotation, api, toastMessenger }) {\n  // actions\n  const store = useStore(store => ({\n    hide: store.hideAnnotation,\n    unhide: store.unhideAnnotation,\n  }));\n\n  const flagCount = annotationMetadata.flagCount(annotation);\n\n  const isHiddenOrFlagged =\n    flagCount !== null && (flagCount > 0 || annotation.hidden);\n\n  /**\n   * Hide an annotation from non-moderator users.\n   */\n  const hideAnnotation = () => {\n    api.annotation\n      .hide({ id: annotation.id })\n      .then(() => {\n        store.hide(annotation.id);\n      })\n      .catch(() => {\n        toastMessenger.error('Failed to hide annotation');\n      });\n  };\n\n  /**\n   * Un-hide an annotation from non-moderator users.\n   */\n  const unhideAnnotation = () => {\n    api.annotation\n      .unhide({ id: annotation.id })\n      .then(() => {\n        store.unhide(annotation.id);\n      })\n      .catch(() => {\n        toastMessenger.error('Failed to unhide annotation');\n      });\n  };\n\n  const toggleButtonProps = (() => {\n    const buttonProps = {};\n    if (annotation.hidden) {\n      buttonProps.onClick = unhideAnnotation;\n      buttonProps.title = 'Make this annotation visible to everyone';\n    } else {\n      buttonProps.onClick = hideAnnotation;\n      buttonProps.title = 'Hide this annotation from non-moderators';\n    }\n    buttonProps['aria-label'] = buttonProps.title;\n    return buttonProps;\n  })();\n\n  const bannerClasses = classnames('moderation-banner', {\n    'is-flagged': flagCount !== null && flagCount > 0,\n    'is-hidden': annotation.hidden,\n    'is-reply': annotationMetadata.isReply(annotation),\n  });\n\n  if (!isHiddenOrFlagged) {\n    return null;\n  }\n  return (\n    <div className={bannerClasses}>\n      {!!flagCount && !annotation.hidden && (\n        <span>Flagged for review x{flagCount}</span>\n      )}\n      {annotation.hidden && (\n        <span>Hidden from users. Flagged x{flagCount}</span>\n      )}\n      <span className=\"u-stretch\" />\n      <button {...toggleButtonProps}>\n        {annotation.hidden ? 'Unhide' : 'Hide'}\n      </button>\n    </div>\n  );\n}\n\nModerationBanner.propTypes = {\n  annotation: propTypes.object.isRequired,\n  api: propTypes.object.isRequired,\n  toastMessenger: propTypes.object.isRequired,\n};\n\nModerationBanner.injectedProps = ['api', 'toastMessenger'];\n\nexport default withServices(ModerationBanner);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport uiConstants from '../ui-constants';\nimport useStore from '../store/use-store';\nimport { withServices } from '../util/service-context';\nimport { applyTheme } from '../util/theme';\n\nimport Button from './button';\n\n/**\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n */\n\n/**\n * @typedef NewNoteButtonProps\n * @prop {Object} annotationsService - Injected service.\n * @prop {MergedConfig} settings - Injected service.\n */\n\nfunction NewNoteButton({ annotationsService, settings }) {\n  const topLevelFrame = useStore(store => store.mainFrame());\n  const isLoggedIn = useStore(store => store.isLoggedIn());\n\n  const openSidebarPanel = useStore(store => store.openSidebarPanel);\n\n  const onNewNoteBtnClick = function () {\n    if (!isLoggedIn) {\n      openSidebarPanel(uiConstants.PANEL_LOGIN_PROMPT);\n      return;\n    }\n    if (!topLevelFrame) {\n      return;\n    }\n    const annot = {\n      target: [],\n      uri: topLevelFrame.uri,\n    };\n    annotationsService.create(annot);\n  };\n\n  return (\n    <div className=\"u-layout-row--justify-right\">\n      <Button\n        buttonText=\"New note\"\n        className=\"button--primary\"\n        icon=\"add\"\n        onClick={onNewNoteBtnClick}\n        style={applyTheme(['ctaBackgroundColor'], settings)}\n      />\n    </div>\n  );\n}\nNewNoteButton.propTypes = {\n  annotationsService: propTypes.object.isRequired,\n  settings: propTypes.object.isRequired,\n};\n\nNewNoteButton.injectedProps = ['annotationsService', 'settings'];\n\nexport default withServices(NewNoteButton);\n",
    "import classnames from 'classnames';\nimport { createElement } from 'preact';\nimport { useRef, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\n\nimport Button from './button';\nimport Spinner from './spinner';\n\n/**\n * @typedef SearchInputProps\n * @prop {boolean} [alwaysExpanded] -\n *   If true, the input field is always shown. If false, the input field is only shown\n *   if the query is non-empty.\n * @prop {string|null} query - The currently active filter query\n * @prop {(value: string) => any} [onSearch] -\n *   Callback to invoke when the current filter query changes\n */\n\n/**\n * An input field in the top bar for entering a query that filters annotations\n * (in the sidebar) or searches annotations (in the stream/single annotation\n * view).\n *\n * This component also renders a eloading spinner to indicate when the client\n * is fetching for data from the API or in a \"loading\" state for any other\n * reason.\n *\n * @param {SearchInputProps} props\n */\nexport default function SearchInput({ alwaysExpanded, query, onSearch }) {\n  const isLoading = useStore(store => store.isLoading());\n  const input = useRef(/** @type {HTMLInputElement|null} */ (null));\n\n  // The active filter query from the previous render.\n  const [prevQuery, setPrevQuery] = useState(query);\n\n  // The query that the user is currently typing, but may not yet have applied.\n  const [pendingQuery, setPendingQuery] = useState(query);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (input.current.value || prevQuery) {\n      // Don't set an initial empty query, but allow a later empty query to\n      // clear `prevQuery`\n      onSearch(input.current.value);\n    }\n  };\n\n  // When the active query changes outside of this component, update the input\n  // field to match. This happens when clearing the current filter for example.\n  if (query !== prevQuery) {\n    setPendingQuery(query);\n    setPrevQuery(query);\n  }\n\n  return (\n    <form\n      action=\"#\"\n      className=\"search-input__form\"\n      name=\"searchForm\"\n      onSubmit={onSubmit}\n    >\n      <input\n        aria-label=\"Search\"\n        className={classnames('search-input__input', {\n          'is-expanded': alwaysExpanded || query,\n        })}\n        dir=\"auto\"\n        type=\"text\"\n        name=\"query\"\n        placeholder={(isLoading && 'Loading…') || 'Search…'}\n        disabled={isLoading}\n        ref={input}\n        value={pendingQuery || ''}\n        onInput={e =>\n          setPendingQuery(/** @type {HTMLInputElement} */ (e.target).value)\n        }\n      />\n      {!isLoading && (\n        <Button\n          className=\"search-input__icon-button top-bar__icon-button\"\n          icon=\"search\"\n          onClick={() => input.current.focus()}\n          title=\"Search annotations\"\n        />\n      )}\n      {isLoading && <Spinner />}\n    </form>\n  );\n}\n\nSearchInput.propTypes = {\n  alwaysExpanded: propTypes.bool,\n  query: propTypes.string,\n  onSearch: propTypes.func,\n};\n",
    "import classnames from 'classnames';\nimport { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport uiConstants from '../ui-constants';\nimport { withServices } from '../util/service-context';\n\nimport NewNoteBtn from './new-note-btn';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n */\n\n/**\n * @typedef TabProps\n * @prop {Object} children - Child components.\n * @prop {number} count - The total annotations for this tab.\n * @prop {boolean} isSelected - Is this tab currently selected?\n * @prop {boolean} isWaitingToAnchor - Are there any annotations still waiting to anchor?\n * @prop {string} label - A string label to use for `aria-label` and `title`\n * @prop {() => any} onSelect - Callback to invoke when this tab is selected.\n */\n\n/**\n * Display name of the tab and annotation count.\n *\n * @param {TabProps} props\n */\nfunction Tab({\n  children,\n  count,\n  isWaitingToAnchor,\n  isSelected,\n  label,\n  onSelect,\n}) {\n  const selectTab = () => {\n    if (!isSelected) {\n      onSelect();\n    }\n  };\n\n  const title = count > 0 ? `${label} (${count} available)` : label;\n\n  return (\n    <div>\n      <button\n        className={classnames('selection-tabs__type', {\n          'is-selected': isSelected,\n        })}\n        // Listen for `onMouseDown` so that the tab is selected when _pressed_\n        // as this makes the UI feel faster. Also listen for `onClick` as a fallback\n        // to enable selecting the tab via other input methods.\n        onClick={selectTab}\n        onMouseDown={selectTab}\n        role=\"tab\"\n        tabIndex={0}\n        title={title}\n        aria-label={title}\n        aria-selected={isSelected.toString()}\n      >\n        {children}\n        {count > 0 && !isWaitingToAnchor && (\n          <span className=\"selection-tabs__count\"> {count}</span>\n        )}\n      </button>\n    </div>\n  );\n}\n\nTab.propTypes = {\n  children: propTypes.node.isRequired,\n  count: propTypes.number.isRequired,\n  isSelected: propTypes.bool.isRequired,\n  isWaitingToAnchor: propTypes.bool.isRequired,\n  label: propTypes.string.isRequired,\n  onSelect: propTypes.func.isRequired,\n};\n\n/**\n * @typedef SelectionTabsProps\n * @prop {boolean} isLoading - Are we waiting on any annotations from the server?\n * @prop {MergedConfig} settings - Injected service.\n */\n\n/**\n * Tabbed display of annotations and notes.\n *\n * @param {SelectionTabsProps} props\n */\nfunction SelectionTabs({ isLoading, settings }) {\n  const selectedTab = useStore(store => store.getState().selection.selectedTab);\n  const noteCount = useStore(store => store.noteCount());\n  const annotationCount = useStore(store => store.annotationCount());\n  const orphanCount = useStore(store => store.orphanCount());\n  const isWaitingToAnchorAnnotations = useStore(store =>\n    store.isWaitingToAnchorAnnotations()\n  );\n  // actions\n  const store = useStore(store => ({\n    clearSelection: store.clearSelection,\n    selectTab: store.selectTab,\n  }));\n\n  const isThemeClean = settings.theme === 'clean';\n\n  const selectTab = tabId => {\n    store.clearSelection();\n    store.selectTab(tabId);\n  };\n\n  const showAnnotationsUnavailableMessage =\n    selectedTab === uiConstants.TAB_ANNOTATIONS &&\n    annotationCount === 0 &&\n    !isWaitingToAnchorAnnotations;\n\n  const showNotesUnavailableMessage =\n    selectedTab === uiConstants.TAB_NOTES && noteCount === 0;\n\n  return (\n    <div className=\"selection-tabs-container\">\n      <div\n        className={classnames('selection-tabs', {\n          'selection-tabs--theme-clean': isThemeClean,\n        })}\n        role=\"tablist\"\n      >\n        <Tab\n          count={annotationCount}\n          isWaitingToAnchor={isWaitingToAnchorAnnotations}\n          isSelected={selectedTab === uiConstants.TAB_ANNOTATIONS}\n          label=\"Annotations\"\n          onSelect={() => selectTab(uiConstants.TAB_ANNOTATIONS)}\n        >\n          Annotations\n        </Tab>\n        <Tab\n          count={noteCount}\n          isWaitingToAnchor={isWaitingToAnchorAnnotations}\n          isSelected={selectedTab === uiConstants.TAB_NOTES}\n          label=\"Page notes\"\n          onSelect={() => selectTab(uiConstants.TAB_NOTES)}\n        >\n          Page Notes\n        </Tab>\n        {orphanCount > 0 && (\n          <Tab\n            count={orphanCount}\n            isWaitingToAnchor={isWaitingToAnchorAnnotations}\n            isSelected={selectedTab === uiConstants.TAB_ORPHANS}\n            label=\"Orphans\"\n            onSelect={() => selectTab(uiConstants.TAB_ORPHANS)}\n          >\n            Orphans\n          </Tab>\n        )}\n      </div>\n      {selectedTab === uiConstants.TAB_NOTES &&\n        settings.enableExperimentalNewNoteButton && <NewNoteBtn />}\n      {!isLoading && showNotesUnavailableMessage && (\n        <div className=\"selection-tabs__message\">\n          There are no page notes in this group.\n        </div>\n      )}\n      {!isLoading && showAnnotationsUnavailableMessage && (\n        <div className=\"selection-tabs__message\">\n          There are no annotations in this group.\n          <br />\n          Create one by selecting some text and clicking the{' '}\n          <SvgIcon\n            name=\"annotate\"\n            inline={true}\n            className=\"selection-tabs__icon\"\n          />{' '}\n          button.\n        </div>\n      )}\n    </div>\n  );\n}\nSelectionTabs.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  settings: propTypes.object.isRequired,\n};\n\nSelectionTabs.injectedProps = ['settings'];\n\nexport default withServices(SelectionTabs);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport uiConstants from '../ui-constants';\nimport { copyText } from '../util/copy-to-clipboard';\nimport { withServices } from '../util/service-context';\n\nimport Button from './button';\nimport ShareLinks from './share-links';\nimport SidebarPanel from './sidebar-panel';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef ShareAnnotationsPanelProps\n * @prop {Object} analytics - Injected service\n * @prop {Object} toastMessenger - Injected service\n */\n\n/**\n * A panel for sharing the current group's annotations.\n *\n * Links within this component allow a user to share the set of annotations that\n * are on the current page (as defined by the main frame's URI) and contained\n * within the app's currently-focused group.\n *\n * @param {ShareAnnotationsPanelProps} props\n */\nfunction ShareAnnotationsPanel({ analytics, toastMessenger }) {\n  const mainFrame = useStore(store => store.mainFrame());\n  const focusedGroup = useStore(store => store.focusedGroup());\n\n  const groupName = (focusedGroup && focusedGroup.name) || '...';\n  const panelTitle = `Share Annotations in ${groupName}`;\n\n  // Generate bouncer sharing link for annotations in the current group.\n  // This is the URI format for the web-sharing link shown in the input\n  // and is available to be copied to clipboard\n  const shareURI = ((frame, group) => {\n    return group && frame\n      ? `https://hyp.is/go?url=${encodeURIComponent(frame.uri)}&group=${\n          group.id\n        }`\n      : '';\n  })(mainFrame, focusedGroup);\n\n  const copyShareLink = () => {\n    try {\n      copyText(shareURI);\n      toastMessenger.success('Copied share link to clipboard');\n    } catch (err) {\n      toastMessenger.error('Unable to copy link');\n    }\n  };\n\n  return (\n    <SidebarPanel\n      title={panelTitle}\n      panelName={uiConstants.PANEL_SHARE_ANNOTATIONS}\n    >\n      {focusedGroup && mainFrame && (\n        <div className=\"share-annotations-panel\">\n          <div className=\"share-annotations-panel__intro\">\n            {focusedGroup.type === 'private' ? (\n              <p>\n                Use this link to share these annotations with other group\n                members:\n              </p>\n            ) : (\n              <p>Use this link to share these annotations with anyone:</p>\n            )}\n          </div>\n          <div className=\"u-layout-row\">\n            <input\n              aria-label=\"Use this URL to share these annotations\"\n              className=\"share-annotations-panel__form-input\"\n              type=\"text\"\n              value={shareURI}\n              readOnly\n            />\n            <Button\n              icon=\"copy\"\n              onClick={copyShareLink}\n              title=\"Copy share link\"\n              className=\"share-annotations-panel__icon-button\"\n            />\n          </div>\n          <p>\n            {focusedGroup.type === 'private' ? (\n              <span>\n                Annotations in the private group <em>{focusedGroup.name}</em>{' '}\n                are only visible to group members.\n              </span>\n            ) : (\n              <span>\n                Anyone using this link may view the annotations in the group{' '}\n                <em>{focusedGroup.name}</em>.\n              </span>\n            )}{' '}\n            <span>\n              Private (\n              <SvgIcon name=\"lock\" inline className=\"u-icon--inline\" />{' '}\n              <em>Only Me</em>) annotations are only visible to you.\n            </span>\n          </p>\n          <ShareLinks\n            shareURI={shareURI}\n            analyticsEventName={analytics.events.DOCUMENT_SHARED}\n          />\n        </div>\n      )}\n    </SidebarPanel>\n  );\n}\n\nShareAnnotationsPanel.propTypes = {\n  analytics: propTypes.object.isRequired,\n  toastMessenger: propTypes.object.isRequired,\n};\n\nShareAnnotationsPanel.injectedProps = ['analytics', 'toastMessenger'];\n\nexport default withServices(ShareAnnotationsPanel);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport { withServices } from '../util/service-context';\n\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * A single sharing link as a list item\n */\nfunction ShareLink({ label, iconName, uri, onClick }) {\n  return (\n    <li className=\"share-links__link\">\n      <a\n        aria-label={label}\n        href={uri}\n        title={label}\n        onClick={onClick}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <SvgIcon name={iconName} className=\"share-links__icon\" />\n      </a>\n    </li>\n  );\n}\n\nShareLink.propTypes = {\n  /** The name of the SVG icon to use for this link */\n  iconName: propTypes.string.isRequired,\n  /** Accessible label / tooltip for link. */\n  label: propTypes.string.isRequired,\n  /** URI for sharing this annotation on the given social service */\n  uri: propTypes.string.isRequired,\n  /** click callback (for analytics tracking) */\n  onClick: propTypes.func.isRequired,\n};\n\n/**\n * A list of share links to social-media platforms.\n */\nfunction ShareLinks({ analytics, analyticsEventName, shareURI }) {\n  // Return a click callback that will track click events for the given\n  // social platform (`shareTarget`)\n  const trackShareClick = shareTarget => {\n    return () => {\n      analytics.track(analyticsEventName, shareTarget);\n    };\n  };\n\n  // This is the double-encoded format needed for other services (the entire\n  // URI needs to be encoded because it's used as the value of querystring params)\n  const encodedURI = encodeURIComponent(shareURI);\n\n  return (\n    <ul className=\"share-links\">\n      <ShareLink\n        iconName=\"twitter\"\n        label=\"Tweet share link\"\n        uri={`https://twitter.com/intent/tweet?url=${encodedURI}&hashtags=annotated`}\n        onClick={trackShareClick('twitter')}\n      />\n\n      <ShareLink\n        iconName=\"facebook\"\n        label=\"Share on Facebook\"\n        uri={`https://www.facebook.com/sharer/sharer.php?u=${encodedURI}`}\n        onClick={trackShareClick('facebook')}\n      />\n\n      <ShareLink\n        iconName=\"email\"\n        label=\"Share via email\"\n        uri={`mailto:?subject=${encodeURIComponent(\n          \"Let's Annotate\"\n        )}&body=${encodedURI}`}\n        onClick={trackShareClick('email')}\n      />\n    </ul>\n  );\n}\n\nShareLinks.propTypes = {\n  /** Analytics event to track when share links are clicked */\n  analyticsEventName: propTypes.string.isRequired,\n  /** URI to shared resource(s), e.g. an annotation or collection of annotations */\n  shareURI: propTypes.string.isRequired,\n\n  // Services/injected\n  analytics: propTypes.object.isRequired,\n};\n\nShareLinks.injectedProps = ['analytics'];\n\nexport default withServices(ShareLinks);\n",
    "import { createElement } from 'preact';\nimport classnames from 'classnames';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\n\nimport Button from './button';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef SidebarContentErrorProps\n * @prop {'annotation'|'group'} errorType\n * @prop {boolean} [showClearSelection] - Whether to show a \"Clear selection\" button.\n * @prop {() => any} onLoginRequest - A function that will launch the login flow for the user.\n */\n\n/**\n * Show an error indicating that an annotation or group referenced in the URL\n * could not be fetched.\n *\n * @param {SidebarContentErrorProps} props\n */\nexport default function SidebarContentError({\n  errorType,\n  onLoginRequest,\n  showClearSelection = false,\n}) {\n  const clearSelection = useStore(store => store.clearSelection);\n  const isLoggedIn = useStore(store => store.isLoggedIn());\n\n  const errorTitle =\n    errorType === 'annotation' ? 'Annotation unavailable' : 'Group unavailable';\n\n  const errorMessage = (() => {\n    if (!isLoggedIn) {\n      return `The ${errorType} associated with the current URL is unavailable.\n        You may need to log in to see it.`;\n    }\n    if (errorType === 'group') {\n      return `The current URL links to a group, but that group cannot be found,\n        or you do not have permission to view the annotations in that group.`;\n    }\n    return `The current URL links to an annotation, but that annotation\n      cannot be found, or you do not have permission to view it.`;\n  })();\n\n  return (\n    <div className=\"sidebar-content-error\">\n      <div className=\"sidebar-content-error__header\">\n        <div className=\"sidebar-content-error__header-icon\">\n          <SvgIcon name=\"restricted\" title={errorTitle} />\n        </div>\n        <div className=\"sidebar-content-error__title u-stretch\">\n          {errorTitle}\n        </div>\n      </div>\n      <div className=\"sidebar-content-error__content\">\n        <p>{errorMessage}</p>\n        <div className=\"sidebar-content-error__actions\">\n          {showClearSelection && (\n            <Button\n              buttonText=\"Show all annotations\"\n              className={classnames({\n                'sidebar-content-error__button': !isLoggedIn,\n                'sidebar-content-error__button--primary': isLoggedIn,\n              })}\n              onClick={clearSelection}\n            />\n          )}\n          {!isLoggedIn && (\n            <Button\n              buttonText=\"Log in\"\n              className=\"sidebar-content-error__button--primary\"\n              onClick={onLoginRequest}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nSidebarContentError.propTypes = {\n  errorType: propTypes.oneOf(['annotation', 'group']).isRequired,\n  showClearSelection: propTypes.bool,\n  onLoginRequest: propTypes.func.isRequired,\n};\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\nimport { useEffect, useRef } from 'preact/hooks';\n\nimport useRootThread from './hooks/use-root-thread';\nimport { withServices } from '../util/service-context';\nimport useStore from '../store/use-store';\nimport { tabForAnnotation } from '../util/tabs';\n\nimport FilterStatus from './filter-status';\nimport LoggedOutMessage from './logged-out-message';\nimport LoginPromptPanel from './login-prompt-panel';\nimport SelectionTabs from './selection-tabs';\nimport SidebarContentError from './sidebar-content-error';\nimport ThreadList from './thread-list';\n\n/**\n * @typedef SidebarContentProps\n * @prop {() => any} onLogin\n * @prop {() => any} onSignUp\n * @prop {Object} [frameSync] - Injected service\n * @prop {Object} [loadAnnotationsService]  - Injected service\n * @prop {Object} [streamer] - Injected service\n */\n\n/**\n * Render the sidebar and its components\n *\n * @param {SidebarContentProps} props\n */\nfunction SidebarContent({\n  frameSync,\n  onLogin,\n  onSignUp,\n  loadAnnotationsService,\n  streamer,\n}) {\n  const rootThread = useRootThread();\n\n  // Store state values\n  const focusedGroupId = useStore(store => store.focusedGroupId());\n  const hasAppliedFilter = useStore(store => store.hasAppliedFilter());\n  const isLoading = useStore(store => store.isLoading());\n  const isLoggedIn = useStore(store => store.isLoggedIn());\n  const linkedAnnotationId = useStore(store =>\n    store.directLinkedAnnotationId()\n  );\n  const linkedAnnotation = useStore(store => {\n    return linkedAnnotationId\n      ? store.findAnnotationByID(linkedAnnotationId)\n      : undefined;\n  });\n  const directLinkedTab = linkedAnnotation\n    ? tabForAnnotation(linkedAnnotation)\n    : 'annotation';\n  const searchUris = useStore(store => store.searchUris());\n  const sidebarHasOpened = useStore(store => store.hasSidebarOpened());\n  const userId = useStore(store => store.profile().userid);\n\n  // The local `$tag` of a direct-linked annotation; populated once it\n  // has anchored: meaning that it's ready to be focused and scrolled to\n  const linkedAnnotationAnchorTag =\n    linkedAnnotation && linkedAnnotation.$orphan === false\n      ? linkedAnnotation.$tag\n      : null;\n\n  // Actions\n  const clearSelection = useStore(store => store.clearSelection);\n  const selectTab = useStore(store => store.selectTab);\n\n  // If, after loading completes, no `linkedAnnotation` object is present when\n  // a `linkedAnnotationId` is set, that indicates an error\n  const hasDirectLinkedAnnotationError =\n    !isLoading && linkedAnnotationId ? !linkedAnnotation : false;\n\n  const hasDirectLinkedGroupError = useStore(store =>\n    store.directLinkedGroupFetchFailed()\n  );\n\n  const hasContentError =\n    hasDirectLinkedAnnotationError || hasDirectLinkedGroupError;\n\n  const showFilterStatus = !hasContentError;\n  const showTabs = !hasContentError && !hasAppliedFilter;\n\n  // Show a CTA to log in if successfully viewing a direct-linked annotation\n  // and not logged in\n  const showLoggedOutMessage =\n    linkedAnnotationId &&\n    !isLoggedIn &&\n    !hasDirectLinkedAnnotationError &&\n    !isLoading;\n\n  /** @type {import(\"preact/hooks\").Ref<string|null>} */\n  const prevGroupId = useRef(focusedGroupId);\n\n  // Reload annotations when group, user or document search URIs change\n  useEffect(() => {\n    if (!prevGroupId.current || prevGroupId.current !== focusedGroupId) {\n      // Clear any selected annotations when the group ID changes\n      clearSelection();\n      prevGroupId.current = focusedGroupId;\n    }\n    if (focusedGroupId && searchUris.length) {\n      loadAnnotationsService.load(searchUris, focusedGroupId);\n    }\n  }, [\n    clearSelection,\n    loadAnnotationsService,\n    focusedGroupId,\n    userId,\n    searchUris,\n  ]);\n\n  // When a `linkedAnnotationAnchorTag` becomes available, scroll to it\n  // and focus it\n  useEffect(() => {\n    if (linkedAnnotationAnchorTag) {\n      frameSync.focusAnnotations([linkedAnnotationAnchorTag]);\n      frameSync.scrollToAnnotation(linkedAnnotationAnchorTag);\n      selectTab(directLinkedTab);\n    }\n  }, [directLinkedTab, frameSync, linkedAnnotationAnchorTag, selectTab]);\n\n  // Connect to the streamer when the sidebar has opened or if user is logged in\n  useEffect(() => {\n    if (sidebarHasOpened || isLoggedIn) {\n      streamer.connect();\n    }\n  }, [streamer, sidebarHasOpened, isLoggedIn]);\n\n  return (\n    <div>\n      <h2 className=\"u-screen-reader-only\">Annotations</h2>\n      {showFilterStatus && <FilterStatus />}\n      <LoginPromptPanel onLogin={onLogin} onSignUp={onSignUp} />\n      {hasDirectLinkedAnnotationError && (\n        <SidebarContentError\n          errorType=\"annotation\"\n          onLoginRequest={onLogin}\n          showClearSelection={true}\n        />\n      )}\n      {hasDirectLinkedGroupError && (\n        <SidebarContentError errorType=\"group\" onLoginRequest={onLogin} />\n      )}\n      {showTabs && <SelectionTabs isLoading={isLoading} />}\n      <ThreadList thread={rootThread} />\n      {showLoggedOutMessage && <LoggedOutMessage onLogin={onLogin} />}\n    </div>\n  );\n}\n\nSidebarContent.propTypes = {\n  onLogin: propTypes.func.isRequired,\n  onSignUp: propTypes.func.isRequired,\n  frameSync: propTypes.object,\n  loadAnnotationsService: propTypes.object,\n  streamer: propTypes.object,\n};\n\nSidebarContent.injectedProps = [\n  'frameSync',\n  'loadAnnotationsService',\n  'streamer',\n];\n\nexport default withServices(SidebarContent);\n",
    "import { createElement } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\nimport propTypes from 'prop-types';\nimport scrollIntoView from 'scroll-into-view';\n\nimport useStore from '../store/use-store';\n\nimport Button from './button';\nimport Slider from './slider';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef SidebarPanelProps\n * @prop {Object} [children]\n * @prop {string} [icon] - An optional icon name for display next to the panel's title\n * @prop {string} panelName -\n *   A string identifying this panel. Only one `panelName` may be active at any time.\n *   Multiple panels with the same `panelName` would be \"in sync\", opening and closing together.\n * @prop {string} title - The panel's title: rendered in its containing visual \"frame\"\n * @prop {(active: boolean) => any} [onActiveChanged] -\n *   Optional callback to invoke when this panel's active status changes\n */\n\n/**\n * Base component for a sidebar panel.\n *\n * This component provides a basic visual container for sidebar panels, as well\n * as providing a close button. Only one sidebar panel (as defined by the panel's\n * `panelName`) is active at one time.\n *\n * @param {SidebarPanelProps} props\n */\nexport default function SidebarPanel({\n  children,\n  icon = '',\n  panelName,\n  title,\n  onActiveChanged,\n}) {\n  const panelIsActive = useStore(store => store.isSidebarPanelOpen(panelName));\n  const togglePanelFn = useStore(store => store.toggleSidebarPanel);\n\n  const panelElement = useRef(/** @type {HTMLDivElement|null}*/ (null));\n  const panelWasActive = useRef(panelIsActive);\n\n  // Scroll the panel into view if it has just been opened\n  useEffect(() => {\n    if (panelWasActive.current !== panelIsActive) {\n      panelWasActive.current = panelIsActive;\n      if (panelIsActive) {\n        scrollIntoView(panelElement.current);\n      }\n      if (typeof onActiveChanged === 'function') {\n        onActiveChanged(panelIsActive);\n      }\n    }\n  }, [panelIsActive, onActiveChanged]);\n\n  const closePanel = () => {\n    togglePanelFn(panelName, false);\n  };\n\n  return (\n    <Slider visible={panelIsActive}>\n      <div className=\"sidebar-panel\" ref={panelElement}>\n        <div className=\"sidebar-panel__header\">\n          {icon && (\n            <div className=\"sidebar-panel__header-icon\">\n              <SvgIcon name={icon} title={title} />\n            </div>\n          )}\n          <h2 className=\"sidebar-panel__title u-stretch\">{title}</h2>\n          <div>\n            <Button icon=\"cancel\" buttonText=\"Close\" onClick={closePanel} />\n          </div>\n        </div>\n        <div className=\"sidebar-panel__content\">{children}</div>\n      </div>\n    </Slider>\n  );\n}\n\nSidebarPanel.propTypes = {\n  children: propTypes.any,\n  icon: propTypes.string,\n  panelName: propTypes.string.isRequired,\n  title: propTypes.string.isRequired,\n  onActiveChanged: propTypes.func,\n};\n",
    "import { createElement } from 'preact';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\n/**\n * @typedef SliderProps\n * @prop {Object} [children] - The slideable content to hide or reveal.\n * @prop {boolean} visible - Whether the content should be visible or not.\n */\n\n/**\n * A container which reveals its content when `visible` is `true` using\n * a sliding animation.\n *\n * When the content is not partially or wholly visible, it is removed from the\n * DOM using `display: none` so it does not appear in the keyboard navigation\n * order.\n *\n * Currently the only reveal/expand direction supported is top-down.\n *\n * @param {SliderProps} props\n */\nexport default function Slider({ children, visible }) {\n  const containerRef = useRef(null);\n  const [containerHeight, setContainerHeight] = useState(visible ? 'auto' : 0);\n\n  // Whether the content is currently partially or wholly visible. This is\n  // different from `visible` when collapsing as it is true until the collapse\n  // animation completes.\n  const [contentVisible, setContentVisible] = useState(visible);\n\n  // Adjust the container height when the `visible` prop changes.\n  useEffect(() => {\n    const isVisible = containerHeight !== 0;\n    if (visible === isVisible) {\n      // Do nothing after the initial mount.\n      return;\n    }\n\n    const el = containerRef.current;\n    if (visible) {\n      // Show the content synchronously so that we can measure it here.\n      el.style.display = '';\n\n      // Make content visible in future renders.\n      setContentVisible(true);\n\n      // When expanding, transition the container to the current fixed height\n      // of the content. After the transition completes, we'll reset to \"auto\"\n      // height to adapt to future content changes.\n      setContainerHeight(el.scrollHeight);\n    } else {\n      // When collapsing, immediately change the current height to a fixed height\n      // (in case it is currently \"auto\"), force a synchronous layout,\n      // then transition to 0.\n      //\n      // These steps are needed because browsers will not animate transitions\n      // from \"auto\" => \"0\" and may not animate \"auto\" => fixed height => 0\n      // if the layout tree transitions directly from \"auto\" => 0.\n      el.style.height = `${el.scrollHeight}px`;\n\n      // Force a sync layout.\n      el.getBoundingClientRect();\n\n      setContainerHeight(0);\n    }\n  }, [containerHeight, visible]);\n\n  const handleTransitionEnd = useCallback(() => {\n    if (visible) {\n      setContainerHeight('auto');\n    } else {\n      // When the collapse animation completes, stop rendering the content so\n      // that the browser has fewer nodes to render and the content is removed\n      // from keyboard navigation.\n      setContentVisible(false);\n    }\n  }, [setContainerHeight, visible]);\n\n  const isFullyVisible = containerHeight === 'auto';\n\n  return (\n    <div\n      // nb. Preact uses \"ontransitionend\" rather than \"onTransitionEnd\".\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=961193\n      //\n      // @ts-ignore\n      // eslint-disable-next-line react/no-unknown-property\n      ontransitionend={handleTransitionEnd}\n      ref={containerRef}\n      style={{\n        display: contentVisible ? '' : 'none',\n        height: containerHeight,\n\n        // When the slider is fully open, overflow is made visible so that\n        // focus rings, which may extend outside the bounds of the slider content,\n        // are visible.\n        overflow: isFullyVisible ? 'visible' : 'hidden',\n        transition: `height 0.15s ease-in`,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nSlider.propTypes = {\n  children: propTypes.any,\n  visible: propTypes.bool,\n};\n",
    "import { createElement } from 'preact';\n\nimport useStore from '../store/use-store';\n\nimport Menu from './menu';\nimport MenuItem from './menu-item';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * A drop-down menu of sorting options for a collection of annotations.\n */\nexport default function SortMenu() {\n  const actions = useStore(store => ({\n    setSortKey: store.setSortKey,\n  }));\n  // The currently-applied sort order\n  const sortKey = useStore(store => store.sortKey());\n  // All available sorting options. These change depending on current\n  // \"tab\" or context.\n  const sortKeysAvailable = useStore(store => store.sortKeys());\n\n  const menuItems = sortKeysAvailable.map(sortOption => {\n    return (\n      <MenuItem\n        key={sortOption}\n        label={sortOption}\n        onClick={() => actions.setSortKey(sortOption)}\n        isSelected={sortOption === sortKey}\n      />\n    );\n  });\n\n  const menuLabel = (\n    <span className=\"top-bar__menu-label\">\n      <SvgIcon name=\"sort\" className=\"top-bar__menu-icon\" />\n    </span>\n  );\n\n  return (\n    <div className=\"sort-menu\">\n      <Menu\n        label={menuLabel}\n        title={`Sort by ${sortKey}`}\n        align=\"right\"\n        menuIndicator={false}\n      >\n        {menuItems}\n      </Menu>\n    </div>\n  );\n}\n\nSortMenu.propTypes = {};\n",
    "import { createElement } from 'preact';\n\n/**\n * Loading indicator.\n */\nexport default function Spinner() {\n  // The `spinner__container` div only exists to center the spinner within\n  // the `<spinner>` Angular component element. Once consumers of this component\n  // have been converted to Preact, we should be able to remove this.\n  return (\n    <div className=\"spinner__container\">\n      {/* See `.spinner` CSS definition for an explanation of the nested spans. */}\n      <span className=\"spinner\">\n        <span>\n          <span />\n        </span>\n      </span>\n    </div>\n  );\n}\n\nSpinner.propTypes = {};\n",
    "import { createElement } from 'preact';\nimport { useCallback, useEffect } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport * as searchFilter from '../util/search-filter';\nimport { withServices } from '../util/service-context';\nimport useRootThread from './hooks/use-root-thread';\nimport useStore from '../store/use-store';\n\nimport ThreadList from './thread-list';\n\n/**\n * @typedef StreamContentProps\n * @prop {Object} [api] - Injected service\n * @prop {Object} [toastMessenger] - Injected service\n */\n\n/**\n * The main content of the \"stream\" route (https://hypothes.is/stream)\n *\n * @param {StreamContentProps} props\n */\nfunction StreamContent({ api, toastMessenger }) {\n  const addAnnotations = useStore(store => store.addAnnotations);\n  const annotationFetchStarted = useStore(\n    store => store.annotationFetchStarted\n  );\n  const annotationFetchFinished = useStore(\n    store => store.annotationFetchFinished\n  );\n  const clearAnnotations = useStore(store => store.clearAnnotations);\n  const currentQuery = useStore(store => store.routeParams().q);\n  const setSortKey = useStore(store => store.setSortKey);\n\n  /**\n   * Fetch annotations from the API and display them in the stream.\n   *\n   * @param {string} query - The user-supplied search query\n   */\n  const loadAnnotations = useCallback(\n    async query => {\n      const queryParams = {\n        _separate_replies: true,\n\n        // nb. There is currently no way to load anything except the first\n        // 20 matching annotations in the UI.\n        offset: 0,\n        limit: 20,\n\n        ...searchFilter.toObject(query),\n      };\n      try {\n        annotationFetchStarted();\n        const results = await api.search(queryParams);\n        addAnnotations([...results.rows, ...results.replies]);\n      } finally {\n        annotationFetchFinished();\n      }\n    },\n    [addAnnotations, annotationFetchStarted, annotationFetchFinished, api]\n  );\n\n  // Update the stream when this route is initially displayed and whenever\n  // the search query is updated.\n  useEffect(() => {\n    // Sort the stream so that the newest annotations are at the top\n    setSortKey('Newest');\n    clearAnnotations();\n    loadAnnotations(currentQuery).catch(err => {\n      toastMessenger.error(`Unable to fetch annotations: ${err.message}`);\n    });\n  }, [\n    clearAnnotations,\n    currentQuery,\n    loadAnnotations,\n    setSortKey,\n    toastMessenger,\n  ]);\n\n  const rootThread = useRootThread();\n\n  return <ThreadList thread={rootThread} />;\n}\n\nStreamContent.propTypes = {\n  api: propTypes.object,\n  toastMessenger: propTypes.object,\n};\n\nStreamContent.injectedProps = ['api', 'toastMessenger'];\n\nexport default withServices(StreamContent);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport { withServices } from '../util/service-context';\n\nimport SearchInput from './search-input';\n\n/**\n * @typedef StreamSearchInputProps\n * @prop {Object} router - Injected service\n */\n\n/**\n * Search input for the single annotation view and stream.\n *\n * This displays and updates the \"q\" query param in the URL.\n *\n * @param {StreamSearchInputProps} props\n */\nfunction StreamSearchInput({ router }) {\n  const query = useStore(store => store.routeParams().q);\n  const setQuery = query => {\n    // Re-route the user to `/stream` if they are on `/a/:id` and then set\n    // the search query.\n    router.navigate('stream', { q: query });\n  };\n\n  return (\n    <SearchInput query={query} onSearch={setQuery} alwaysExpanded={true} />\n  );\n}\n\nStreamSearchInput.propTypes = {\n  router: propTypes.object,\n};\n\nStreamSearchInput.injectedProps = ['router'];\n\nexport default withServices(StreamSearchInput);\n",
    "import { createElement } from 'preact';\nimport { useMemo, useRef, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport { withServices } from '../util/service-context';\nimport { isIE11 } from '../../shared/user-agent';\n\nimport AutocompleteList from './autocomplete-list';\nimport { normalizeKeyName } from '../../shared/browser-compatibility-utils';\nimport SvgIcon from '../../shared/components/svg-icon';\nimport useElementShouldClose from './hooks/use-element-should-close';\n\n// Global counter used to create a unique id for each instance of a TagEditor\nlet tagEditorIdCounter = 0;\n\n/**\n * @typedef TagEditorProps\n * @prop {(a: Object<'tags', string[]>) => any} onEditTags - Callback that saves the tag list.\n * @prop {string[]} tagList - The list of editable tags as strings.\n * @prop {Object} tags - Services\n */\n\n/**\n * Component to edit annotation's tags.\n *\n * Component accessibility is modeled after \"Combobox with Listbox Popup Examples\" found here:\n * https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n *\n * @param {TagEditorProps} props\n */\nfunction TagEditor({ onEditTags, tags: tagsService, tagList }) {\n  const inputEl = useRef(/** @type {HTMLInputElement|null} */ (null));\n  const [suggestions, setSuggestions] = useState(/** @type {string[]} */ ([]));\n  const [activeItem, setActiveItem] = useState(-1); // -1 is unselected\n  const [suggestionsListOpen, setSuggestionsListOpen] = useState(false);\n  const [tagEditorId] = useState(() => {\n    ++tagEditorIdCounter;\n    return `tag-editor-${tagEditorIdCounter}`;\n  });\n\n  // Set up callback to monitor outside click events to close the AutocompleteList\n  const closeWrapperRef = useRef(/** @type {HTMLElement|null} */ (null));\n  /** @ts-ignore - TODO: fix useElementShouldClose Ref types */\n  useElementShouldClose(closeWrapperRef, suggestionsListOpen, () => {\n    setSuggestionsListOpen(false);\n  });\n\n  const ie11 = useMemo(() => isIE11(), []);\n\n  /**\n   * Helper function that returns a list of suggestions less any\n   * results also found from the duplicates list.\n   *\n   * @param {string[]} suggestions - Original list of suggestions\n   * @param {string[]} duplicates - Items to be removed from the result\n   * @return {string[]}\n   */\n  const removeDuplicates = (suggestions, duplicates) => {\n    const suggestionsSet = [];\n    suggestions.forEach(suggestion => {\n      if (duplicates.indexOf(suggestion) < 0) {\n        suggestionsSet.push(suggestion);\n      }\n    });\n    return suggestionsSet.sort();\n  };\n\n  /**\n   * Get a list of suggestions returned from the tagsService\n   * reset the activeItem and open the AutocompleteList\n   */\n  const updateSuggestions = () => {\n    const value = inputEl.current.value.trim();\n    if (value === '') {\n      // If there is no input, just hide the suggestions\n      setSuggestionsListOpen(false);\n    } else {\n      // Call filter() with a query value to return all matching suggestions.\n      const suggestions = tagsService.filter(value);\n      // Remove any repeated suggestions that are already tags\n      // and set those to state.\n      setSuggestions(removeDuplicates(suggestions, tagList));\n      setSuggestionsListOpen(suggestions.length > 0);\n    }\n\n    setActiveItem(-1);\n  };\n\n  /**\n   * Handle changes to this annotation's tags\n   *\n   * @param {string[]} tagList\n   */\n  const updateTags = tagList => {\n    // update suggested tags list via service\n    tagsService.store(tagList.map(tag => ({ text: tag })));\n    onEditTags({ tags: tagList });\n  };\n\n  /**\n   * Remove a tag from this annotation.\n   *\n   * @param {string} tag\n   */\n  const removeTag = tag => {\n    const newTagList = [...tagList]; // make a copy\n    const index = newTagList.indexOf(tag);\n    newTagList.splice(index, 1);\n    updateTags(newTagList);\n  };\n\n  /**\n   * Adds a tag to the annotation equal to the value of the input field\n   * and then clears out the suggestions list and the input field.\n   *\n   * @param {string} newTag\n   */\n  const addTag = newTag => {\n    const value = newTag.trim();\n    if (value.length === 0) {\n      // don't add an empty tag\n      return;\n    }\n    if (tagList.indexOf(value) >= 0) {\n      // don't add duplicate tag\n      return;\n    }\n    updateTags([...tagList, value]);\n    setSuggestionsListOpen(false);\n    setActiveItem(-1);\n\n    const input = inputEl.current;\n    input.value = '';\n    input.focus();\n  };\n\n  /**\n   *  Update the suggestions if the user changes the value of the input\n   *\n   * @param {import(\"preact\").JSX.TargetedEvent<HTMLInputElement, InputEvent>} e\n   */\n  const handleOnInput = e => {\n    if (\n      e.inputType === 'insertText' ||\n      e.inputType === 'deleteContentBackward' ||\n      ie11 // inputType is not defined in IE 11, so trigger on any input in this case.\n    ) {\n      updateSuggestions();\n    }\n  };\n\n  /**\n   *  Callback when the user clicked one of the items in the suggestions list.\n   *  This will add a new tag.\n   *\n   * @param {string} item\n   */\n  const handleSelect = item => {\n    if (item) {\n      addTag(item);\n    }\n  };\n\n  /**\n   * Opens the AutocompleteList on focus if there is a value in the input\n   */\n  const handleFocus = () => {\n    if (inputEl.current.value.trim().length) {\n      setSuggestionsListOpen(true);\n    }\n  };\n\n  /**\n   *  Called when the user uses keyboard navigation to move\n   *  up or down the suggestions list creating a highlighted\n   *  item.\n   *\n   *  The first value in the list is an unselected value (-1).\n   *  A user can arrive at this value by pressing the up arrow back to\n   *  the beginning or the down arrow until the end.\n   *\n   * @param {number} direction - Pass 1 for the next item or -1 for the previous\n   */\n  const changeSelectedItem = direction => {\n    let nextActiveItem = activeItem + direction;\n    if (nextActiveItem < -1) {\n      nextActiveItem = suggestions.length - 1;\n    } else if (nextActiveItem >= suggestions.length) {\n      nextActiveItem = -1;\n    }\n    setActiveItem(nextActiveItem);\n  };\n\n  /**\n   * Keydown handler for keyboard navigation of the suggestions list\n   * and when the user presses \"Enter\" or \",\"\" to add a new typed item not\n   * found in the suggestions list\n   *\n   * @param {KeyboardEvent} e\n   */\n  const handleKeyDown = e => {\n    switch (normalizeKeyName(e.key)) {\n      case 'ArrowUp':\n        changeSelectedItem(-1);\n        e.preventDefault();\n        break;\n      case 'ArrowDown':\n        changeSelectedItem(1);\n        e.preventDefault();\n        break;\n      case 'Enter':\n      case ',':\n        if (activeItem === -1) {\n          // nothing selected, just add the typed text\n          addTag(/** @type {HTMLInputElement} */ (inputEl.current).value);\n        } else {\n          addTag(suggestions[activeItem]);\n        }\n        e.preventDefault();\n        break;\n      case 'Tab':\n        if (activeItem !== -1) {\n          // If there is a selected item, then allow `Tab` to behave exactly\n          // like `Enter` or `,`.\n          addTag(suggestions[activeItem]);\n          e.preventDefault();\n        } else if (suggestionsListOpen) {\n          // If there is no selected item, then allow `Tab` to add the first\n          // item in the list if the list is open.\n          addTag(suggestions[0]);\n          e.preventDefault();\n        }\n    }\n  };\n\n  // The activedescendant prop should match the activeItem's value except\n  // when its -1 (no item selected), and in this case set the activeDescendant to \"\".\n  const activeDescendant =\n    activeItem >= 0\n      ? `${tagEditorId}-autocomplete-list-item-${activeItem}`\n      : '';\n\n  return (\n    <section className=\"tag-editor\">\n      <ul\n        className=\"tag-editor__tags\"\n        aria-label=\"Suggested tags for annotation\"\n      >\n        {tagList.map(tag => {\n          return (\n            <li\n              key={`${tag}`}\n              className=\"tag-editor__item\"\n              aria-label={`Tag: ${tag}`}\n            >\n              <span lang=\"\" className=\"tag-editor__edit\">\n                {tag}\n              </span>\n              <button\n                onClick={() => {\n                  removeTag(tag);\n                }}\n                aria-label={`Remove Tag: ${tag}`}\n                title={`Remove Tag: ${tag}`}\n                className=\"tag-editor__delete\"\n              >\n                <SvgIcon name=\"cancel\" />\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n      <span\n        id={tagEditorId}\n        className=\"tag-editor__combobox-wrapper\"\n        ref={closeWrapperRef}\n        // Disabled because aria-controls must be attached to the <input> field\n        // eslint-disable-next-line jsx-a11y/role-has-required-aria-props\n        role=\"combobox\"\n        aria-expanded={suggestionsListOpen.toString()}\n        aria-owns={`${tagEditorId}-autocomplete-list`}\n        aria-haspopup=\"listbox\"\n      >\n        <input\n          onInput={handleOnInput}\n          onKeyDown={handleKeyDown}\n          onFocus={handleFocus}\n          ref={inputEl}\n          placeholder=\"Add new tags\"\n          className=\"tag-editor__input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          aria-label=\"Add tag field\"\n          aria-autocomplete=\"list\"\n          aria-activedescendant={activeDescendant}\n          aria-controls={`${tagEditorId}-autocomplete-list`}\n          dir=\"auto\"\n        />\n        <AutocompleteList\n          id={`${tagEditorId}-autocomplete-list`}\n          list={suggestions}\n          open={suggestionsListOpen}\n          onSelectItem={handleSelect}\n          itemPrefixId={`${tagEditorId}-autocomplete-list-item-`}\n          activeItem={activeItem}\n        />\n      </span>\n    </section>\n  );\n}\n\nTagEditor.propTypes = {\n  onEditTags: propTypes.func.isRequired,\n  tagList: propTypes.array.isRequired,\n  tags: propTypes.object.isRequired,\n};\n\nTagEditor.injectedProps = ['tags'];\n\nexport default withServices(TagEditor);\n",
    "import { createElement } from 'preact';\nimport { useMemo } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport { isThirdPartyUser } from '../util/account-id';\nimport { withServices } from '../util/service-context';\n\n/** @typedef {import('../../types/api').Annotation} Annotation */\n\n/**\n * @typedef TagListProps\n * @prop {Annotation} annotation - Annotation that owns the tags.\n * @prop {string[]} tags - List of tags as strings.\n * @prop {(a: string, b: Object<'tag', string>) => any} [serviceUrl] - Services\n * @prop {Object} [settings]\n */\n\n/**\n * Component to render an annotation's tags.\n * @param {TagListProps} props\n */\nfunction TagList({ annotation, serviceUrl, settings, tags }) {\n  const renderLink = useMemo(\n    // Show a link if the authority of the user is not 3rd party\n    () => !isThirdPartyUser(annotation.user, settings.authDomain),\n    [annotation, settings]\n  );\n\n  /**\n   * Returns a uri link for a specific tag name.\n   * @param {string} tag\n   * @return {string}\n   */\n  const createTagSearchURL = tag => {\n    return serviceUrl('search.tag', { tag: tag });\n  };\n\n  return (\n    <ul className=\"tag-list\" aria-label=\"Annotation tags\">\n      {tags.map(tag => (\n        <li key={tag} className=\"tag-list__item\">\n          {renderLink && (\n            <a\n              className=\"tag-list__link\"\n              href={createTagSearchURL(tag)}\n              lang=\"\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label={`Tag: ${tag}`}\n              title={`View annotations with tag: ${tag}`}\n            >\n              {tag}\n            </a>\n          )}\n          {!renderLink && (\n            <span className=\"tag-list__text\" aria-label={`Tag: ${tag}`} lang=\"\">\n              {tag}\n            </span>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nTagList.propTypes = {\n  annotation: propTypes.object.isRequired,\n  tags: propTypes.array.isRequired,\n  serviceUrl: propTypes.func,\n  settings: propTypes.object,\n};\n\nTagList.injectedProps = ['serviceUrl', 'settings'];\n\nexport default withServices(TagList);\n",
    "import classnames from 'classnames';\nimport debounce from 'lodash.debounce';\nimport { createElement } from 'preact';\nimport { useCallback, useMemo } from 'preact/hooks';\n\nimport propTypes from 'prop-types';\nimport { closest } from '../../shared/dom-element';\nimport useStore from '../store/use-store';\nimport { withServices } from '../util/service-context';\n\nimport Thread from './thread';\n\n/**\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n */\n\n/**\n * @typedef ThreadCardProps\n * @prop {Thread} thread\n * @prop {Object} frameSync - Injected service\n * @prop {MergedConfig} [settings] - Injected service\n */\n\n/**\n * A \"top-level\" `Thread`, rendered as a \"card\" in the sidebar. A `Thread`\n * renders its own child `Thread`s within itself.\n *\n * @param {ThreadCardProps} props\n */\nfunction ThreadCard({ frameSync, settings, thread }) {\n  const threadTag = thread.annotation && thread.annotation.$tag;\n  const isFocused = useStore(store => store.isAnnotationFocused(threadTag));\n  const showDocumentInfo = useStore(store => store.route() !== 'sidebar');\n  const focusThreadAnnotation = useMemo(\n    () =>\n      debounce(tag => {\n        const focusTags = tag ? [tag] : [];\n        frameSync.focusAnnotations(focusTags);\n      }, 10),\n    [frameSync]\n  );\n\n  const scrollToAnnotation = useCallback(\n    tag => {\n      frameSync.scrollToAnnotation(tag);\n    },\n    [frameSync]\n  );\n\n  /**\n   * Is the target's event an <a> or <button> element, or does it have\n   * either as an ancestor?\n   */\n  const isFromButtonOrLink = target => {\n    return !!closest(target, 'button') || !!closest(target, 'a');\n  };\n\n  return (\n    /* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n    <div\n      onClick={e => {\n        // Prevent click events intended for another action from\n        // triggering a page scroll.\n        if (!isFromButtonOrLink(e.target)) {\n          scrollToAnnotation(threadTag);\n        }\n      }}\n      onMouseEnter={() => focusThreadAnnotation(threadTag)}\n      onMouseLeave={() => focusThreadAnnotation(null)}\n      key={thread.id}\n      className={classnames('thread-card', {\n        'is-focused': isFocused,\n        'thread-card--theme-clean': settings.theme === 'clean',\n      })}\n    >\n      <Thread thread={thread} showDocumentInfo={showDocumentInfo} />\n    </div>\n  );\n}\n\nThreadCard.propTypes = {\n  thread: propTypes.object.isRequired,\n  frameSync: propTypes.object.isRequired,\n  settings: propTypes.object,\n};\n\nThreadCard.injectedProps = ['frameSync', 'settings'];\n\nexport default withServices(ThreadCard);\n",
    "import { createElement } from 'preact';\nimport { useEffect, useMemo, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\n\nimport useStore from '../store/use-store';\nimport { isHighlight } from '../util/annotation-metadata';\nimport { getElementHeightWithMargins } from '../util/dom';\nimport {\n  calculateVisibleThreads,\n  THREAD_DIMENSION_DEFAULTS,\n} from '../util/visible-threads';\n\nimport ThreadCard from './thread-card';\n\n/** @typedef {import('../util/build-thread').Thread} Thread */\n\n// The precision of the `scrollPosition` value in pixels; values will be rounded\n// down to the nearest multiple of this scale value\nconst SCROLL_PRECISION = 50;\n\nfunction getScrollContainer() {\n  const container = document.querySelector('.js-thread-list-scroll-root');\n  if (!container) {\n    throw new Error('Scroll container is missing');\n  }\n  return container;\n}\n\n/**\n * @typedef ThreadListProps\n * @prop {Thread} thread\n */\n\n/**\n * Render a list of threads.\n *\n * The thread list is \"virtualized\", meaning that only threads in or near the\n * viewport are rendered. This is critical for performance and memory usage as\n * annotations (and replies) are complex interactive components whose\n * user-defined content may include rich media such as images, audio clips,\n * embedded YouTube videos, rendered math and more.\n *\n * @param {ThreadListProps} props\n */\nfunction ThreadList({ thread }) {\n  const setForcedVisible = useStore(store => store.setForcedVisible);\n\n  // Height of the visible area of the scroll container.\n  const [scrollContainerHeight, setScrollContainerHeight] = useState(\n    getScrollContainer().clientHeight\n  );\n\n  // Scroll offset of scroll container. This is updated after the scroll\n  // container is scrolled, with debouncing to limit update frequency.\n  // These values are in multiples of `SCROLL_PRECISION` to optimize\n  // for performance.\n  const [scrollPosition, setScrollPosition] = useState(\n    getScrollContainer().scrollTop\n  );\n\n  // Map of thread ID to measured height of thread.\n  const [threadHeights, setThreadHeights] = useState({});\n\n  // ID of thread to scroll to after the next render. If the thread is not\n  // present, the value persists until it can be \"consumed\".\n  const [scrollToId, setScrollToId] = useState(\n    /** @type {string|null} */ (null)\n  );\n\n  const topLevelThreads = thread.children;\n\n  const {\n    offscreenLowerHeight,\n    offscreenUpperHeight,\n    visibleThreads,\n  } = useMemo(\n    () =>\n      calculateVisibleThreads(\n        topLevelThreads,\n        threadHeights,\n        scrollPosition,\n        scrollContainerHeight\n      ),\n    [topLevelThreads, threadHeights, scrollPosition, scrollContainerHeight]\n  );\n\n  // Get the `$tag` of the most recently created unsaved annotation.\n  const newAnnotationTag = useStore(store => {\n    // If multiple unsaved annotations exist, assume that the last one in the\n    // list is the most recently created one.\n    const newAnnotations = store\n      .unsavedAnnotations()\n      .filter(ann => !ann.id && !isHighlight(ann));\n    if (!newAnnotations.length) {\n      return null;\n    }\n    return newAnnotations[newAnnotations.length - 1].$tag;\n  });\n\n  // Scroll to newly created annotations and replies.\n  //\n  // nb. If there are multiple unsaved annotations and the newest one is saved\n  // or removed, `newAnnotationTag` will revert to the previous unsaved annotation\n  // and the thread list will scroll to that.\n  useEffect(() => {\n    if (newAnnotationTag) {\n      setForcedVisible(newAnnotationTag, true);\n      setScrollToId(newAnnotationTag);\n    }\n  }, [setForcedVisible, newAnnotationTag]);\n\n  // Effect to scroll a particular thread into view. This is mainly used to\n  // scroll a newly created annotation into view.\n  useEffect(() => {\n    if (!scrollToId) {\n      return;\n    }\n\n    const threadIndex = topLevelThreads.findIndex(t => t.id === scrollToId);\n    if (threadIndex === -1) {\n      // Thread is not currently present. The `scrollToId` will be consumed\n      // when this thread appears.\n      return;\n    }\n\n    // Clear `scrollToId` so we don't scroll again after the next render.\n    setScrollToId(null);\n\n    const getThreadHeight = thread =>\n      threadHeights[thread.id] || THREAD_DIMENSION_DEFAULTS.defaultHeight;\n\n    const yOffset = topLevelThreads\n      .slice(0, threadIndex)\n      .reduce((total, thread) => total + getThreadHeight(thread), 0);\n\n    const scrollContainer = getScrollContainer();\n    scrollContainer.scrollTop = yOffset;\n  }, [scrollToId, topLevelThreads, threadHeights]);\n\n  // Attach listeners such that whenever the scroll container is scrolled or the\n  // window resized, a recalculation of visible threads is triggered\n  useEffect(() => {\n    const scrollContainer = getScrollContainer();\n\n    const updateScrollPosition = debounce(\n      () => {\n        const exactScrollPosition = scrollContainer.scrollTop;\n        // Get scroll position to the nearest `SCROLL_PRECISION` multiple\n        const roundedScrollPosition = Math.max(\n          exactScrollPosition - (exactScrollPosition % SCROLL_PRECISION),\n          0\n        );\n        setScrollContainerHeight(scrollContainer.clientHeight);\n        setScrollPosition(roundedScrollPosition);\n      },\n      10,\n      { maxWait: 100 }\n    );\n\n    scrollContainer.addEventListener('scroll', updateScrollPosition);\n    window.addEventListener('resize', updateScrollPosition);\n\n    return () => {\n      scrollContainer.removeEventListener('scroll', updateScrollPosition);\n      window.removeEventListener('resize', updateScrollPosition);\n      updateScrollPosition.cancel();\n    };\n  }, []);\n\n  // When the set of visible threads changes, recalculate the real rendered\n  // heights of thread cards and update `threadHeights` state if there are changes.\n  useEffect(() => {\n    setThreadHeights(prevHeights => {\n      const changedHeights = {};\n      for (let { id } of visibleThreads) {\n        const threadElement = /** @type {HTMLElement} */ (document.getElementById(\n          id\n        ));\n        const height = getElementHeightWithMargins(threadElement);\n        if (height !== prevHeights[id]) {\n          changedHeights[id] = height;\n        }\n      }\n\n      // Skip update if no heights changed from previous measured values\n      // (or defaults).\n      if (Object.keys(changedHeights).length === 0) {\n        return prevHeights;\n      }\n\n      return { ...prevHeights, ...changedHeights };\n    });\n  }, [visibleThreads]);\n\n  return (\n    <div>\n      <div style={{ height: offscreenUpperHeight }} />\n      {visibleThreads.map(child => (\n        <div className=\"thread-list__card\" id={child.id} key={child.id}>\n          <ThreadCard thread={child} />\n        </div>\n      ))}\n      <div style={{ height: offscreenLowerHeight }} />\n    </div>\n  );\n}\n\nThreadList.propTypes = {\n  /** Should annotations render extra document metadata? */\n  thread: propTypes.object.isRequired,\n};\n\nexport default ThreadList;\n",
    "import classnames from 'classnames';\nimport { createElement, Fragment } from 'preact';\n\nimport propTypes from 'prop-types';\nimport useStore from '../store/use-store';\nimport { withServices } from '../util/service-context';\nimport { countHidden, countVisible } from '../util/thread';\n\nimport Annotation from './annotation';\nimport Button from './button';\nimport ModerationBanner from './moderation-banner';\n\n/** @typedef {import('../util/build-thread').Thread} Thread */\n\n/**\n * @typedef ThreadProps\n * @prop {boolean} [showDocumentInfo]\n * @prop {Thread} thread\n * @prop {Object} threadsService - Injected service\n */\n\n/**\n * A thread, which contains a single annotation at its top level, and its\n * recursively-rendered children (i.e. replies). A thread may have a parent,\n * and at any given time it may be `collapsed`.\n *\n * @param {ThreadProps} props\n */\nfunction Thread({ showDocumentInfo = false, thread, threadsService }) {\n  const setExpanded = useStore(store => store.setExpanded);\n\n  // Only render this thread's annotation if it exists and the thread is `visible`\n  const showAnnotation = thread.annotation && thread.visible;\n\n  // Render this thread's replies only if the thread is expanded\n  const showChildren = !thread.collapsed;\n\n  // Applied search filters will \"hide\" non-matching threads. If there are\n  // hidden items within this thread, provide a control to un-hide them.\n  const showHiddenToggle = countHidden(thread) > 0;\n\n  // Render a control to expand/collapse the current thread if this thread has\n  // a parent (i.e. is a reply thread)\n  const showThreadToggle = !!thread.parent;\n  const toggleIcon = thread.collapsed ? 'collapsed' : 'expand-menu';\n  const toggleTitle = thread.collapsed ? 'Expand replies' : 'Collapse replies';\n\n  // If rendering child threads, only render those that have at least one\n  // visible item within them—i.e. don't render empty/totally-hidden threads.\n  const visibleChildren = thread.children.filter(\n    child => countVisible(child) > 0\n  );\n\n  const onToggleReplies = () => setExpanded(thread.id, !!thread.collapsed);\n  return (\n    <section\n      className={classnames('thread', {\n        'thread--reply': thread.depth > 0,\n        'is-collapsed': thread.collapsed,\n      })}\n    >\n      {showThreadToggle && (\n        <div className=\"thread__collapse\">\n          <Button\n            className=\"thread__collapse-button\"\n            icon={toggleIcon}\n            title={toggleTitle}\n            onClick={onToggleReplies}\n          />\n        </div>\n      )}\n\n      <div className=\"thread__content\">\n        {showAnnotation && (\n          <Fragment>\n            <ModerationBanner annotation={thread.annotation} />\n            <Annotation\n              annotation={thread.annotation}\n              replyCount={thread.replyCount}\n              showDocumentInfo={showDocumentInfo}\n              threadIsCollapsed={thread.collapsed}\n            />\n          </Fragment>\n        )}\n\n        {!thread.annotation && (\n          <div className=\"thread__unavailable-message\">\n            <em>Message not available.</em>\n          </div>\n        )}\n\n        {showHiddenToggle && (\n          <Button\n            buttonText={`Show ${countHidden(thread)} more in conversation`}\n            className=\"thread__hidden-toggle-button\"\n            onClick={() => threadsService.forceVisible(thread)}\n          />\n        )}\n\n        {showChildren && (\n          <ul className=\"thread__children\">\n            {visibleChildren.map(child => (\n              <li key={child.id}>\n                <Thread thread={child} threadsService={threadsService} />\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </section>\n  );\n}\n\nThread.propTypes = {\n  showDocumentInfo: propTypes.bool,\n  thread: propTypes.object.isRequired,\n\n  // Injected\n  threadsService: propTypes.object.isRequired,\n};\n\nThread.injectedProps = ['threadsService'];\n\nexport default withServices(Thread);\n",
    "import { createElement } from 'preact';\nimport { useEffect, useMemo, useState } from 'preact/hooks';\nimport propTypes from 'prop-types';\n\nimport { format as formatDate } from '../util/date';\nimport { decayingInterval, toFuzzyString } from '../util/time';\n\n/**\n * @typedef TimestampProps\n * @prop {string} [className] - Custom class name for the anchor/span element\n * @prop {string} [href] - Link destination\n * @prop {string} timestamp - The timestamp as an ISO 8601 date string\n */\n\n/**\n * Display a relative timestamp (eg. '6 minutes ago') as static text or a link.\n *\n * @param {TimestampProps} props\n *\n * The timestamp automatically refreshes at an appropriate frequency.\n */\nexport default function Timestamp({ className, href, timestamp }) {\n  // \"Current\" time, used when calculating the relative age of `timestamp`.\n  const [now, setNow] = useState(new Date());\n\n  // Fuzzy, relative timestamp (eg. '6 days ago')\n  const relativeTimestamp = useMemo(\n    () => toFuzzyString(timestamp ? new Date(timestamp) : null, now),\n    [timestamp, now]\n  );\n\n  // Absolute timestamp (eg. 'Tue 22nd Dec 2015, 16:00')\n  const absoluteTimestamp = useMemo(() => formatDate(new Date(timestamp)), [\n    timestamp,\n  ]);\n\n  // Refresh relative timestamp, at a frequency appropriate for the age.\n  useEffect(() => {\n    const cancelRefresh = decayingInterval(timestamp, () => setNow(new Date()));\n    return cancelRefresh;\n  }, [timestamp]);\n\n  return href ? (\n    <a\n      className={className}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      title={absoluteTimestamp}\n      href={href}\n    >\n      {relativeTimestamp}\n    </a>\n  ) : (\n    <span className={className} title={absoluteTimestamp}>\n      {relativeTimestamp}\n    </span>\n  );\n}\n\nTimestamp.propTypes = {\n  className: propTypes.string,\n  href: propTypes.string,\n  timestamp: propTypes.string.isRequired,\n};\n",
    "import classnames from 'classnames';\nimport { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport useStore from '../store/use-store';\nimport { withServices } from '../util/service-context';\n\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef {import('../store/modules/toast-messages').ToastMessage} ToastMessage\n */\n\n/**\n * @typedef ToastMessageProps\n * @prop {ToastMessage} message - The message object to render\n * @prop {(id: string) => any} onDismiss\n */\n\n/**\n * An individual toast message—a brief and transient success or error message.\n * The message may be dismissed by clicking on it.\n * Otherwise, the `toastMessenger` service handles removing messages after a\n * certain amount of time.\n *\n * @param {ToastMessageProps} props\n */\nfunction ToastMessage({ message, onDismiss }) {\n  // Capitalize the message type for prepending\n  const prefix = message.type.charAt(0).toUpperCase() + message.type.slice(1);\n  const iconName = message.type === 'notice' ? 'cancel' : message.type;\n  /**\n   * a11y linting is disabled here: There is a click-to-remove handler on a\n   * non-interactive element. This allows sighted users to get the toast message\n   * out of their way if it interferes with interacting with the underlying\n   * components. This shouldn't pose the same irritation to users with screen-\n   * readers as the rendered toast messages shouldn't impede interacting with\n   * the underlying document.\n   */\n  return (\n    /* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions */\n    <li\n      className={classnames('toast-message-container', {\n        'is-dismissed': message.isDismissed,\n      })}\n      onClick={() => onDismiss(message.id)}\n    >\n      <div\n        className={classnames(\n          'toast-message',\n          `toast-message--${message.type}`\n        )}\n      >\n        <div className=\"toast-message__type\">\n          <SvgIcon name={iconName} className=\"toast-message__icon\" />\n        </div>\n        <div className=\"toast-message__message\">\n          <strong>{prefix}: </strong>\n          {message.message}\n          {message.moreInfoURL && (\n            <div className=\"toast-message__link\">\n              <a\n                href={message.moreInfoURL}\n                onClick={\n                  event =>\n                    event.stopPropagation() /* consume the event so that it does not dismiss the message */\n                }\n                target=\"_new\"\n              >\n                More info\n              </a>\n            </div>\n          )}\n        </div>\n      </div>\n    </li>\n  );\n}\n\nToastMessage.propTypes = {\n  message: propTypes.object.isRequired,\n  onDismiss: propTypes.func,\n};\n\n/**\n * @typedef ToastMessagesProps\n * @prop {Object} toastMessenger - Injected service\n */\n\n/**\n * A collection of toast messages. These are rendered within an `aria-live`\n * region for accessibility with screen readers.\n *\n * @param {ToastMessagesProps} props\n */\nfunction ToastMessages({ toastMessenger }) {\n  const messages = useStore(store => store.getToastMessages());\n  return (\n    <div>\n      <ul\n        aria-live=\"polite\"\n        aria-relevant=\"additions\"\n        className=\"toast-messages\"\n      >\n        {messages.map(message => (\n          <ToastMessage\n            message={message}\n            key={message.id}\n            onDismiss={toastMessenger.dismiss}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nToastMessages.propTypes = {\n  toastMessenger: propTypes.object.isRequired,\n};\n\nToastMessages.injectedProps = ['toastMessenger'];\n\nexport default withServices(ToastMessages);\n",
    "import classnames from 'classnames';\nimport { Fragment, createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport bridgeEvents from '../../shared/bridge-events';\nimport serviceConfig from '../service-config';\nimport useStore from '../store/use-store';\nimport uiConstants from '../ui-constants';\nimport isThirdPartyService from '../util/is-third-party-service';\nimport { withServices } from '../util/service-context';\nimport { applyTheme } from '../util/theme';\n\nimport Button from './button';\nimport GroupList from './group-list';\nimport SearchInput from './search-input';\nimport SortMenu from './sort-menu';\nimport StreamSearchInput from './stream-search-input';\nimport UserMenu from './user-menu';\n\n/**\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n * @typedef {import('../components/user-menu').AuthState} AuthState\n * @typedef {import('../../shared/bridge').default} Bridge\n */\n\n/**\n * @typedef TopBarProps\n * @prop {AuthState} [auth]\n * @prop {Bridge} bridge\n * @prop {boolean} [isSidebar] - Flag indicating whether the app is the sidebar or a top-level page.\n * @prop {() => any} [onLogin] - Callback invoked when user clicks \"Login\" button.\n * @prop {() => any} [onLogout] - Callback invoked when user clicks \"Logout\" action in account menu.\n * @prop {() => any} [onSignUp] - Callback invoked when user clicks \"Sign up\" button.\n * @prop {MergedConfig} [settings]\n * @prop {Object} [streamer]\n */\n\n/**\n * The toolbar which appears at the top of the sidebar providing actions\n * to switch groups, view account information, sort/filter annotations etc.\n */\nfunction TopBar({\n  auth,\n  bridge,\n  isSidebar,\n  onLogin,\n  onLogout,\n  onSignUp,\n  settings,\n  streamer,\n}) {\n  const useCleanTheme = settings.theme === 'clean';\n  const showSharePageButton = !isThirdPartyService(settings);\n  const loginLinkStyle = applyTheme(['accentColor'], settings);\n\n  const filterQuery = useStore(store => store.filterQuery());\n  const setFilterQuery = useStore(store => store.setFilterQuery);\n\n  const pendingUpdateCount = useStore(store => store.pendingUpdateCount());\n\n  const togglePanelFn = useStore(store => store.toggleSidebarPanel);\n\n  const applyPendingUpdates = () => streamer.applyPendingUpdates();\n\n  const toggleSharePanel = () => {\n    togglePanelFn(uiConstants.PANEL_SHARE_ANNOTATIONS);\n  };\n\n  const currentActivePanel = useStore(\n    store => store.getState().sidebarPanels.activePanelName\n  );\n\n  /**\n   * Open the help panel, or, if a service callback is configured to handle\n   * help requests, fire a relevant event instead\n   */\n  const requestHelp = () => {\n    const service = serviceConfig(settings);\n    if (service && service.onHelpRequestProvided) {\n      bridge.call(bridgeEvents.HELP_REQUESTED);\n    } else {\n      togglePanelFn(uiConstants.PANEL_HELP);\n    }\n  };\n\n  const loginControl = (\n    <Fragment>\n      {auth.status === 'unknown' && (\n        <span className=\"top-bar__login-links\">⋯</span>\n      )}\n      {auth.status === 'logged-out' && (\n        <span className=\"top-bar__login-links\">\n          <Button\n            className=\"top-bar__login-button\"\n            buttonText=\"Sign up\"\n            onClick={onSignUp}\n            style={loginLinkStyle}\n          />{' '}\n          /\n          <Button\n            className=\"top-bar__login-button\"\n            buttonText=\"Log in\"\n            onClick={onLogin}\n            style={loginLinkStyle}\n          />\n        </span>\n      )}\n      {auth.status === 'logged-in' && (\n        <UserMenu auth={auth} onLogout={onLogout} />\n      )}\n    </Fragment>\n  );\n\n  return (\n    <div\n      className={classnames('top-bar', useCleanTheme && 'top-bar--theme-clean')}\n    >\n      {/* Single-annotation and stream views. */}\n      {!isSidebar && (\n        <div className=\"top-bar__inner content\">\n          <StreamSearchInput />\n          <div className=\"u-stretch\" />\n          <Button\n            className=\"top-bar__icon-button\"\n            icon=\"help\"\n            isExpanded={currentActivePanel === uiConstants.PANEL_HELP}\n            onClick={requestHelp}\n            title=\"Help\"\n          />\n          {loginControl}\n        </div>\n      )}\n      {/* Sidebar view */}\n      {isSidebar && (\n        <div className=\"top-bar__inner content\">\n          <GroupList className=\"GroupList\" auth={auth} />\n          <div className=\"u-stretch\" />\n          {pendingUpdateCount > 0 && (\n            <Button\n              className=\"top-bar__icon-button top-bar__icon-button--refresh\"\n              icon=\"refresh\"\n              onClick={applyPendingUpdates}\n              title={`Show ${pendingUpdateCount} new/updated ${\n                pendingUpdateCount === 1 ? 'annotation' : 'annotations'\n              }`}\n            />\n          )}\n          <SearchInput query={filterQuery || null} onSearch={setFilterQuery} />\n          <SortMenu />\n          {showSharePageButton && (\n            <Button\n              className=\"top-bar__icon-button\"\n              icon=\"share\"\n              isExpanded={\n                currentActivePanel === uiConstants.PANEL_SHARE_ANNOTATIONS\n              }\n              onClick={toggleSharePanel}\n              title=\"Share annotations on this page\"\n            />\n          )}\n          <Button\n            className=\"top-bar__icon-button\"\n            icon=\"help\"\n            isExpanded={currentActivePanel === uiConstants.PANEL_HELP}\n            onClick={requestHelp}\n            title=\"Help\"\n          />\n          {loginControl}\n        </div>\n      )}\n    </div>\n  );\n}\n\nTopBar.propTypes = {\n  auth: propTypes.shape({\n    status: propTypes.string.isRequired,\n    // Additional properties when user is logged in.\n    displayName: propTypes.string,\n    userid: propTypes.string,\n    username: propTypes.string,\n  }),\n  bridge: propTypes.object.isRequired,\n  isSidebar: propTypes.bool,\n  onLogin: propTypes.func,\n  onLogout: propTypes.func,\n  onSignUp: propTypes.func,\n  settings: propTypes.object,\n  streamer: propTypes.object,\n};\n\nTopBar.injectedProps = ['bridge', 'settings', 'streamer'];\n\nexport default withServices(TopBar);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport isThirdPartyService from '../util/is-third-party-service';\nimport { withServices } from '../util/service-context';\n\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * Subcomponent: an \"instruction\" within the tutorial step that includes an\n * icon and a \"command\" associated with that icon. Encapsulating these together\n * allows for styling to keep them from having a line break between them.\n */\nfunction TutorialInstruction({ commandName, iconName }) {\n  return (\n    <span className=\"tutorial__instruction\">\n      <SvgIcon name={iconName} inline={true} className=\"tutorial__icon\" />\n      <em>{commandName}</em>\n    </span>\n  );\n}\n\nTutorialInstruction.propTypes = {\n  /* the name of the \"command\" the instruction represents, e.g. \"Annotate\" */\n  commandName: propTypes.string.isRequired,\n  /* the name of the SVGIcon to display with this instruction */\n  iconName: propTypes.string.isRequired,\n};\n\n/**\n * Tutorial for using the sidebar app\n */\nfunction Tutorial({ settings }) {\n  const canCreatePrivateGroups = !isThirdPartyService(settings);\n  return (\n    <ol className=\"tutorial__list\">\n      <li className=\"tutorial__item\">\n        To create an annotation, select text and then select the{' '}\n        <TutorialInstruction iconName=\"annotate\" commandName=\"Annotate\" />{' '}\n        button.\n      </li>\n      <li className=\"tutorial__item\">\n        To create a highlight (\n        <a\n          href=\"https://web.hypothes.is/help/why-are-highlights-private-by-default/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          visible only to you\n        </a>\n        ), select text and then select the{' '}\n        <TutorialInstruction iconName=\"highlight\" commandName=\"Highlight\" />{' '}\n        button.\n      </li>\n      {canCreatePrivateGroups && (\n        <li className=\"tutorial__item\">\n          To annotate in a private group, select the group from the groups\n          dropdown. Don&apos;t see your group? Ask the group creator to send a{' '}\n          <a\n            href=\"https://web.hypothes.is/help/how-to-join-a-private-group/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            join link\n          </a>\n          ).\n        </li>\n      )}\n      <li className=\"tutorial__item\">\n        To reply to an annotation, select the{' '}\n        <TutorialInstruction iconName=\"reply\" commandName=\"Reply\" /> button.\n      </li>\n    </ol>\n  );\n}\n\nTutorial.propTypes = {\n  settings: propTypes.object.isRequired,\n};\n\nTutorial.injectedProps = ['settings'];\n\nexport default withServices(Tutorial);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport bridgeEvents from '../../shared/bridge-events';\nimport serviceConfig from '../service-config';\nimport { isThirdPartyUser } from '../util/account-id';\nimport { withServices } from '../util/service-context';\n\nimport Menu from './menu';\nimport MenuItem from './menu-item';\nimport MenuSection from './menu-section';\nimport SvgIcon from '../../shared/components/svg-icon';\n\n/**\n * @typedef {import('../services/service-url').ServiceUrlGetter} ServiceUrlGetter\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n * /\n\n/**\n * @typedef AuthState\n * @prop {'logged-in'|'logged-out'} status\n * @prop {string} [displayName]\n * @prop {string} [userid]\n * @prop {string} [username]\n * @prop {string} [provider]\n */\n\n/**\n * @typedef UserMenuProps\n * @prop {AuthState} auth - object representing authenticated user and auth status\n * @prop {() => any} onLogout - onClick callback for the \"log out\" button\n * @prop {Object} bridge\n * @prop {ServiceUrlGetter} serviceUrl\n * @prop {MergedConfig} settings\n */\n\n/**\n * A menu with user and account links.\n *\n * This menu will contain different items depending on service configuration,\n * context and whether the user is first- or third-party.\n *\n * @param {UserMenuProps} props\n */\nfunction UserMenu({ auth, bridge, onLogout, serviceUrl, settings }) {\n  const isThirdParty = isThirdPartyUser(auth.userid, settings.authDomain);\n  const service = serviceConfig(settings);\n\n  const serviceSupports = feature => service && !!service[feature];\n\n  const isSelectableProfile =\n    !isThirdParty || serviceSupports('onProfileRequestProvided');\n  const isLogoutEnabled =\n    !isThirdParty || serviceSupports('onLogoutRequestProvided');\n\n  const onProfileSelected = () =>\n    isThirdParty && bridge.call(bridgeEvents.PROFILE_REQUESTED);\n\n  // Generate dynamic props for the profile <MenuItem> component\n  const profileItemProps = (() => {\n    const props = {};\n    if (isSelectableProfile) {\n      if (!isThirdParty) {\n        props.href = serviceUrl('user', { user: auth.username });\n      }\n      props.onClick = onProfileSelected;\n    }\n    return props;\n  })();\n\n  const menuLabel = (\n    <span className=\"top-bar__menu-label\">\n      <SvgIcon name=\"profile\" className=\"top-bar__menu-icon\" />\n    </span>\n  );\n  return (\n    <div className=\"user-menu\">\n      <Menu label={menuLabel} title={auth.displayName} align=\"right\">\n        <MenuSection>\n          <MenuItem\n            label={auth.displayName}\n            isDisabled={!isSelectableProfile}\n            {...profileItemProps}\n          />\n          {!isThirdParty && (\n            <MenuItem\n              label=\"Account settings\"\n              href={serviceUrl('account.settings')}\n            />\n          )}\n        </MenuSection>\n        {isLogoutEnabled && (\n          <MenuSection>\n            <MenuItem label=\"Log out\" onClick={onLogout} />\n          </MenuSection>\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nUserMenu.propTypes = {\n  auth: propTypes.object.isRequired,\n  onLogout: propTypes.func.isRequired,\n  bridge: propTypes.object.isRequired,\n  serviceUrl: propTypes.func.isRequired,\n  settings: propTypes.object.isRequired,\n};\n\nUserMenu.injectedProps = ['bridge', 'serviceUrl', 'settings'];\n\nexport default withServices(UserMenu);\n",
    "import { createElement } from 'preact';\nimport propTypes from 'prop-types';\n\nimport { copyText } from '../util/copy-to-clipboard';\nimport { withServices } from '../util/service-context';\n\nimport Button from './button';\n\n/**\n * @typedef VersionInfoProps\n * @prop {import('../util/version-data').default} versionData - Object with version information\n * @prop {Object} toastMessenger - Injected service\n */\n\n/**\n * Display current client version info\n *\n * @param {VersionInfoProps} props\n */\nfunction VersionInfo({ toastMessenger, versionData }) {\n  const copyVersionData = () => {\n    try {\n      copyText(versionData.asFormattedString());\n      toastMessenger.success('Copied version info to clipboard');\n    } catch (err) {\n      toastMessenger.error('Unable to copy version info');\n    }\n  };\n\n  return (\n    <div className=\"u-vertical-rhythm\">\n      <dl className=\"version-info\">\n        <dt className=\"version-info__key\">Version</dt>\n        <dd className=\"version-info__value\">{versionData.version}</dd>\n        <dt className=\"version-info__key\">User Agent</dt>\n        <dd className=\"version-info__value\">{versionData.userAgent}</dd>\n        <dt className=\"version-info__key\">URL</dt>\n        <dd className=\"version-info__value\">{versionData.url}</dd>\n        <dt className=\"version-info__key\">Fingerprint</dt>\n        <dd className=\"version-info__value\">{versionData.fingerprint}</dd>\n        <dt className=\"version-info__key\">Account</dt>\n        <dd className=\"version-info__value\">{versionData.account}</dd>\n        <dt className=\"version-info__key\">Date</dt>\n        <dd className=\"version-info__value\">{versionData.timestamp}</dd>\n      </dl>\n      <div className=\"u-layout-row--justify-center\">\n        <Button\n          buttonText=\"Copy version details\"\n          onClick={copyVersionData}\n          icon=\"copy\"\n        />\n      </div>\n    </div>\n  );\n}\n\nVersionInfo.propTypes = {\n  versionData: propTypes.object.isRequired,\n  toastMessenger: propTypes.object.isRequired,\n};\n\nVersionInfo.injectedProps = ['toastMessenger'];\n\nexport default withServices(VersionInfo);\n",
    "import warnOnce from '../shared/warn-once';\n\n// Array to keep track of pre-start requests\nlet preStartQueue = [];\n\n/**\n * Return the mapped methods that can be called remotely via this server.\n *\n * @param {Object} store - The global store\n * @return {Object}\n */\nconst registeredMethods = store => {\n  return {\n    changeFocusModeUser: store.changeFocusModeUser,\n  };\n};\n\n/**\n * Return true if `data` \"looks like\" a JSON-RPC message.\n *\n * @param {any} data\n */\nfunction isJsonRpcMessage(data) {\n  // eslint-disable-next-line eqeqeq\n  if (data == null || typeof data !== 'object') {\n    return false;\n  }\n  return data.jsonrpc === '2.0';\n}\n\n/**\n * Begin responding to JSON-RPC requests from frames on other origins.\n *\n * Register a window.postMessage() event listener that receives and responds to\n * JSON-RPC requests sent by frames on other origins using postMessage() as the\n * transport layer.\n *\n * Only frames whose origin is in the rpcAllowedOrigins config setting will be\n * responded to.\n *\n * This is a very partial implementation of a JSON-RPC 2.0 server:\n *\n * http://www.jsonrpc.org/specification\n *\n * The only part that we support so far is receiving JSON-RPC 2.0 requests (not\n * notifications) and sending back a successful \"ok\" response.\n *\n * All methods called upon must be mapped in the `registeredMethods` function.\n */\n// @ngInject\nexport function startServer(store, settings, $window) {\n  const methods = registeredMethods(store);\n\n  // Process the pre-start incoming RPC requests\n  preStartQueue.forEach(event => {\n    receiveMessage(event);\n  });\n  // Clear the queue and remove the preStartMessageListener\n  preStartQueue = [];\n  window.removeEventListener('message', preStartMessageListener);\n\n  // Start listening to new RPC requests\n  $window.addEventListener('message', receiveMessage);\n\n  function receiveMessage(event) {\n    let allowedOrigins = settings.rpcAllowedOrigins || [];\n\n    if (!isJsonRpcMessage(event.data)) {\n      return;\n    }\n\n    if (!allowedOrigins.includes(event.origin)) {\n      warnOnce(\n        `Ignoring JSON-RPC request from non-whitelisted origin ${event.origin}`\n      );\n      return;\n    }\n\n    // The entire JSON-RPC request object is contained in the postMessage()\n    // data param.\n    let jsonRpcRequest = event.data;\n\n    event.source.postMessage(jsonRpcResponse(jsonRpcRequest), event.origin);\n  }\n\n  /** Return a JSON-RPC response to the given JSON-RPC request object. */\n  function jsonRpcResponse(request) {\n    const method = methods[request.method];\n\n    // Return an error response if the method name is not registered with\n    // registeredMethods.\n    if (method === undefined) {\n      return {\n        jsonrpc: '2.0',\n        id: request.id,\n        error: { code: -32601, message: 'Method not found' },\n      };\n    }\n\n    // Call the method and return the result response.\n    if (request.params) {\n      method(...request.params);\n    } else {\n      method();\n    }\n    return { jsonrpc: '2.0', result: 'ok', id: request.id };\n  }\n}\n\n/**\n * Queues all incoming RPC requests so they can be handled later.\n *\n * @param {MessageEvent} event - RPC event payload\n */\nfunction preStartMessageListener(event) {\n  preStartQueue.push(event);\n}\n\n/**\n * Start listening to incoming RPC requests right away so they don't timeout. These\n * requests are saved until the server starts up and then they can be handled accordingly.\n *\n * Why?\n *\n * This allows the client to fetch its config from the parent app frame and potentially\n * receive new unsolicited incoming requests that the parent app may send before this\n * RPC server starts.\n *\n * @param {Window} window_ - Test seam\n */\nexport function preStartServer(window_ = window) {\n  window_.addEventListener('message', preStartMessageListener);\n}\n",
    "// @ts-nocheck - The `ga` property is unknown.\n\nlet loaded = false;\n\nexport default function loadGoogleAnalytics(trackingId) {\n  // small measure to make we do not accidentally\n  // load the analytics scripts more than once\n  if (loaded) {\n    return;\n  }\n\n  loaded = true;\n\n  /* eslint-disable */\n\n  // Google Analytics snippet to load the analytics script\n  (function (i, s, o, g, r, a, m) {\n    i['GoogleAnalyticsObject'] = r;\n    (i[r] =\n      i[r] ||\n      function () {\n        (i[r].q = i[r].q || []).push(arguments);\n      }),\n      (i[r].l = 1 * new Date());\n    (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);\n    a.async = 1;\n    a.src = g;\n    m.parentNode.insertBefore(a, m);\n  })(\n    window,\n    document,\n    'script',\n    'https://www.google-analytics.com/analytics.js',\n    'ga'\n  );\n\n  ga('create', trackingId, 'auto');\n\n  // overrides helper that requires http or https protocols.\n  // obvious issue when it comes to extensions with protocols\n  // like \"chrome-extension://\" but isn't a huge need for us\n  // anywhere else as well.\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/tasks#disabling\n  ga('set', 'checkProtocolTask', null);\n\n  // anonymize collected IP addresses for GDPR\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/ip-anonymization\n  ga('set', 'anonymizeIp', true);\n\n  /* eslint-enable */\n}\n",
    "import serviceConfig from './service-config';\n\n/**\n * Function that returns apiUrl from the settings object.\n *\n * @param {object} settings - The settings object\n * @returns {string} The apiUrl from the service or the default apiUrl from the settings\n * @throws {Error} If the settings has a service but the service doesn't have an apiUrl\n *\n */\nexport default function getApiUrl(settings) {\n  const service = serviceConfig(settings);\n\n  if (service) {\n    // If the host page contains a service setting then the client should default to\n    // using that apiUrl.\n    if (service.apiUrl) {\n      return service.apiUrl;\n    } else {\n      throw new Error('Service should contain an apiUrl value.');\n    }\n  }\n  return settings.apiUrl;\n}\n",
    "import * as queryString from 'query-string';\nimport {\n  toBoolean,\n  toInteger,\n  toObject,\n  toString,\n} from '../shared/type-coercions';\n\n/** @typedef {import('../types/config').HostConfig} HostConfig */\n\n/**\n * Return the app configuration specified by the frame embedding the Hypothesis\n * client.\n *\n * @return {HostConfig}\n */\nexport default function hostPageConfig(window) {\n  const configStr = window.location.hash.slice(1);\n  const configJSON = queryString.parse(configStr).config;\n  const config = JSON.parse(configJSON || '{}');\n\n  // Known configuration parameters which we will import from the host page.\n  // Note that since the host page is untrusted code, the filtering needs to\n  // be done here.\n  const paramWhiteList = [\n    // Direct-linked annotation ID\n    'annotations',\n\n    // Direct-linked group ID\n    'group',\n\n    // Default query passed by url\n    'query',\n\n    // Config param added by the extension, Via etc.  indicating how Hypothesis\n    // was added to the page.\n    'appType',\n\n    // Config params documented at\n    // https://h.readthedocs.io/projects/client/en/latest/publishers/config/\n    'openSidebar',\n    'showHighlights',\n    'services',\n    'branding',\n\n    // New note button override.\n    // This should be removed once new note button is enabled for everybody.\n    'enableExperimentalNewNoteButton',\n\n    // Forces the sidebar to filter annotations to a single user.\n    'focus',\n\n    // Fetch config from a parent frame.\n    'requestConfigFromFrame',\n\n    // Theme which can either be specified as 'clean'.\n    // If nothing is the specified the classic look is applied.\n    'theme',\n\n    'usernameUrl',\n  ];\n\n  // We need to coerce incoming values from the host config for 2 reasons:\n  //\n  // 1. New versions of via may no longer support passing any type other than\n  // string and our client is set up to expect values that are in fact not a\n  // string in some cases. This will help cast these values to the expected\n  // type if they can be.\n  //\n  // 2. A publisher of our sidebar could accidentally pass un-sanitized values\n  // into the config and this ensures they safely work downstream even if they\n  // are incorrect.\n  //\n  // Currently we are only handling the following config values do to the fact\n  // that via3 will soon discontinue passing boolean types or integer types.\n  //  - requestConfigFromFrame\n  //  - openSidebar\n  //\n  // It is assumed we should expand this list and coerce and eventually\n  // even validate all such config values.\n  // See https://github.com/hypothesis/client/issues/1968\n  const coercions = {\n    openSidebar: toBoolean,\n    requestConfigFromFrame: value => {\n      if (typeof value === 'string') {\n        // Legacy `requestConfigFromFrame` value which holds only the origin.\n        return value;\n      }\n      const objectVal = toObject(value);\n      return {\n        origin: toString(objectVal.origin),\n        ancestorLevel: toInteger(objectVal.ancestorLevel),\n      };\n    },\n  };\n\n  return Object.keys(config).reduce(function (result, key) {\n    if (paramWhiteList.indexOf(key) !== -1) {\n      // Ignore `null` values as these indicate a default value.\n      // In this case the config value set in the sidebar app HTML config is\n      // used.\n      if (config[key] !== null) {\n        if (coercions[key]) {\n          // If a coercion method exists, pass it through\n          result[key] = coercions[key](config[key]);\n        } else {\n          result[key] = config[key];\n        }\n      }\n    }\n    return result;\n  }, {});\n}\n",
    "// @ts-nocheck - TS doesn't understand `require('.../icon.svg')`\n\n/**\n * Set of icons used by the sidebar application via the `SvgIcon`\n * component.\n */\nexport default {\n  add: require('../images/icons/add.svg'),\n  annotate: require('../images/icons/annotate.svg'),\n  'arrow-left': require('../images/icons/arrow-left.svg'),\n  'arrow-right': require('../images/icons/arrow-right.svg'),\n  cancel: require('../images/icons/cancel.svg'),\n  'caret-right': require('../images/icons/caret-right.svg'),\n  'cc-std': require('../images/icons/cc-std.svg'),\n  'cc-zero': require('../images/icons/cc-zero.svg'),\n  'collapse-menu': require('../images/icons/collapse-menu.svg'),\n  collapsed: require('../images/icons/collapsed.svg'),\n  copy: require('../images/icons/copy.svg'),\n  cursor: require('../images/icons/cursor.svg'),\n  edit: require('../images/icons/edit.svg'),\n  email: require('../images/icons/email.svg'),\n  'expand-menu': require('../images/icons/expand-menu.svg'),\n  error: require('../images/icons/cancel.svg'),\n  external: require('../images/icons/external.svg'),\n  facebook: require('../images/icons/facebook.svg'),\n  flag: require('../images/icons/flag.svg'),\n  'flag--active': require('../images/icons/flag--active.svg'),\n  'format-bold': require('../images/icons/format-bold.svg'),\n  'format-functions': require('../images/icons/format-functions.svg'),\n  'format-italic': require('../images/icons/format-italic.svg'),\n  'format-list-numbered': require('../images/icons/format-list-numbered.svg'),\n  'format-list-unordered': require('../images/icons/format-list-unordered.svg'),\n  'format-quote': require('../images/icons/format-quote.svg'),\n  groups: require('../images/icons/groups.svg'),\n  help: require('../images/icons/help.svg'),\n  highlight: require('../images/icons/highlight.svg'),\n  image: require('../images/icons/image.svg'),\n  leave: require('../images/icons/leave.svg'),\n  link: require('../images/icons/link.svg'),\n  lock: require('../images/icons/lock.svg'),\n  logo: require('../images/icons/logo.svg'),\n  pointer: require('../images/icons/pointer.svg'),\n  profile: require('../images/icons/profile.svg'),\n  public: require('../images/icons/public.svg'),\n  refresh: require('../images/icons/refresh.svg'),\n  restricted: require('../images/icons/restricted.svg'),\n  reply: require('../images/icons/reply.svg'),\n  search: require('../images/icons/search.svg'),\n  share: require('../images/icons/share.svg'),\n  success: require('../images/icons/check.svg'),\n  sort: require('../images/icons/sort.svg'),\n  trash: require('../images/icons/trash.svg'),\n  twitter: require('../images/icons/twitter.svg'),\n};\n",
    "/* global process */\n\nimport { jsonConfigsFrom } from '../shared/settings';\nimport * as rendererOptions from '../shared/renderer-options';\n\nimport {\n  startServer as startRPCServer,\n  preStartServer as preStartRPCServer,\n} from './cross-origin-rpc.js';\nimport addAnalytics from './ga';\nimport disableOpenerForExternalLinks from './util/disable-opener-for-external-links';\nimport { fetchConfig } from './util/fetch-config';\nimport * as sentry from './util/sentry';\n\n// Read settings rendered into sidebar app HTML by service/extension.\nconst appConfig = /** @type {import('../types/config').SidebarConfig} */ (jsonConfigsFrom(\n  document\n));\n\nif (appConfig.sentry) {\n  // Initialize Sentry. This is required at the top of this file\n  // so that it happens early in the app's startup flow\n  sentry.init(appConfig.sentry);\n}\n\n// Prevent tab-jacking.\ndisableOpenerForExternalLinks(document.body);\n\n// Load polyfill for :focus-visible pseudo-class.\nimport 'focus-visible';\n\n// Enable debugging checks for Preact.\nif (process.env.NODE_ENV !== 'production') {\n  require('preact/debug');\n}\n\nif (appConfig.googleAnalytics) {\n  addAnalytics(appConfig.googleAnalytics);\n}\n\nconst isSidebar = !(\n  window.location.pathname.startsWith('/stream') ||\n  window.location.pathname.startsWith('/a/')\n);\n\n// Install Preact renderer options to work around IE11 quirks\nrendererOptions.setupIE11Fixes();\n\n// @ngInject\nfunction setupApi(api, streamer) {\n  api.setClientId(streamer.clientId);\n}\n\n/**\n * Perform the initial fetch of groups and user profile and then set the initial\n * route to match the current URL.\n */\n// @ngInject\nfunction setupRoute(groups, session, router) {\n  Promise.all([groups.load(), session.load()]).finally(() => {\n    router.sync();\n  });\n}\n\n/**\n * Send a page view event when the app starts up.\n *\n * We don't bother tracking route changes later because the client only uses a\n * single route in a given session.\n */\n// @ngInject\nfunction sendPageView(analytics) {\n  analytics.sendPageView();\n}\n\n/**\n * Fetch any persisted client-side defaults, and persist any app-state changes to\n * those defaults\n */\n// @ngInject\nfunction persistDefaults(persistedDefaults) {\n  persistedDefaults.init();\n}\n\n/**\n * Set up autosave-new-highlights service\n */\n// @ngInject\nfunction autosave(autosaveService) {\n  autosaveService.init();\n}\n\n// @ngInject\nfunction setupFrameSync(frameSync) {\n  if (isSidebar) {\n    frameSync.connect();\n  }\n}\n\n// Register icons used by the sidebar app (and maybe other assets in future).\nimport { registerIcons } from '../shared/components/svg-icon';\nimport iconSet from './icons';\nregisterIcons(iconSet);\n\n// The entry point component for the app.\nimport { createElement, render } from 'preact';\nimport HypothesisApp from './components/hypothesis-app';\nimport { ServiceContext } from './util/service-context';\n\n// Services.\nimport bridgeService from '../shared/bridge';\n\nimport analyticsService from './services/analytics';\nimport annotationsService from './services/annotations';\nimport apiService from './services/api';\nimport apiRoutesService from './services/api-routes';\nimport authService from './services/oauth-auth';\nimport autosaveService from './services/autosave';\nimport featuresService from './services/features';\nimport frameSyncService from './services/frame-sync';\nimport groupsService from './services/groups';\nimport loadAnnotationsService from './services/load-annotations';\nimport localStorageService from './services/local-storage';\nimport persistedDefaultsService from './services/persisted-defaults';\nimport routerService from './services/router';\nimport serviceUrlService from './services/service-url';\nimport sessionService from './services/session';\nimport streamFilterService from './services/stream-filter';\nimport streamerService from './services/streamer';\nimport tagsService from './services/tags';\nimport threadsService from './services/threads';\nimport toastMessenger from './services/toast-messenger';\n\n// Redux store.\nimport store from './store';\n\n// Utilities.\nimport { Injector } from '../shared/injector';\n\nfunction startApp(config) {\n  const container = new Injector();\n\n  // Register services.\n  container\n    .register('analytics', analyticsService)\n    .register('annotationsService', annotationsService)\n    .register('api', apiService)\n    .register('apiRoutes', apiRoutesService)\n    .register('auth', authService)\n    .register('autosaveService', autosaveService)\n    .register('bridge', bridgeService)\n    .register('features', featuresService)\n    .register('frameSync', frameSyncService)\n    .register('groups', groupsService)\n    .register('loadAnnotationsService', loadAnnotationsService)\n    .register('localStorage', localStorageService)\n    .register('persistedDefaults', persistedDefaultsService)\n    .register('router', routerService)\n    .register('serviceUrl', serviceUrlService)\n    .register('session', sessionService)\n    .register('streamer', streamerService)\n    .register('streamFilter', streamFilterService)\n    .register('tags', tagsService)\n    .register('threadsService', threadsService)\n    .register('toastMessenger', toastMessenger)\n    .register('store', store);\n\n  // Register utility values/classes.\n  //\n  // nb. In many cases these can be replaced by direct imports in the services\n  // that use them, since they don't depend on instances of other services.\n  container\n    .register('$window', { value: window })\n    .register('isSidebar', { value: isSidebar })\n    .register('settings', { value: config });\n\n  // Initialize services.\n  container.run(persistDefaults);\n  container.run(autosave);\n  container.run(sendPageView);\n  container.run(setupApi);\n  container.run(setupRoute);\n  container.run(startRPCServer);\n  container.run(setupFrameSync);\n\n  // Render the UI.\n  const appEl = /** @type {HTMLElement} */ (document.querySelector(\n    'hypothesis-app'\n  ));\n  render(\n    <ServiceContext.Provider value={container}>\n      <HypothesisApp />\n    </ServiceContext.Provider>,\n    appEl\n  );\n}\n\n// Start capturing RPC requests before we start the RPC server (startRPCServer)\npreStartRPCServer();\n\nfetchConfig(appConfig)\n  .then(config => {\n    startApp(config);\n  })\n  .catch(err => {\n    // Report error. This will be the only notice that the user gets because the\n    // sidebar does not currently appear at all if the app fails to start.\n    console.error('Failed to start Hypothesis client: ', err);\n  });\n",
    "/**\n * Commands for toggling markdown formatting of a selection\n * in an input field.\n *\n * All of the functions in this module take as input the current state\n * of the input field, parameters for the operation to perform and return the\n * new state of the input field.\n */\n\n/**\n * Describes the state of a plain text input field.\n *\n * @typedef EditorState\n * @prop {string} text\n * @prop {number} selectionStart\n * @prop {number} selectionEnd\n */\n\n/**\n * Types of Markdown link that can be inserted with\n * convertSelectionToLink()\n *\n * @enum {number}\n */\nexport const LinkType = {\n  ANCHOR_LINK: 0,\n  IMAGE_LINK: 1,\n};\n\n/**\n * Replace text in an input field and return the new state.\n *\n * @param {EditorState} state - The state of the input field.\n * @param {number} pos - The start position of the text to remove.\n * @param {number} length - The number of characters to remove.\n * @param {string} text - The replacement text to insert at `pos`.\n * @return {EditorState} - The new state of the input field.\n */\nfunction replaceText(state, pos, length, text) {\n  let newSelectionStart = state.selectionStart;\n  let newSelectionEnd = state.selectionEnd;\n\n  if (newSelectionStart >= pos + length) {\n    // 1. Selection is after replaced text:\n    //    Increment (start, end) by difference in length between original and\n    //    replaced text\n    newSelectionStart += text.length - length;\n    newSelectionEnd += text.length - length;\n  } else if (newSelectionEnd <= pos) {\n    // 2. Selection is before replaced text: Leave selection unchanged\n  } else if (newSelectionStart <= pos && newSelectionEnd >= pos + length) {\n    // 3. Selection fully contains replaced text:\n    //    Increment end by difference in length between original and replaced\n    //    text\n    newSelectionEnd += text.length - length;\n  } else if (newSelectionStart < pos && newSelectionEnd < pos + length) {\n    // 4. Selection overlaps start but not end of replaced text:\n    //    Decrement start to start of replacement text\n    newSelectionStart = pos;\n  } else if (\n    newSelectionStart < pos + length &&\n    newSelectionEnd > pos + length\n  ) {\n    // 5. Selection overlaps end but not start of replaced text:\n    //    Increment end by difference in length between original and replaced\n    //    text\n    newSelectionEnd += text.length - length;\n  } else if (pos < newSelectionStart && pos + length > newSelectionEnd) {\n    // 6. Replaced text fully contains selection:\n    //    Expand selection to replaced text\n    newSelectionStart = pos;\n    newSelectionEnd = pos + length;\n  }\n\n  return {\n    text: state.text.slice(0, pos) + text + state.text.slice(pos + length),\n    selectionStart: newSelectionStart,\n    selectionEnd: newSelectionEnd,\n  };\n}\n\n/**\n * Convert the selected text into a Markdown link.\n *\n * @param {EditorState} state - The current state of the input field.\n * @param {LinkType} [linkType] - The type of link to insert.\n * @return {EditorState} - The new state of the input field.\n */\nexport function convertSelectionToLink(state, linkType = LinkType.ANCHOR_LINK) {\n  const selection = state.text.slice(state.selectionStart, state.selectionEnd);\n\n  let linkPrefix = '';\n  if (linkType === LinkType.IMAGE_LINK) {\n    linkPrefix = '!';\n  }\n\n  let newState;\n  if (selection.match(/[a-z]+:\\/\\/.*/)) {\n    // Selection is a URL, wrap it with a link and use the selection as\n    // the target.\n    const dummyLabel = 'Description';\n    newState = replaceText(\n      state,\n      state.selectionStart,\n      selection.length,\n      linkPrefix + '[' + dummyLabel + '](' + selection + ')'\n    );\n    newState.selectionStart = state.selectionStart + linkPrefix.length + 1;\n    newState.selectionEnd = newState.selectionStart + dummyLabel.length;\n    return newState;\n  } else {\n    // Selection is not a URL, wrap it with a link and use the selection as\n    // the label. Change the selection to the dummy link.\n    const beforeURL = linkPrefix + '[' + selection + '](';\n    const dummyLink = 'http://insert-your-link-here.com';\n    newState = replaceText(\n      state,\n      state.selectionStart,\n      selection.length,\n      beforeURL + dummyLink + ')'\n    );\n    newState.selectionStart = state.selectionStart + beforeURL.length;\n    newState.selectionEnd = newState.selectionStart + dummyLink.length;\n    return newState;\n  }\n}\n\n/**\n * Toggle Markdown-style formatting around a span of text.\n *\n * @param {EditorState} state - The current state of the input field.\n * @param {string} prefix - The prefix to add or remove\n *                          before the selection.\n * @param {string|undefined} suffix - The suffix to add or remove after the selection,\n *                           defaults to being the same as the prefix.\n * @param {string} placeholder - The text to insert between 'prefix' and\n *                               'suffix' if the input text is empty.\n * @return {EditorState} The new state of the input field.\n */\nexport function toggleSpanStyle(state, prefix, suffix, placeholder) {\n  if (typeof suffix === 'undefined') {\n    suffix = prefix;\n  }\n\n  const selectionPrefix = state.text.slice(\n    state.selectionStart - prefix.length,\n    state.selectionStart\n  );\n  const selectionSuffix = state.text.slice(\n    state.selectionEnd,\n    state.selectionEnd + prefix.length\n  );\n  let newState = state;\n\n  if (state.selectionStart === state.selectionEnd && placeholder) {\n    newState = replaceText(state, state.selectionStart, 0, placeholder);\n    newState.selectionStart = newState.selectionEnd - placeholder.length;\n  }\n\n  if (selectionPrefix === prefix && selectionSuffix === suffix) {\n    newState = replaceText(\n      newState,\n      newState.selectionStart - prefix.length,\n      prefix.length,\n      ''\n    );\n    newState = replaceText(newState, newState.selectionEnd, suffix.length, '');\n  } else {\n    newState = replaceText(newState, newState.selectionStart, 0, prefix);\n    newState = replaceText(newState, newState.selectionEnd, 0, suffix);\n  }\n\n  return newState;\n}\n\nfunction startOfLine(str, pos) {\n  const start = str.lastIndexOf('\\n', pos);\n  if (start < 0) {\n    return 0;\n  } else {\n    return start + 1;\n  }\n}\n\nfunction endOfLine(str, pos) {\n  const end = str.indexOf('\\n', pos);\n  if (end < 0) {\n    return str.length;\n  } else {\n    return end;\n  }\n}\n\n/**\n * Transform lines between two positions in an input field.\n *\n * @param {EditorState} state - The initial state of the input field\n * @param {number} start - The start position within the input text\n * @param {number} end - The end position within the input text\n * @param {(s: EditorState, start: number, end: number) => EditorState} callback\n *  - Callback which is invoked with the current state of the input and\n *    the start of the current line and returns the new state of the input.\n */\nfunction transformLines(state, start, end, callback) {\n  let lineStart = startOfLine(state.text, start);\n  let lineEnd = endOfLine(state.text, start);\n\n  while (lineEnd <= endOfLine(state.text, end)) {\n    const isLastLine = lineEnd === state.text.length;\n    const currentLineLength = lineEnd - lineStart;\n\n    state = callback(state, lineStart, lineEnd);\n\n    const newLineLength = endOfLine(state.text, lineStart) - lineStart;\n    end += newLineLength - currentLineLength;\n\n    if (isLastLine) {\n      break;\n    }\n    lineStart = lineStart + newLineLength + 1;\n    lineEnd = endOfLine(state.text, lineStart);\n  }\n  return state;\n}\n\n/**\n * Toggle Markdown-style formatting around a block of text.\n *\n * @param {EditorState} state - The current state of the input field.\n * @param {string} prefix - The prefix to add or remove before each line\n *                          of the selection.\n * @return {EditorState} - The new state of the input field.\n */\nexport function toggleBlockStyle(state, prefix) {\n  const start = state.selectionStart;\n  const end = state.selectionEnd;\n\n  // Test whether all lines in the selected range already have the style\n  // applied\n  let blockHasStyle = true;\n  transformLines(state, start, end, function (state, lineStart) {\n    if (state.text.slice(lineStart, lineStart + prefix.length) !== prefix) {\n      blockHasStyle = false;\n    }\n    return state;\n  });\n\n  if (blockHasStyle) {\n    // Remove the formatting.\n    return transformLines(state, start, end, function (state, lineStart) {\n      return replaceText(state, lineStart, prefix.length, '');\n    });\n  } else {\n    // Add the block style to any lines which do not already have it applied\n    return transformLines(state, start, end, function (state, lineStart) {\n      if (state.text.slice(lineStart, lineStart + prefix.length) === prefix) {\n        return state;\n      } else {\n        return replaceText(state, lineStart, 0, prefix);\n      }\n    });\n  }\n}\n",
    "import * as queryString from 'query-string';\n\n/**\n * Return an HTML5 audio player with the given src URL.\n *\n * @param {string} src\n */\nfunction audioElement(src) {\n  const html5audio = document.createElement('audio');\n  html5audio.controls = true;\n  html5audio.src = src;\n  return html5audio;\n}\n\n/**\n * Wrap an element in a container that causes the element to be displayed at\n * a given aspect ratio.\n *\n * See https://css-tricks.com/aspect-ratio-boxes/.\n *\n * @param {HTMLElement} element\n * @param {number} aspectRatio - Aspect ratio as `width/height`\n * @return {HTMLElement}\n */\nfunction wrapInAspectRatioContainer(element, aspectRatio) {\n  element.style.position = 'absolute';\n  element.style.top = '0';\n  element.style.left = '0';\n  element.style.width = '100%';\n  element.style.height = '100%';\n\n  const container = document.createElement('div');\n  container.style.paddingBottom = `${(1 / aspectRatio) * 100}%`;\n  container.style.position = 'relative';\n  container.appendChild(element);\n\n  return container;\n}\n\n/**\n * Return an iframe DOM element with the given src URL.\n *\n * @param {string} src\n * @param {number} [aspectRatio]\n */\nfunction iframe(src, aspectRatio = 16 / 9) {\n  const iframe_ = document.createElement('iframe');\n  iframe_.src = src;\n  iframe_.setAttribute('frameborder', '0');\n  iframe_.setAttribute('allowfullscreen', '');\n\n  return wrapInAspectRatioContainer(iframe_, aspectRatio);\n}\n\n/**\n * Return timeValue as a value in seconds, supporting `t` param's optional\n * '\\dh\\dm\\ds' format. If `timeValue` is numeric (only),\n * it's assumed to be seconds and is left alone.\n *\n * @param {string} timeValue - value of `t` or `start` param in YouTube URL\n * @returns {string} timeValue in seconds\n * @example\n * formatYouTubeTime('5m'); // returns '300'\n * formatYouTubeTime('20m10s'); // returns '1210'\n * formatYouTubeTime('1h1s'); // returns '3601'\n * formatYouTubeTime('10'); // returns '10'\n **/\nfunction parseTimeString(timeValue) {\n  const timePattern = /(\\d+)([hms]?)/g;\n  const multipliers = {\n    h: 60 * 60,\n    m: 60,\n    s: 1,\n  };\n  let seconds = 0;\n  let match;\n  // match[1] - Numeric value\n  // match[2] - Unit (e.g. 'h','m','s', or empty)\n  while ((match = timePattern.exec(timeValue)) !== null) {\n    if (match[2]) {\n      seconds += Number(match[1]) * multipliers[match[2]];\n    } else {\n      seconds += +match[1]; // Treat values missing units as seconds\n    }\n  }\n  return seconds.toString();\n}\n\n/**\n * Return a YouTube URL query string containing (only) whitelisted params.\n * See https://developers.google.com/youtube/player_parameters for\n * all parameter possibilities.\n *\n * @param {HTMLAnchorElement} link\n * @returns {string} formatted filtered URL query string, e.g. '?start=90'\n * @example\n * // returns '?end=10&start=5'\n * youTubeQueryParams(link); // where `link.search` = '?t=5&baz=foo&end=10'\n * // - `t` is translated to `start`\n * // - `baz` is not allowed param\n * // - param keys are sorted\n *\n * @param {HTMLAnchorElement} link\n */\nfunction youTubeQueryParams(link) {\n  let query;\n  const allowedParams = [\n    'end',\n    'start',\n    't', // will be translated to `start`\n  ];\n  const linkParams = queryString.parse(link.search);\n  const filteredQuery = {};\n  // Filter linkParams for allowed keys and build those entries\n  // into the filteredQuery object\n  Object.keys(linkParams)\n    .filter(key => allowedParams.includes(key))\n    .forEach(key => {\n      if (key === 't') {\n        // `t` is not supported in embeds; `start` is\n        // `t` accepts more formats than `start`; start must be in seconds\n        // so, format it as seconds first\n        filteredQuery.start = parseTimeString(linkParams[key]);\n      } else {\n        filteredQuery[key] = linkParams[key];\n      }\n    });\n  query = queryString.stringify(filteredQuery);\n  if (query) {\n    query = `?${query}`;\n  }\n  return query;\n}\n/**\n * Return a YouTube embed (<iframe>) DOM element for the given video ID.\n *\n * @param {string} id\n * @param {HTMLAnchorElement} link\n */\nfunction youTubeEmbed(id, link) {\n  const query = youTubeQueryParams(link);\n  return iframe(`https://www.youtube.com/embed/${id}${query}`);\n}\n\n/**\n * Create an iframe embed generator for links that have the form\n * `https://<hostname>/<path containing a video ID>`\n *\n * @param {string} hostname\n * @param {RegExp} pathPattern -\n *   Pattern to match against the pathname part of the link. This regex should\n *   contain a single capture group which matches the video ID within the path.\n * @param {(videoId: string) => string} iframeUrlGenerator -\n *   Generate the URL for an embedded video iframe from a video ID\n * @param {Object} [options]\n *   @param {number} [options.aspectRatio]\n * @return {(link: HTMLAnchorElement) => HTMLElement|null}\n */\nfunction createEmbedGenerator(\n  hostname,\n  pathPattern,\n  iframeUrlGenerator,\n  { aspectRatio } = {}\n) {\n  const generator = link => {\n    if (link.hostname !== hostname) {\n      return null;\n    }\n\n    const groups = pathPattern.exec(link.pathname);\n    if (!groups) {\n      return null;\n    }\n\n    const id = groups[1];\n    return iframe(iframeUrlGenerator(id), aspectRatio);\n  };\n\n  return generator;\n}\n\n/**\n * A list of functions that return an \"embed\" DOM element (e.g. an <iframe> or\n * an html5 <audio> element) for a given link.\n *\n * Each function either returns `undefined` if it can't generate an embed for\n * the link, or a DOM element if it can.\n *\n * @type {Array<(link: HTMLAnchorElement) => (HTMLElement|null)>}\n */\nconst embedGenerators = [\n  // Matches URLs like https://www.youtube.com/watch?v=rw6oWkCojpw\n  function iframeFromYouTubeWatchURL(link) {\n    if (link.hostname !== 'www.youtube.com') {\n      return null;\n    }\n\n    if (!/\\/watch\\/?/.test(link.pathname)) {\n      return null;\n    }\n\n    const groups = /[&?]v=([^&#]+)/.exec(link.search);\n    if (groups) {\n      return youTubeEmbed(groups[1], link);\n    }\n    return null;\n  },\n\n  // Matches URLs like https://youtu.be/rw6oWkCojpw\n  function iframeFromYouTubeShareURL(link) {\n    if (link.hostname !== 'youtu.be') {\n      return null;\n    }\n\n    // extract video ID from URL\n    const groups = /^\\/([^/]+)\\/?$/.exec(link.pathname);\n    if (groups) {\n      return youTubeEmbed(groups[1], link);\n    }\n    return null;\n  },\n\n  // Matches URLs like https://vimeo.com/149000090\n  createEmbedGenerator(\n    'vimeo.com',\n    /^\\/([^/?#]+)\\/?$/,\n    id => `https://player.vimeo.com/video/${id}`\n  ),\n\n  // Matches URLs like https://vimeo.com/channels/staffpicks/148845534\n  createEmbedGenerator(\n    'vimeo.com',\n    /^\\/channels\\/[^/]+\\/([^/?#]+)\\/?$/,\n    id => `https://player.vimeo.com/video/${id}`\n  ),\n\n  // Matches URLs like https://flipgrid.com/s/030475b8ceff\n  createEmbedGenerator(\n    'flipgrid.com',\n    /^\\/s\\/([^/]+)$/,\n    id => `https://flipgrid.com/s/${id}?embed=true`\n  ),\n\n  /**\n   * Match Internet Archive URLs\n   *\n   *  The patterns are:\n   *\n   *  1. https://archive.org/embed/{slug}?start={startTime}&end={endTime}\n   *     (Embed links)\n   *\n   *  2. https://archive.org/details/{slug}?start={startTime}&end={endTime}\n   *     (Video page links for most videos)\n   *\n   *  3. https://archive.org/details/{slug}/start/{startTime}/end/{endTime}\n   *     (Video page links for the TV News Archive [1])\n   *\n   *  (2) and (3) allow users to copy and paste URLs from archive.org video\n   *  details pages directly into the sidebar to generate video embeds.\n   *\n   *  [1] https://archive.org/details/tv\n   */\n  function iFrameFromInternetArchiveLink(link) {\n    if (link.hostname !== 'archive.org') {\n      return null;\n    }\n\n    // Extract the unique slug from the path.\n    const slugMatch = /^\\/(embed|details)\\/(.+)/.exec(link.pathname);\n    if (!slugMatch) {\n      return null;\n    }\n\n    // Extract start and end times, which may appear either as query string\n    // params or path params.\n    let slug = slugMatch[2];\n    const linkParams = queryString.parse(link.search);\n    let startTime = linkParams.start;\n    let endTime = linkParams.end;\n\n    if (!startTime) {\n      const startPathParam = slug.match(/\\/start\\/([^/]+)/);\n      if (startPathParam) {\n        startTime = startPathParam[1];\n        slug = slug.replace(startPathParam[0], '');\n      }\n    }\n\n    if (!endTime) {\n      const endPathParam = slug.match(/\\/end\\/([^/]+)/);\n      if (endPathParam) {\n        endTime = endPathParam[1];\n        slug = slug.replace(endPathParam[0], '');\n      }\n    }\n\n    // Generate embed URL.\n    const iframeUrl = new URL(`https://archive.org/embed/${slug}`);\n    if (startTime) {\n      iframeUrl.searchParams.append('start', startTime);\n    }\n    if (endTime) {\n      iframeUrl.searchParams.append('end', endTime);\n    }\n    return iframe(iframeUrl.href);\n  },\n\n  // Matches URLs that end with .mp3, .ogg, or .wav (assumed to be audio files)\n  function html5audioFromMp3Link(link) {\n    if (\n      link.pathname.endsWith('.mp3') ||\n      link.pathname.endsWith('.ogg') ||\n      link.pathname.endsWith('.wav')\n    ) {\n      return audioElement(link.href);\n    }\n    return null;\n  },\n];\n\n/**\n * Return an embed element for the given link if it's an embeddable link.\n *\n * If the link is a link for a YouTube video or other embeddable media then\n * return an embed DOM element (for example an <iframe>) for that media.\n *\n * Otherwise return undefined.\n *\n * @param {HTMLAnchorElement} link\n * @return {HTMLElement|null}\n */\nfunction embedForLink(link) {\n  let embed;\n  let j;\n  for (j = 0; j < embedGenerators.length; j++) {\n    embed = embedGenerators[j](link);\n    if (embed) {\n      return embed;\n    }\n  }\n  return null;\n}\n\n/** Replace the given link element with an embed.\n *\n * If the given link element is a link to an embeddable media and if its link\n * text is the same as its href then it will be replaced in the DOM with an\n * embed (e.g. an <iframe> or html5 <audio> element) of the same media.\n *\n * If the link text is different from the href, then the link will be left\n * untouched. We want to convert links like these from the Markdown source into\n * embeds:\n *\n *     https://vimeo.com/channels/staffpicks/148845534\n *     <https://vimeo.com/channels/staffpicks/148845534>\n *\n * But we don't want to convert links like this:\n *\n *     [Custom link text](https://vimeo.com/channels/staffpicks/148845534)\n *\n * because doing so would destroy the user's custom link text, and leave users\n * with no way to just insert a media link without it being embedded.\n *\n * If the link is not a link to an embeddable media it will be left untouched.\n *\n * @param {HTMLAnchorElement} link\n * @return {HTMLElement|null}\n */\nfunction replaceLinkWithEmbed(link) {\n  // The link's text may or may not be percent encoded. The `link.href` property\n  // will always be percent encoded. When comparing the two we need to be\n  // agnostic as to which representation is used.\n  if (\n    link.href !== link.textContent &&\n    decodeURI(link.href) !== link.textContent\n  ) {\n    return null;\n  }\n  const embed = embedForLink(link);\n  if (embed) {\n    /** @type {Element} */ (link.parentElement).replaceChild(embed, link);\n  }\n  return embed;\n}\n\n/**\n * Replace all embeddable link elements beneath the given element with embeds.\n *\n * All links to YouTube videos or other embeddable media will be replaced with\n * embeds of the same media.\n *\n * @param {HTMLElement} element\n * @param {Object} options\n *   @param {string} [options.className] -\n *     Class name to apply to embed containers. An important function of this class is to set\n *     the width of the embed.\n */\nexport function replaceLinksWithEmbeds(element, { className } = {}) {\n  let links = element.getElementsByTagName('a');\n\n  // `links` is a \"live list\" of the <a> element children of `element`.\n  // We want to iterate over `links` and replace some of them with embeds,\n  // but we can't modify `links` while looping over it so we need to copy it to\n  // a nice, normal array first.\n  links = Array.prototype.slice.call(links, 0);\n\n  let i;\n  for (i = 0; i < links.length; i++) {\n    const embed = replaceLinkWithEmbed(links[i]);\n    if (embed) {\n      if (className) {\n        embed.className = className;\n      } else {\n        // Default width.\n        embed.style.width = '350px';\n      }\n    }\n  }\n}\n",
    "import createDOMPurify from 'dompurify';\nimport escapeHtml from 'escape-html';\nimport * as katex from 'katex';\nimport showdown from 'showdown';\n\nconst DOMPurify = createDOMPurify(window);\n\n// Ensure that any links generated either by Showdown or in the markdown/HTML\n// passed to Showdown open in an external window.\nDOMPurify.addHook('afterSanitizeAttributes', node => {\n  if ('target' in node) {\n    node.setAttribute('target', '_blank');\n  }\n});\n\nfunction targetBlank() {\n  function filter(text) {\n    return text.replace(/<a href=/g, '<a target=\"_blank\" href=');\n  }\n  return [{ type: 'output', filter: filter }];\n}\n\nlet converter;\n\nfunction renderMarkdown(markdown) {\n  if (!converter) {\n    // see https://github.com/showdownjs/showdown#valid-options\n    converter = new showdown.Converter({\n      extensions: [targetBlank],\n      simplifiedAutoLink: true,\n      // Since we're using simplifiedAutoLink we also use\n      // literalMidWordUnderscores because otherwise _'s in URLs get\n      // transformed into <em>'s.\n      // See https://github.com/showdownjs/showdown/issues/211\n      literalMidWordUnderscores: true,\n    });\n  }\n  return converter.makeHtml(markdown);\n}\n\nfunction mathPlaceholder(id) {\n  return '{math:' + id.toString() + '}';\n}\n\n/**\n * Parses a string containing mixed markdown and LaTeX in between\n * '$$..$$' or '\\( ... \\)' delimiters and returns an object containing a\n * list of math blocks found in the string, plus the input string with math\n * blocks replaced by placeholders.\n */\nfunction extractMath(content) {\n  const mathBlocks = [];\n  let pos = 0;\n  let replacedContent = content;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const blockMathStart = replacedContent.indexOf('$$', pos);\n    const inlineMathStart = replacedContent.indexOf('\\\\(', pos);\n\n    if (blockMathStart === -1 && inlineMathStart === -1) {\n      break;\n    }\n\n    let mathStart;\n    let mathEnd;\n    if (\n      blockMathStart !== -1 &&\n      (inlineMathStart === -1 || blockMathStart < inlineMathStart)\n    ) {\n      mathStart = blockMathStart;\n      mathEnd = replacedContent.indexOf('$$', mathStart + 2);\n    } else {\n      mathStart = inlineMathStart;\n      mathEnd = replacedContent.indexOf('\\\\)', mathStart + 2);\n    }\n\n    if (mathEnd === -1) {\n      break;\n    } else {\n      mathEnd = mathEnd + 2;\n    }\n\n    const id = mathBlocks.length + 1;\n    const placeholder = mathPlaceholder(id);\n    mathBlocks.push({\n      id: id,\n      expression: replacedContent.slice(mathStart + 2, mathEnd - 2),\n      inline: inlineMathStart !== -1,\n    });\n\n    let replacement;\n    if (inlineMathStart !== -1) {\n      replacement = placeholder;\n    } else {\n      // Add new lines before and after math blocks so that they render\n      // as separate paragraphs\n      replacement = '\\n\\n' + placeholder + '\\n\\n';\n    }\n\n    replacedContent =\n      replacedContent.slice(0, mathStart) +\n      replacement +\n      replacedContent.slice(mathEnd);\n    pos = mathStart + replacement.length;\n  }\n\n  return {\n    mathBlocks: mathBlocks,\n    content: replacedContent,\n  };\n}\n\nfunction insertMath(html, mathBlocks) {\n  return mathBlocks.reduce(function (html, block) {\n    let renderedMath;\n    try {\n      if (block.inline) {\n        renderedMath = katex.renderToString(block.expression);\n      } else {\n        renderedMath = katex.renderToString(block.expression, {\n          displayMode: true,\n        });\n      }\n    } catch (err) {\n      renderedMath = escapeHtml(block.expression);\n    }\n    return html.replace(mathPlaceholder(block.id), renderedMath);\n  }, html);\n}\n\nexport default function renderMathAndMarkdown(markdown) {\n  // KaTeX takes care of escaping its input, so we want to avoid passing its\n  // output through the HTML sanitizer. Therefore we first extract the math\n  // blocks from the input, render and sanitize the remaining markdown and then\n  // render and re-insert the math blocks back into the output.\n  const mathInfo = extractMath(markdown);\n  const markdownHTML = DOMPurify.sanitize(renderMarkdown(mathInfo.content));\n  const mathAndMarkdownHTML = insertMath(markdownHTML, mathInfo.mathBlocks);\n  return mathAndMarkdownHTML;\n}\n",
    "import { TinyEmitter } from 'tiny-emitter';\n\n/**\n * @typedef {import('../types/api').Annotation} Annotation\n */\n\n/**\n * Client for the Hypothesis search API.\n *\n * SearchClient handles paging through results, canceling search etc.\n */\nexport default class SearchClient extends TinyEmitter {\n  /**\n   * @param {Object} searchFn - Function for querying the search API\n   * @param {Object} options\n   *   @param {number} [options.chunkSize] - page size/number of annotations\n   *   per batch\n   *   @param {boolean} [options.separateReplies] - When `true`, request that\n   *   top-level annotations and replies be returned separately.\n   *   NOTE: This has issues with annotations that have large numbers of\n   *   replies.\n   *   @param {boolean} [options.incremental] - Emit `results` events incrementally\n   *   as batches of annotations are available\n   */\n  constructor(\n    searchFn,\n    { chunkSize = 200, separateReplies = true, incremental = true } = {}\n  ) {\n    super();\n    this._searchFn = searchFn;\n    this._chunkSize = chunkSize;\n    this._separateReplies = separateReplies;\n    this._incremental = incremental;\n\n    this._canceled = false;\n    /** @type {Annotation[]} */\n    this._results = [];\n  }\n\n  _getBatch(query, offset) {\n    const searchQuery = Object.assign(\n      {\n        limit: this._chunkSize,\n        offset: offset,\n        sort: 'created',\n        order: 'asc',\n        _separate_replies: this._separateReplies,\n        //tag: 'iatest1' // [CG]\n        //group: 'iatest' // group overridden by query obj! [CG]\n        user: 'acct:caslonkahle@hypothes.is' // TEST with user account [CG]\n      },\n      query\n    );\n\n    const self = this;\n    this._searchFn(searchQuery)\n      .then(function (results) {\n        if (self._canceled) {\n          return;\n        }\n\n        const chunk = results.rows.concat(results.replies || []);\n        if (self._incremental) {\n          self.emit('results', chunk);\n        } else {\n          self._results = self._results.concat(chunk);\n        }\n\n        // Check if there are additional pages of results to fetch. In addition to\n        // checking the `total` figure from the server, we also require that at\n        // least one result was returned in the current page, otherwise we would\n        // end up repeating the same query for the next page. If the server's\n        // `total` count is incorrect for any reason, that will lead to the client\n        // polling the server indefinitely.\n        const nextOffset = offset + results.rows.length;\n        if (results.total > nextOffset && chunk.length > 0) {\n          self._getBatch(query, nextOffset);\n        } else {\n          if (!self._incremental) {\n            self.emit('results', self._results);\n          }\n          self.emit('end');\n        }\n      })\n      .catch(function (err) {\n        if (self._canceled) {\n          return;\n        }\n        self.emit('error', err);\n        self.emit('end');\n      });\n  }\n\n  /**\n   * Perform a search against the Hypothesis API.\n   *\n   * Emits a 'results' event with an array of annotations as they become\n   * available (in incremental mode) or when all annotations are available\n   * (in non-incremental mode).\n   *\n   * Emits an 'error' event if the search fails.\n   * Emits an 'end' event once the search completes.\n   */\n  get(query) {\n    this._results = [];\n    this._getBatch(query, 0);\n  }\n\n  /**\n   * Cancel the current search and emit the 'end' event.\n   * No further events will be emitted after this.\n   */\n  cancel() {\n    this._canceled = true;\n    this.emit('end');\n  }\n}\n",
    "/**\n * @typedef {import('../types/config').HostConfig} HostConfig\n * @typedef {import('../types/config').Service} Service\n */\n\n/**\n * Return the configuration for the annotation service which the client would retrieve\n * annotations from which may contain the authority, grantToken and icon.\n *\n * @param {HostConfig} settings\n * @return {Service|null}\n */\n\nexport default function serviceConfig(settings) {\n  if (!Array.isArray(settings.services) || settings.services.length === 0) {\n    return null;\n  }\n  return settings.services[0];\n}\n",
    "const VIA_REFERRER = /^https:\\/\\/(qa-)?via.hypothes.is\\//;\n\nexport const events = {\n  ANNOTATION_CREATED: 'annotationCreated',\n  ANNOTATION_DELETED: 'annotationDeleted',\n  ANNOTATION_FLAGGED: 'annotationFlagged',\n  ANNOTATION_SHARED: 'annotationShared',\n  ANNOTATION_UPDATED: 'annotationUpdated',\n  DOCUMENT_SHARED: 'documentShared',\n  GROUP_LEAVE: 'groupLeave',\n  GROUP_SWITCH: 'groupSwitch',\n  GROUP_VIEW_ACTIVITY: 'groupViewActivity',\n  HIGHLIGHT_CREATED: 'highlightCreated',\n  HIGHLIGHT_UPDATED: 'highlightUpdated',\n  HIGHLIGHT_DELETED: 'highlightDeleted',\n  LOGIN_FAILURE: 'loginFailure',\n  LOGIN_SUCCESS: 'loginSuccessful',\n  LOGOUT_FAILURE: 'logoutFailure',\n  LOGOUT_SUCCESS: 'logoutSuccessful',\n  PAGE_NOTE_CREATED: 'pageNoteCreated',\n  PAGE_NOTE_UPDATED: 'pageNoteUpdated',\n  PAGE_NOTE_DELETED: 'pageNoteDeleted',\n  REPLY_CREATED: 'replyCreated',\n  REPLY_UPDATED: 'replyUpdated',\n  REPLY_DELETED: 'replyDeleted',\n  SIDEBAR_OPENED: 'sidebarOpened',\n  SIGN_UP_REQUESTED: 'signUpRequested',\n};\n\n/**\n * Return a string identifying the context in which the client is being used.\n *\n * This is used as the \"category\" for analytics events to support comparing\n * behavior across different environments in which the client is used.\n *\n * @param {Window} win\n * @return {string}\n */\nfunction clientType(win, settings = {}) {\n  const validTypes = [\n    'chrome-extension',\n    'firefox-extension',\n    'embed',\n    'bookmarklet',\n    'via',\n  ];\n  let type;\n\n  // The preferred method for deciding what type of app is running is\n  // through the setting of the appType to one of the valid types above.\n  // However, we also want to capture app types where we were not given\n  // the appType setting explicitly - these are the app types that were\n  // added before we added the analytics logic\n  if (validTypes.indexOf((settings.appType || '').toLowerCase()) > -1) {\n    type = settings.appType.toLowerCase();\n  } else if (win.location.protocol === 'chrome-extension:') {\n    type = 'chrome-extension';\n  } else if (VIA_REFERRER.test(win.document.referrer)) {\n    type = 'via';\n  } else {\n    type = 'embed';\n  }\n\n  return type;\n}\n\n/**\n * @typedef Analytics\n * @prop {() => any} sendPageView\n * @prop {(action: string, label?: string, value?: number) => void} track\n * @prop {Object.<string, string>} events\n */\n\n/**\n * Analytics service for tracking page views and user interactions with the\n * application.\n * @param {Window} $window - Test seam\n * @return {Analytics}\n */\n// @ngInject\nexport default function analytics($window, settings) {\n  const category = clientType($window, settings);\n  const noop = () => {};\n\n  // Return the current analytics.js command queue function. This function\n  // is replaced when analytics.js fully loads.\n  //\n  // See https://developers.google.com/analytics/devguides/collection/analyticsjs/command-queue-reference\n  // @ts-ignore The window interface needs to be expanded to include this property\n  const commandQueue = () => $window.ga || noop;\n\n  return {\n    /**\n     * Track a page view when the app initially loads or changes route.\n     *\n     * See https://developers.google.com/analytics/devguides/collection/analyticsjs/pages\n     */\n    sendPageView() {\n      const queue = commandQueue();\n      queue('send', 'pageview');\n    },\n\n    /**\n     * Track an event using Google Analytics.\n     *\n     * GA events have a category, action, label and value. The category is set\n     * to a string indicating the distribution method of the client (embed,\n     * browser extension, proxy service etc.).\n     *\n     * See https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n     *\n     * @param {string} action -\n     *  The event which happened. This should be a value from the `events` enum.\n     * @param [string] label\n     *  A string argument to associate with the event. The meaning depends upon\n     *  the event.\n     * @param [number] value\n     *  A numeric value to associate with the event. The meaning depends upon\n     *  the event.\n     */\n    track(action, label, value) {\n      const queue = commandQueue();\n      queue('send', 'event', category, action, label, value);\n    },\n\n    events,\n  };\n}\n",
    "/** @typedef {import('../../types/api').Annotation} Annotation */\n/** @typedef {import('../../types/annotator').AnnotationData} AnnotationData */\n\n/**\n * A service for creating, manipulating and persisting annotations and their\n * application-store representations. Interacts with API services as needed.\n */\n\nimport * as metadata from '../util/annotation-metadata';\nimport {\n  defaultPermissions,\n  privatePermissions,\n  sharedPermissions,\n} from '../util/permissions';\nimport { generateHexString } from '../util/random';\nimport uiConstants from '../ui-constants';\n\n// @ngInject\nexport default function annotationsService(api, store) {\n  /**\n   * Apply changes for the given `annotation` from its draft in the store (if\n   * any) and return a new object with those changes integrated.\n   *\n   * @param {Annotation} annotation\n   */\n  function applyDraftChanges(annotation) {\n    const changes = {};\n    const draft = store.getDraft(annotation);\n\n    if (draft) {\n      changes.tags = draft.tags;\n      changes.text = draft.text;\n      changes.permissions = draft.isPrivate\n        ? privatePermissions(annotation.user)\n        : sharedPermissions(annotation.user, annotation.group);\n    }\n\n    // Integrate changes from draft into object to be persisted\n    return { ...annotation, ...changes };\n  }\n\n  /**\n   * Extend new annotation objects with defaults and permissions.\n   *\n   * @param {AnnotationData} annotationData\n   * @param {Date} now\n   * @return {Annotation}\n   */\n  function initialize(annotationData, now = new Date()) {\n    const defaultPrivacy = store.getDefault('annotationPrivacy');\n    const groupid = store.focusedGroupId();\n    const profile = store.profile();\n\n    const userid = profile.userid;\n    const userInfo = profile.user_info;\n\n    // We need a unique local/app identifier for this new annotation such\n    // that we might look it up later in the store. It won't have an ID yet,\n    // as it has not been persisted to the service.\n    const $tag = generateHexString(8);\n\n    /** @type {Annotation} */\n    const annotation = Object.assign(\n      {\n        created: now.toISOString(),\n        group: groupid,\n        permissions: defaultPermissions(userid, groupid, defaultPrivacy),\n        tags: [],\n        text: '',\n        updated: now.toISOString(),\n        user: userid,\n        user_info: userInfo,\n        $tag: $tag,\n        hidden: false,\n        links: {},\n      },\n      annotationData\n    );\n\n    // Highlights are peculiar in that they always have private permissions\n    if (metadata.isHighlight(annotation)) {\n      annotation.permissions = privatePermissions(userid);\n    }\n    return annotation;\n  }\n\n  /**\n   * Populate a new annotation object from `annotation` and add it to the store.\n   * Create a draft for it unless it's a highlight and clear other empty\n   * drafts out of the way.\n   *\n   * @param {Object} annotationData\n   * @param {Date} now\n   */\n  function create(annotationData, now = new Date()) {\n    const annotation = initialize(annotationData, now);\n\n    store.addAnnotations([annotation]);\n\n    // Remove other drafts that are in the way, and their annotations (if new)\n    store.deleteNewAndEmptyDrafts();\n\n    // Create a draft unless it's a highlight\n    if (!metadata.isHighlight(annotation)) {\n      store.createDraft(annotation, {\n        tags: annotation.tags,\n        text: annotation.text,\n        isPrivate: !metadata.isPublic(annotation),\n      });\n    }\n\n    // NB: It may make sense to move the following code at some point to\n    // the UI layer\n    // Select the correct tab\n    // If the annotation is of type note or annotation, make sure\n    // the appropriate tab is selected. If it is of type reply, user\n    // stays in the selected tab.\n    if (metadata.isPageNote(annotation)) {\n      store.selectTab(uiConstants.TAB_NOTES);\n    } else if (metadata.isAnnotation(annotation)) {\n      store.selectTab(uiConstants.TAB_ANNOTATIONS);\n    }\n\n    (annotation.references || []).forEach(parent => {\n      // Expand any parents of this annotation.\n      store.setExpanded(parent, true);\n    });\n  }\n\n  /**\n   * Delete an annotation via the API and update the store.\n   */\n  async function delete_(annotation) {\n    await api.annotation.delete({ id: annotation.id });\n    store.removeAnnotations([annotation]);\n  }\n\n  /**\n   * Flag an annotation for review by a moderator.\n   */\n  async function flag(annotation) {\n    await api.annotation.flag({ id: annotation.id });\n    store.updateFlagStatus(annotation.id, true);\n  }\n\n  /**\n   * Create a reply to `annotation` by the user `userid` and add to the store.\n   *\n   * @param {Object} annotation\n   * @param {string} userid\n   */\n  function reply(annotation, userid) {\n    const replyAnnotation = {\n      group: annotation.group,\n      permissions: metadata.isPublic(annotation)\n        ? sharedPermissions(userid, annotation.group)\n        : privatePermissions(userid),\n      references: (annotation.references || []).concat(annotation.id),\n      target: [{ source: annotation.target[0].source }],\n      uri: annotation.uri,\n    };\n    create(replyAnnotation);\n  }\n\n  /**\n   * Save new (or update existing) annotation. On success,\n   * the annotation's `Draft` will be removed and the annotation added\n   * to the store.\n   */\n  async function save(annotation) {\n    let saved;\n\n    const annotationWithChanges = applyDraftChanges(annotation);\n\n    if (metadata.isNew(annotation)) {\n      saved = api.annotation.create({}, annotationWithChanges);\n    } else {\n      saved = api.annotation.update(\n        { id: annotation.id },\n        annotationWithChanges\n      );\n    }\n\n    let savedAnnotation;\n    store.annotationSaveStarted(annotation);\n    try {\n      savedAnnotation = await saved;\n    } finally {\n      store.annotationSaveFinished(annotation);\n    }\n\n    Object.keys(annotation).forEach(key => {\n      if (key[0] === '$') {\n        savedAnnotation[key] = annotation[key];\n      }\n    });\n\n    // Clear out any pending changes (draft)\n    store.removeDraft(annotation);\n\n    // Add (or, in effect, update) the annotation to the store's collection\n    store.addAnnotations([savedAnnotation]);\n    return savedAnnotation;\n  }\n\n  return {\n    create,\n    delete: delete_,\n    flag,\n    reply,\n    save,\n  };\n}\n",
    "import { retryPromiseOperation } from '../util/retry';\n\n/**\n * A service which fetches and caches API route metadata.\n */\n// @ngInject\nexport default function apiRoutes(settings) {\n  // Cache of route name => route metadata from API root.\n  let routeCache;\n  // Cache of links to pages on the service fetched from the API's \"links\"\n  // endpoint.\n  let linkCache;\n\n  function getJSON(url) {\n    // nb. The `/api/` and `/api/links` routes are fetched without specifying\n    // any additional headers/config so that we can use `<link rel=\"preload\">` in\n    // the `/app.html` response to fetch them early, while the client JS app\n    // is loading.\n    return fetch(url).then(response => {\n      if (response.status !== 200) {\n        throw new Error(`Fetching ${url} failed`);\n      }\n      return response.json();\n    });\n  }\n\n  /**\n   * Fetch and cache API route metadata.\n   *\n   * Routes are fetched without any authentication and therefore assumed to be\n   * the same regardless of whether the user is authenticated or not.\n   *\n   * @return {Promise<Object>} - Map of routes to route metadata.\n   */\n  function routes() {\n    if (!routeCache) {\n      routeCache = retryPromiseOperation(() => getJSON(settings.apiUrl)).then(\n        index => index.links\n      );\n    }\n    return routeCache;\n  }\n\n  /**\n   * Fetch and cache service page links from the API.\n   *\n   * @return {Promise<Object>} - Map of link name to URL\n   */\n  function links() {\n    if (!linkCache) {\n      linkCache = routes().then(routes => {\n        return getJSON(routes.links.url);\n      });\n    }\n    return linkCache;\n  }\n\n  return { routes, links };\n}\n",
    "import * as queryString from 'query-string';\n\nimport { replaceURLParams } from '../util/url';\n\n/**\n * Translate the response from a failed API call into an Error-like object.\n *\n * @param {Response} response\n * @param {Object} data - The parsed JSON response\n */\nfunction translateResponseToError(response, data) {\n  let message = response.status + ' ' + response.statusText;\n  if (data && data.reason) {\n    message = message + ': ' + data.reason;\n  }\n  return new Error(message);\n}\n\n/**\n * Return a shallow clone of `obj` with all client-only properties removed.\n * Client-only properties are marked by a '$' prefix.\n *\n * @param {Object} obj\n */\nfunction stripInternalProperties(obj) {\n  const result = {};\n\n  for (const k in obj) {\n    if (obj.hasOwnProperty(k) && k[0] !== '$') {\n      result[k] = obj[k];\n    }\n  }\n\n  return result;\n}\n\n/**\n * @typedef APIResponse\n * @prop {any} data -\n *  The JSON response from the API call, unless this call returned a\n *  \"204 No Content\" status.\n * @prop {string|null} token - The access token that was used to make the call\n *   or `null` if unauthenticated.\n */\n\n/**\n * Options controlling how an API call is made or processed.\n *\n * @typedef APICallOptions\n * @prop {boolean} [includeMetadata] - If false (the default), the response is\n *   just the JSON response from the API. If true, the response is an `APIResponse`\n *   containing additional metadata about the request and response.\n */\n\n/**\n * Function which makes an API request.\n *\n * @callback APICallFunction\n * @param {any} [params] - A map of URL and query string parameters to include with the request.\n * @param {any} [data] - The body of the request.\n * @param {APICallOptions} options\n * @return {Promise<any|APIResponse>}\n */\n\n/**\n * Configuration for an API method.\n *\n * @typedef {Object} APIMethodOptions\n * @prop {() => Promise<string>} getAccessToken -\n *   Function which acquires a valid access token for making an API request.\n * @prop {() => string|null} getClientId -\n *   Function that returns a per-session client ID to include with the request\n *   or `null`.\n * @prop {() => any} onRequestStarted - Callback invoked when the API request starts.\n * @prop {() => any} onRequestFinished - Callback invoked when the API request finishes.\n */\n\n// istanbul ignore next\nconst noop = () => null;\n\nfunction get(object, path) {\n  let cursor = object;\n  path.split('.').forEach(segment => {\n    cursor = cursor[segment];\n  });\n  return cursor;\n}\n\n/**\n * Creates a function that will make an API call to a named route.\n *\n * @param links - Object or promise for an object mapping named API routes to\n *                URL templates and methods\n * @param route - The dotted path of the named API route (eg. `annotation.create`)\n * @param [APIMethodOptions] - Configuration for the API method\n * @return {APICallFunction}\n */\nfunction createAPICall(\n  links,\n  route,\n  {\n    getAccessToken = noop,\n    getClientId = noop,\n    onRequestStarted = noop,\n    onRequestFinished = noop,\n  } = {}\n) {\n  return function (params, data, options = {}) {\n    onRequestStarted();\n\n    let accessToken;\n    return Promise.all([links, getAccessToken()])\n      .then(([links, token]) => {\n        const descriptor = get(links, route);\n        const headers = {\n          'Content-Type': 'application/json',\n          'Hypothesis-Client-Version': '__VERSION__', // replaced by versionify\n        };\n\n        accessToken = token;\n        if (token) {\n          headers.Authorization = 'Bearer ' + token;\n        }\n\n        const clientId = getClientId();\n        if (clientId) {\n          headers['X-Client-Id'] = clientId;\n        }\n\n        const { url, params: queryParams } = replaceURLParams(\n          descriptor.url,\n          params\n        );\n        const apiUrl = new URL(url);\n        apiUrl.search = queryString.stringify(queryParams);\n\n        return fetch(apiUrl.toString(), {\n          body: data ? JSON.stringify(stripInternalProperties(data)) : null,\n          headers,\n          method: descriptor.method,\n        }).catch(() => {\n          // Re-throw Fetch errors such that they all \"look the same\" (different\n          // browsers throw different Errors on Fetch failure). This allows\n          // Fetch failures to be either handled in particular ways higher up\n          // or for them to be ignored in error reporting (see `sentry` config).\n          throw new Error(`Fetch operation failed for URL '${url}'`);\n        });\n      })\n      .then(response => {\n        let data;\n\n        const status = response.status;\n        if (status >= 200 && status !== 204 && status < 500) {\n          data = response.json();\n        } else {\n          data = response.text();\n        }\n        return Promise.all([response, data]);\n      })\n      .then(\n        ([response, data]) => {\n          // `fetch` executed the request and the response was successfully parsed.\n          onRequestFinished();\n\n          if (response.status >= 400) {\n            // Translate the API result into an `Error` to follow the convention that\n            // Promises should be rejected with an Error or Error-like object.\n            throw translateResponseToError(response, data);\n          }\n\n          if (options.includeMetadata) {\n            return { data, token: accessToken };\n          } else {\n            return data;\n          }\n        },\n        err => {\n          // `fetch` failed to execute the request, or parsing the response failed.\n          onRequestFinished();\n          throw err;\n        }\n      );\n  };\n}\n\n/**\n * API client for the Hypothesis REST API.\n *\n * Returns an object that with keys that match the routes in\n * the Hypothesis API (see http://h.readthedocs.io/en/latest/api/). See\n * `APICallFunction` for the syntax of API calls. For example:\n *\n * ```\n * api.annotations.update({ id: '1234' }, annotation).then(ann => {\n *   // Do something with the updated annotation.\n * }).catch(err => {\n *   // Do something if the API call fails.\n * });\n * ```\n *\n * This service handles authenticated calls to the API, using the `auth` service\n * to get auth tokens. The URLs for API endpoints are fetched from the `/api`\n * endpoint, a responsibility delegated to the `apiRoutes` service which does\n * not use authentication.\n */\n// @ngInject\nexport default function api(apiRoutes, auth, store) {\n  const links = apiRoutes.routes();\n  let clientId = null;\n\n  const getClientId = () => clientId;\n\n  function apiCall(route) {\n    return createAPICall(links, route, {\n      getAccessToken: auth.tokenGetter,\n      getClientId,\n      onRequestStarted: store.apiRequestStarted,\n      onRequestFinished: store.apiRequestFinished,\n    });\n  }\n\n  return {\n    /**\n     * Set the \"client ID\" sent with API requests.\n     *\n     * This is a per-session unique ID which the client sends with REST API\n     * requests and in the configuration for the real-time API to prevent the\n     * client from receiving real-time notifications about its own actions.\n     */\n    setClientId(clientId_) {\n      clientId = clientId_;\n    },\n\n    search: apiCall('search'),\n    annotation: {\n      create: apiCall('annotation.create'),\n      delete: apiCall('annotation.delete'),\n      get: apiCall('annotation.read'),\n      update: apiCall('annotation.update'),\n      flag: apiCall('annotation.flag'),\n      hide: apiCall('annotation.hide'),\n      unhide: apiCall('annotation.unhide'),\n    },\n    group: {\n      member: {\n        delete: apiCall('group.member.delete'),\n      },\n      read: apiCall('group.read'),\n    },\n    groups: {\n      list: apiCall('groups.read'),\n    },\n    profile: {\n      groups: {\n        read: apiCall('profile.groups.read'),\n      },\n      read: apiCall('profile.read'),\n      update: apiCall('profile.update'),\n    },\n\n    // The `links` endpoint is not included here. Clients should fetch these\n    // from the `apiRoutes` service.\n  };\n}\n",
    "/**\n * A service for automatically saving new highlights.\n */\nimport { retryPromiseOperation } from '../util/retry';\n\n// @ngInject\nexport default function autosaveService(annotationsService, store) {\n  // A Set of annotation $tags that have save requests in-flight\n  const saving = new Set();\n\n  // A Set of annotation $tags that have failed to save after retries\n  const failed = new Set();\n\n  /**\n   * Determine whether we should try to send a save request for the highlight\n   * indicated by `htag`\n   *\n   * @param {string} htag - The local unique identifier for the unsaved highlight\n   * @return {boolean}\n   */\n  const shouldSaveHighlight = htag => {\n    return !saving.has(htag) && !failed.has(htag);\n  };\n\n  /**\n   * Store-subscribed call back. Automatically save new highlights.\n   */\n  const autosaveNewHighlights = () => {\n    const newHighlights = store.newHighlights();\n\n    newHighlights.forEach(highlight => {\n      // Because this is a new annotation object, it does not yet have an `id`\n      // property. Use the local `$tag` for uniqueness instead.\n      const htag = highlight.$tag;\n\n      if (!shouldSaveHighlight(htag)) {\n        return;\n      }\n\n      saving.add(htag);\n\n      retryPromiseOperation(() => annotationsService.save(highlight))\n        .catch(() => {\n          // save failed after retries\n          failed.add(htag);\n        })\n        .finally(() => {\n          // Request is complete, no longer attempting to save\n          saving.delete(htag);\n        });\n    });\n  };\n\n  return {\n    init() {\n      store.subscribe(autosaveNewHighlights);\n    },\n    isSaving() {\n      return saving.size > 0;\n    },\n  };\n}\n",
    "/**\n * Provides access to feature flag states for the current\n * Hypothesis user.\n *\n * This service is a thin wrapper around the feature flag data in\n * the session state.\n *\n * Users of this service should assume that the value of any given flag can\n * change at any time and should write code accordingly. Feature flags should\n * not be cached, and should not be interrogated only at setup time.\n */\n\nimport bridgeEvents from '../../shared/bridge-events';\nimport warnOnce from '../../shared/warn-once';\nimport { watch } from '../util/watch';\n\n// @ngInject\nexport default function features(bridge, session, store) {\n  const currentFlags = () => store.profile().features;\n  const sendFeatureFlags = () => {\n    bridge.call(bridgeEvents.FEATURE_FLAGS_UPDATED, currentFlags() || {});\n  };\n\n  // Re-send feature flags to connected frames when flags change or a new\n  // frame connects.\n  watch(store.subscribe, [currentFlags, () => store.frames()], () =>\n    sendFeatureFlags()\n  );\n\n  /**\n   * Returns true if the flag with the given name is enabled for the current\n   * user.\n   *\n   * Returns false if session data has not been fetched for the current\n   * user yet or if the feature flag name is unknown.\n   */\n  function flagEnabled(flag) {\n    // trigger a refresh of session data, if it has not been\n    // refetched within a cache timeout managed by the session service\n    // (see CACHE_TTL in session.js)\n    session.load();\n\n    const flags = currentFlags();\n\n    if (!flags) {\n      // features data has not yet been fetched\n      return false;\n    }\n\n    if (!(flag in flags)) {\n      warnOnce('looked up unknown feature', flag);\n      return false;\n    }\n    return flags[flag];\n  }\n\n  return {\n    flagEnabled: flagEnabled,\n  };\n}\n",
    "import debounce from 'lodash.debounce';\n\nimport bridgeEvents from '../../shared/bridge-events';\nimport Discovery from '../../shared/discovery';\nimport uiConstants from '../ui-constants';\nimport * as metadata from '../util/annotation-metadata';\nimport { watch } from '../util/watch';\n\n/**\n * Return a minimal representation of an annotation that can be sent from the\n * sidebar app to a connected frame.\n *\n * Because this representation will be exposed to untrusted third-party\n * JavaScript, it includes only the information needed to uniquely identify it\n * within the current session and anchor it in the document.\n *\n * Added links & text to annotation sent. [CG]\n */\nexport function formatAnnot(ann) {\n  return {\n    tag: ann.$tag,\n    msg: {\n      document: ann.document,\n      target: ann.target,\n      uri: ann.uri,\n      links: ann.links,\n      text: ann.text,\n    },\n  };\n}\n\n/**\n * This service runs in the sidebar and is responsible for keeping the set of\n * annotations displayed in connected frames in sync with the set shown in the\n * sidebar.\n */\n// @ngInject\nexport default function FrameSync(annotationsService, bridge, store) {\n  // Set of tags of annotations that are currently loaded into the frame\n  const inFrame = new Set();\n\n  /**\n   * Watch for changes to the set of annotations displayed in the sidebar and\n   * notify connected frames about new/updated/deleted annotations.\n   */\n  function setupSyncToFrame() {\n    let prevPublicAnns = 0;\n\n    watch(\n      store.subscribe,\n      [() => store.getState().annotations.annotations, () => store.frames()],\n      ([annotations, frames], [prevAnnotations]) => {\n        let publicAnns = 0;\n        const inSidebar = new Set();\n        const added = [];\n\n        annotations.forEach(function (annot) {\n          if (metadata.isReply(annot)) {\n            // The frame does not need to know about replies\n            return;\n          }\n\n          if (metadata.isPublic(annot)) {\n            ++publicAnns;\n          }\n\n          inSidebar.add(annot.$tag);\n          if (!inFrame.has(annot.$tag)) {\n            added.push(annot);\n          }\n        });\n        const deleted = prevAnnotations.filter(function (annot) {\n          return !inSidebar.has(annot.$tag);\n        });\n\n        // We currently only handle adding and removing annotations from the frame\n        // when they are added or removed in the sidebar, but not re-anchoring\n        // annotations if their selectors are updated.\n        if (added.length > 0) {\n          bridge.call('loadAnnotations', added.map(formatAnnot));\n          added.forEach(function (annot) {\n            inFrame.add(annot.$tag);\n          });\n        }\n        deleted.forEach(function (annot) {\n          bridge.call('deleteAnnotation', formatAnnot(annot));\n          inFrame.delete(annot.$tag);\n        });\n\n        if (frames.length > 0) {\n          if (\n            frames.every(function (frame) {\n              return frame.isAnnotationFetchComplete;\n            })\n          ) {\n            if (publicAnns === 0 || publicAnns !== prevPublicAnns) {\n              bridge.call(\n                bridgeEvents.PUBLIC_ANNOTATION_COUNT_CHANGED,\n                publicAnns\n              );\n              prevPublicAnns = publicAnns;\n            }\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Listen for messages coming in from connected frames and add new annotations\n   * to the sidebar.\n   */\n  function setupSyncFromFrame() {\n    // A new annotation, note or highlight was created in the frame\n    bridge.on('beforeCreateAnnotation', function (event) {\n      const annot = Object.assign({}, event.msg, { $tag: event.tag });\n      // If user is not logged in, we can't really create a meaningful highlight\n      // or annotation. Instead, we need to open the sidebar, show an error,\n      // and delete the (unsaved) annotation so it gets un-selected in the\n      // target document\n      if (!store.isLoggedIn()) {\n        bridge.call('showSidebar');\n        store.openSidebarPanel(uiConstants.PANEL_LOGIN_PROMPT);\n        bridge.call('deleteAnnotation', formatAnnot(annot));\n        return;\n      }\n      inFrame.add(event.tag);\n\n      // Create the new annotation in the sidebar.\n      annotationsService.create(annot);\n    });\n\n    bridge.on('destroyFrame', destroyFrame.bind(this));\n\n    // Map of annotation tag to anchoring status\n    // ('anchored'|'orphan'|'timeout').\n    //\n    // Updates are coalesced to reduce the overhead from processing\n    // triggered by each `UPDATE_ANCHOR_STATUS` action that is dispatched.\n    let anchoringStatusUpdates = {};\n    const scheduleAnchoringStatusUpdate = debounce(() => {\n      store.updateAnchorStatus(anchoringStatusUpdates);\n      anchoringStatusUpdates = {};\n    }, 10);\n\n    // Anchoring an annotation in the frame completed\n    bridge.on('sync', function (events_) {\n      events_.forEach(function (event) {\n        inFrame.add(event.tag);\n        anchoringStatusUpdates[event.tag] = event.msg.$orphan\n          ? 'orphan'\n          : 'anchored';\n        scheduleAnchoringStatusUpdate();\n      });\n    });\n\n    bridge.on('showAnnotations', function (tags) {\n      store.selectAnnotations(store.findIDsForTags(tags));\n      store.selectTab(uiConstants.TAB_ANNOTATIONS);\n    });\n\n    bridge.on('focusAnnotations', function (tags) {\n      store.focusAnnotations(tags || []);\n    });\n\n    bridge.on('toggleAnnotationSelection', function (tags) {\n      store.toggleSelectedAnnotations(store.findIDsForTags(tags));\n    });\n\n    bridge.on('sidebarOpened', function () {\n      store.setSidebarOpened(true);\n    });\n\n    // These invoke the matching methods by name on the Guests\n    bridge.on('showSidebar', function () {\n      bridge.call('showSidebar');\n    });\n    bridge.on('hideSidebar', function () {\n      bridge.call('hideSidebar');\n    });\n    bridge.on('setVisibleHighlights', function (state) {\n      bridge.call('setVisibleHighlights', state);\n    });\n  }\n\n  /**\n   * Query the Hypothesis annotation client in a frame for the URL and metadata\n   * of the document that is currently loaded and add the result to the set of\n   * connected frames.\n   */\n  function addFrame(channel) {\n    channel.call('getDocumentInfo', function (err, info) {\n      if (err) {\n        channel.destroy();\n        return;\n      }\n\n      store.connectFrame({\n        id: info.frameIdentifier,\n        metadata: info.metadata,\n        uri: info.uri,\n      });\n    });\n  }\n\n  function destroyFrame(frameIdentifier) {\n    const frames = store.frames();\n    const frameToDestroy = frames.find(function (frame) {\n      return frame.id === frameIdentifier;\n    });\n    if (frameToDestroy) {\n      store.destroyFrame(frameToDestroy);\n    }\n  }\n\n  /**\n   * Find and connect to Hypothesis clients in the current window.\n   */\n  this.connect = function () {\n    const discovery = new Discovery(window, { server: true });\n    discovery.startDiscovery(bridge.createChannel.bind(bridge));\n    bridge.onConnect(addFrame);\n\n    setupSyncToFrame();\n    setupSyncFromFrame();\n  };\n\n  /**\n   * Focus annotations with the given $tags.\n   *\n   * This is used to indicate the highlight in the document that corresponds to\n   * a given annotation in the sidebar.\n   *\n   * @param {string[]} tags - annotation $tags\n   */\n  this.focusAnnotations = function (tags) {\n    store.focusAnnotations(tags);\n    bridge.call('focusAnnotations', tags);\n  };\n\n  /**\n   * Scroll the frame to the highlight for an annotation with a given tag.\n   *\n   * @param {string} tag\n   */\n  this.scrollToAnnotation = function (tag) {\n    bridge.call('scrollToAnnotation', tag);\n  };\n}\n",
    "import serviceConfig from '../service-config';\nimport { isReply } from '../util/annotation-metadata';\nimport { combineGroups } from '../util/groups';\nimport { awaitStateChange } from '../util/state';\nimport { watch } from '../util/watch';\n\n/** @typedef {import('../../types/api').Group} Group */\n\nconst DEFAULT_ORG_ID = '__default__';\n\n/**\n * FIXME: There is almost assuredly a better way to handle a fallback, default logo\n */\nconst DEFAULT_ORGANIZATION = {\n  id: DEFAULT_ORG_ID,\n  name: '__DEFAULT__',\n  logo:\n    'data:image/svg+xml;utf8,' +\n    // @ts-ignore - TS doesn't know about .svg files.\n    encodeURIComponent(require('../../images/icons/logo.svg')),\n};\n\n// @ngInject\nexport default function groups(\n  store,\n  api,\n  isSidebar,\n  serviceUrl,\n  session,\n  settings,\n  toastMessenger,\n  auth\n) {\n  const svc = serviceConfig(settings);\n  const authority = svc ? svc.authority : null;\n\n  // `expand` parameter for various groups API calls.\n  const expandParam = ['organization', 'scopes'];\n\n  /**\n   * Return the main document URI that is used to fetch groups associated with\n   * the site that the user is on.\n   */\n  function mainUri() {\n    const mainFrame = store.mainFrame();\n    if (!mainFrame) {\n      return null;\n    }\n    return mainFrame.uri;\n  }\n\n  function getDocumentUriForGroupSearch() {\n    return awaitStateChange(store, mainUri);\n  }\n\n  /**\n   * Update the focused group. Update the store, then check to see if\n   * there are any new (unsaved) annotations—if so, update those annotations\n   * such that they are associated with the newly-focused group.\n   */\n  function focus(groupId) {\n    const prevGroupId = store.focusedGroupId();\n\n    store.focusGroup(groupId);\n\n    const newGroupId = store.focusedGroupId();\n\n    const groupHasChanged = prevGroupId !== newGroupId && prevGroupId !== null;\n    if (groupHasChanged) {\n      // Move any top-level new annotations to the newly-focused group.\n      // Leave replies where they are.\n      const updatedAnnotations = [];\n      store.newAnnotations().forEach(annot => {\n        if (!isReply(annot)) {\n          updatedAnnotations.push(\n            Object.assign({}, annot, { group: newGroupId })\n          );\n        }\n      });\n\n      if (updatedAnnotations.length) {\n        store.addAnnotations(updatedAnnotations);\n      }\n\n      // Persist this group as the last focused group default\n      store.setDefault('focusedGroup', newGroupId);\n    }\n  }\n\n  /**\n   * Filter the returned list of groups from the API.\n   *\n   * `filterGroups` performs client-side filtering to hide the \"Public\" group\n   * for logged-out users under certain conditions.\n   *\n   * @param {Group[]} groups\n   * @param {boolean} isLoggedIn\n   * @param {string|null} directLinkedAnnotationGroupId\n   * @param {string|null} directLinkedGroupId\n   * @return {Promise<Group[]>}\n   */\n  async function filterGroups(\n    groups,\n    isLoggedIn,\n    directLinkedAnnotationGroupId,\n    directLinkedGroupId\n  ) {\n    // Filter the directLinkedGroup out if it is out of scope and scope is enforced.\n    if (directLinkedGroupId) {\n      const directLinkedGroup = groups.find(g => g.id === directLinkedGroupId);\n      if (\n        directLinkedGroup &&\n        !directLinkedGroup.isScopedToUri &&\n        directLinkedGroup.scopes &&\n        directLinkedGroup.scopes.enforced\n      ) {\n        groups = groups.filter(g => g.id !== directLinkedGroupId);\n        store.setDirectLinkedGroupFetchFailed();\n        directLinkedGroupId = null;\n      }\n    }\n\n    // Logged-in users always see the \"Public\" group.\n    if (isLoggedIn) {\n      return groups;\n    }\n\n    // If the main document URL has no groups associated with it, always show\n    // the \"Public\" group.\n    const pageHasAssociatedGroups = groups.some(\n      g => g.id !== '__world__' && g.isScopedToUri\n    );\n    if (!pageHasAssociatedGroups) {\n      return groups;\n    }\n\n    // If directLinkedGroup or directLinkedAnnotationGroupId is the \"Public\" group,\n    // always return groups.\n    if (\n      directLinkedGroupId === '__world__' ||\n      directLinkedAnnotationGroupId === '__world__'\n    ) {\n      return groups;\n    }\n\n    // Return non-world groups.\n    return groups.filter(g => g.id !== '__world__');\n  }\n\n  /**\n   * For any group that does not have an associated organization, populate with\n   * the default Hypothesis organization.\n   *\n   * Mutates group objects in place\n   *\n   * @param {Group[]} groups\n   */\n  function injectOrganizations(groups) {\n    groups.forEach(group => {\n      if (!group.organization || typeof group.organization !== 'object') {\n        group.organization = DEFAULT_ORGANIZATION;\n      }\n    });\n  }\n\n  /*\n   * Fetch a specific group.\n   *\n   * @param {string} id\n   * @return {Promise<Group>}\n   */\n  async function fetchGroup(id) {\n    return api.group.read({ id, expand: expandParam });\n  }\n\n  let reloadSetUp = false;\n\n  /**\n   * Set up automatic re-fetching of groups in response to various events\n   * in the sidebar.\n   */\n  function setupAutoReload() {\n    if (reloadSetUp) {\n      return;\n    }\n    reloadSetUp = true;\n\n    // Reload groups when main document URI changes.\n    watch(store.subscribe, mainUri, () => {\n      load();\n    });\n\n    // Reload groups when user ID changes. This is a bit inefficient since it\n    // means we are not fetching the groups and profile concurrently after\n    // logging in or logging out.\n    watch(\n      store.subscribe,\n      [() => store.hasFetchedProfile(), () => store.profile().userid],\n      (_, [prevFetchedProfile]) => {\n        if (!prevFetchedProfile) {\n          // Ignore the first time that the profile is loaded.\n          return;\n        }\n        load();\n      }\n    );\n  }\n\n  /**\n   * Fetch the groups associated with the current user and document, as well\n   * as any groups that have been direct-linked to.\n   *\n   * @return {Promise<Group[]>}\n   */\n  async function loadGroupsForUserAndDocument() {\n    // Step 1: Get the URI of the active document, so we can fetch groups\n    // associated with that document.\n    let documentUri;\n    if (isSidebar) {\n      documentUri = await getDocumentUriForGroupSearch();\n    }\n\n    setupAutoReload();\n\n    // Step 2: Concurrently fetch the groups the user is a member of,\n    // the groups associated with the current document and the annotation\n    // and/or group that was direct-linked (if any).\n\n    // If there is a direct-linked annotation, fetch the annotation in case\n    // the associated group has not already been fetched and we need to make\n    // an additional request for it.\n    const directLinkedAnnId = store.directLinkedAnnotationId();\n    let directLinkedAnnApi = null;\n    if (directLinkedAnnId) {\n      directLinkedAnnApi = api.annotation\n        .get({ id: directLinkedAnnId })\n        .catch(() => {\n          // If the annotation does not exist or the user doesn't have permission.\n          return null;\n        });\n    }\n\n    // If there is a direct-linked group, add an API request to get that\n    // particular group since it may not be in the set of groups that are\n    // fetched by other requests.\n    const directLinkedGroupId = store.directLinkedGroupId();\n    let directLinkedGroupApi = null;\n    if (directLinkedGroupId) {\n      directLinkedGroupApi = fetchGroup(directLinkedGroupId)\n        .then(group => {\n          store.clearDirectLinkedGroupFetchFailed();\n          return group;\n        })\n        .catch(() => {\n          // If the group does not exist or the user doesn't have permission.\n          store.setDirectLinkedGroupFetchFailed();\n          return null;\n        });\n    }\n\n    const listParams = {\n      expand: expandParam,\n    };\n    if (authority) {\n      listParams.authority = authority;\n    }\n    if (documentUri) {\n      listParams.document_uri = documentUri;\n    }\n\n    const [\n      myGroups,\n      featuredGroups,\n      token,\n      directLinkedAnn,\n      directLinkedGroup,\n    ] = await Promise.all([\n      api.profile.groups.read({ expand: expandParam }),\n      api.groups.list(listParams),\n      auth.tokenGetter(),\n      directLinkedAnnApi,\n      directLinkedGroupApi,\n    ]);\n\n    // Step 3. Add the direct-linked group to the list of featured groups,\n    // and if there was a direct-linked annotation, fetch its group if we\n    // don't already have it.\n\n    // If there is a direct-linked group, add it to the featured groups list.\n    if (\n      directLinkedGroup &&\n      !featuredGroups.some(g => g.id === directLinkedGroup.id)\n    ) {\n      featuredGroups.push(directLinkedGroup);\n    }\n\n    // If there's a direct-linked annotation it may require an extra API call\n    // to fetch its group.\n    let directLinkedAnnotationGroupId = null;\n    if (directLinkedAnn) {\n      // Set the directLinkedAnnotationGroupId to be used later in\n      // the filterGroups method.\n      directLinkedAnnotationGroupId = directLinkedAnn.group;\n\n      // If the direct-linked annotation's group has not already been fetched,\n      // fetch it.\n      const directLinkedAnnGroup = myGroups\n        .concat(featuredGroups)\n        .find(g => g.id === directLinkedAnn.group);\n\n      if (!directLinkedAnnGroup) {\n        try {\n          const directLinkedAnnGroup = await fetchGroup(directLinkedAnn.group);\n          featuredGroups.push(directLinkedAnnGroup);\n        } catch (e) {\n          toastMessenger.error('Unable to fetch group for linked annotation');\n        }\n      }\n    }\n\n    // Step 4. Combine all the groups into a single list and set additional\n    // metadata on them that will be used elsewhere in the app.\n    const isLoggedIn = token !== null;\n    const groups = await filterGroups(\n      combineGroups(myGroups, featuredGroups, documentUri, settings),\n      isLoggedIn,\n      directLinkedAnnotationGroupId,\n      directLinkedGroupId\n    );\n\n    const groupToFocus =\n      directLinkedAnnotationGroupId || directLinkedGroupId || null;\n    addGroupsToStore(groups, groupToFocus);\n\n    return groups;\n  }\n\n  /**\n   * Load the specific groups configured by the annotation service.\n   *\n   * @param {string[]} groupIds - `id` or `groupid`s of groups to fetch\n   */\n  async function loadServiceSpecifiedGroups(groupIds) {\n    // Fetch the groups that the user is a member of in one request and then\n    // fetch any other groups not returned in that request directly.\n    //\n    // This reduces the number of requests to the backend on the assumption\n    // that most or all of the group IDs that the service configures the client\n    // to show are groups that the user is a member of.\n    const userGroups = await api.profile.groups.read({ expand: expandParam });\n\n    let error;\n    const tryFetchGroup = async id => {\n      try {\n        return await fetchGroup(id);\n      } catch (e) {\n        error = e;\n        return null;\n      }\n    };\n\n    const getGroup = id =>\n      userGroups.find(g => g.id === id || g.groupid === id) ||\n      tryFetchGroup(id);\n\n    const groups = (await Promise.all(groupIds.map(getGroup))).filter(\n      g => g !== null\n    );\n\n    addGroupsToStore(groups);\n\n    if (error) {\n      // @ts-ignore - TS can't track the type of `error` here.\n      toastMessenger.error(`Unable to fetch groups: ${error.message}`, {\n        autoDismiss: false,\n      });\n    }\n\n    return groups;\n  }\n\n  /**\n   * Add groups to the store and set the initial focused group.\n   *\n   * @param {Group[]} groups\n   * @param {string|null} [groupToFocus]\n   */\n  function addGroupsToStore(groups, groupToFocus) {\n    // Add a default organization to groups that don't have one. The organization\n    // provides the logo to display when the group is selected and is also used\n    // to order groups.\n    injectOrganizations(groups);\n\n    const isFirstLoad = store.allGroups().length === 0;\n    const prevFocusedGroup = store.getDefault('focusedGroup');\n\n    store.loadGroups(groups);\n\n    if (isFirstLoad) {\n      if (groups.some(g => g.id === groupToFocus)) {\n        focus(groupToFocus);\n      } else if (groups.some(g => g.id === prevFocusedGroup)) {\n        focus(prevFocusedGroup);\n      }\n    }\n  }\n\n  /**\n   * Fetch groups from the API, load them into the store and set the focused\n   * group.\n   *\n   * There are two main scenarios:\n   *\n   * 1. The groups loaded depend on the current user, current document URI and\n   *    active direct links. This is the default.\n   *\n   *    On startup, `load()` must be called to trigger the initial groups fetch.\n   *    Subsequently groups are automatically reloaded if the logged-in user or\n   *    main document URI changes.\n   *\n   * 2. The annotation service specifies exactly which groups to load via the\n   *    configuration it passes to the client.\n   *\n   * @return {Promise<Group[]>}\n   */\n  async function load() {\n    let groups;\n    if (svc && svc.groups) {\n      let groupIds = [];\n      try {\n        groupIds = await svc.groups;\n      } catch (e) {\n        toastMessenger.error(\n          `Unable to fetch group configuration: ${e.message}`\n        );\n      }\n      groups = await loadServiceSpecifiedGroups(groupIds);\n    } else {\n      groups = await loadGroupsForUserAndDocument();\n    }\n    return groups;\n  }\n\n  function all() {\n    return store.allGroups();\n  }\n\n  // Return the full object for the group with the given id.\n  function get(id) {\n    return store.getGroup(id);\n  }\n\n  /**\n   * Leave the group with the given ID.\n   * Returns a promise which resolves when the action completes.\n   */\n  function leave(id) {\n    // The groups list will be updated in response to a session state\n    // change notification from the server. We could improve the UX here\n    // by optimistically updating the session state\n    return api.group.member.delete({\n      pubid: id,\n      userid: 'me',\n    });\n  }\n\n  return {\n    all: all,\n    get: get,\n\n    leave: leave,\n    load: load,\n\n    focus: focus,\n  };\n}\n",
    "/**\n * A service for fetching annotations, filtered by document URIs and group.\n */\n\nimport SearchClient from '../search-client';\n\nimport { isReply } from '../util/annotation-metadata';\n\n// @ngInject\nexport default function loadAnnotationsService(\n  api,\n  store,\n  streamer,\n  streamFilter\n) {\n  let searchClient = null;\n\n  /**\n   * Load annotations for all URIs and groupId.\n   *\n   * @param {string[]} uris\n   * @param {string} groupId\n   */\n  function load(uris, groupId) {\n    store.removeAnnotations(store.savedAnnotations());\n\n    // Cancel previously running search client.\n    if (searchClient) {\n      searchClient.cancel();\n    }\n\n    if (uris.length > 0) {\n      searchAndLoad(uris, groupId);\n\n      streamFilter.resetFilter().addClause('/uri', 'one_of', uris);\n      streamer.setConfig('filter', { filter: streamFilter.getFilter() });\n    }\n  }\n\n  function searchAndLoad(uris, groupId) {\n    searchClient = new SearchClient(api.search, {\n      incremental: true,\n      separateReplies: false,\n    });\n    searchClient.on('results', results => {\n      if (results.length) {\n        store.addAnnotations(results);\n      }\n    });\n    searchClient.on('error', error => {\n      console.error(error);\n    });\n    searchClient.on('end', () => {\n      // Remove client as it's no longer active.\n      searchClient = null;\n\n      store.frames().forEach(function (frame) {\n        if (0 <= uris.indexOf(frame.uri)) {\n          store.updateFrameAnnotationFetchStatus(frame.uri, true);\n        }\n      });\n      store.annotationFetchFinished();\n    });\n    store.annotationFetchStarted();\n    searchClient.get({ uri: uris, group: groupId });\n    // searchClient.get({ uri: uris, group: 'iatest' }); // TEST [CG]\n  }\n\n  /**\n   * Fetch all annotations in the same thread as `id` and add them to the store.\n   *\n   * @param {string} id - Annotation ID. This may be an annotation or a reply.\n   * @return Promise<Annotation[]> - The annotation, followed by any replies.\n   */\n  async function loadThread(id) {\n    let annotation;\n    let replySearchResult;\n\n    // Clear out any annotations already in the store before fetching new ones\n    store.clearAnnotations();\n\n    try {\n      store.annotationFetchStarted();\n      // 1. Fetch the annotation indicated by `id` — the target annotation\n      annotation = await api.annotation.get({ id });\n\n      // 2. If annotation is not the top-level annotation in its thread,\n      //    fetch the top-level annotation\n      if (isReply(annotation)) {\n        annotation = await api.annotation.get({ id: annotation.references[0] });\n      }\n\n      // 3. Fetch all of the annotations in the thread, based on the\n      //    top-level annotation\n      replySearchResult = await api.search({ references: annotation.id });\n    } finally {\n      store.annotationFetchFinished();\n    }\n    const threadAnnotations = [annotation, ...replySearchResult.rows];\n\n    store.addAnnotations(threadAnnotations);\n\n    // If we've been successful in retrieving a thread, with a top-level annotation,\n    // configure the connection to the real-time update service to send us\n    // updates to any of the annotations in the thread.\n    if (!isReply(annotation)) {\n      streamFilter\n        .addClause('/references', 'one_of', annotation.id, true)\n        .addClause('/id', 'equals', annotation.id, true);\n      streamer.setConfig('filter', { filter: streamFilter.getFilter() });\n      streamer.connect();\n    }\n\n    return threadAnnotations;\n  }\n\n  return {\n    load,\n    loadThread,\n  };\n}\n",
    "/**\n * Fallback in-memory store if `localStorage` is not read/writable.\n */\nclass InMemoryStorage {\n  constructor() {\n    this._store = {};\n  }\n\n  getItem(key) {\n    return key in this._store ? this._store[key] : null;\n  }\n\n  setItem(key, value) {\n    this._store[key] = value;\n  }\n\n  removeItem(key) {\n    delete this._store[key];\n  }\n}\n\n/**\n * A wrapper around the `localStorage` API which provides a fallback to\n * in-memory storage in browsers that block access to `window.localStorage`.\n * in third-party iframes.\n */\n// @ngInject\nexport default function localStorage($window) {\n  let storage;\n  let testKey = 'hypothesis.testKey';\n\n  try {\n    // Test whether we can read/write localStorage.\n    storage = $window.localStorage;\n    $window.localStorage.setItem(testKey, testKey);\n    $window.localStorage.getItem(testKey);\n    $window.localStorage.removeItem(testKey);\n  } catch (e) {\n    storage = new InMemoryStorage();\n  }\n\n  return {\n    getItem(key) {\n      return storage.getItem(key);\n    },\n\n    getObject(key) {\n      const item = storage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    },\n\n    setItem(key, value) {\n      storage.setItem(key, value);\n    },\n\n    setObject(key, value) {\n      const repr = JSON.stringify(value);\n      storage.setItem(key, repr);\n    },\n\n    removeItem(key) {\n      storage.removeItem(key);\n    },\n  };\n}\n",
    "import { TinyEmitter } from 'tiny-emitter';\n\nimport serviceConfig from '../service-config';\nimport OAuthClient from '../util/oauth-client';\nimport { resolve } from '../util/url';\n\n/**\n * @typedef {import('../util/oauth-client').TokenInfo} TokenInfo\n *\n * @typedef RefreshOptions\n * @property {boolean} persist - True if access tokens should be persisted for\n *   use in future sessions.\n */\n\n/**\n * Authorization service.\n *\n * This service is responsible for acquiring access tokens for making API\n * requests and making them available via the `tokenGetter()` method.\n *\n * Access tokens are acquired via the OAuth authorization flow, loading valid\n * tokens from a previous session or, on some websites, by exchanging a grant\n * token provided by the host page.\n *\n * Interaction with OAuth endpoints in the annotation service is delegated to\n * the `OAuthClient` class.\n */\nexport default function auth(\n  $window,\n  apiRoutes,\n  localStorage,\n  settings,\n  toastMessenger\n) {\n  /**\n   * Authorization code from auth popup window.\n   * @type {string|null}\n   */\n  let authCode;\n\n  /**\n   * Token info retrieved via `POST /api/token` endpoint.\n   *\n   * Resolves to `null` if the user is not logged in.\n   *\n   * @type {Promise<TokenInfo|null>|null}\n   */\n  let tokenInfoPromise;\n\n  /** @type {OAuthClient} */\n  let client;\n\n  /**\n   * Absolute URL of the `/api/token` endpoint.\n   */\n  const tokenUrl = resolve('token', settings.apiUrl);\n\n  /**\n   * Show an error message telling the user that the access token has expired.\n   */\n  function showAccessTokenExpiredErrorMessage(message) {\n    toastMessenger.error(`Hypothesis login lost: ${message}`, {\n      autoDismiss: false,\n    });\n  }\n\n  /**\n   * Return the storage key used for storing access/refresh token data for a given\n   * annotation service.\n   */\n  function storageKey() {\n    // Use a unique key per annotation service. Currently OAuth tokens are only\n    // persisted for the default annotation service. If in future we support\n    // logging into other services from the client, this function will need to\n    // take the API URL as an argument.\n    let apiDomain = new URL(settings.apiUrl).hostname;\n\n    // Percent-encode periods to avoid conflict with section delimeters.\n    apiDomain = apiDomain.replace(/\\./g, '%2E');\n\n    return `hypothesis.oauth.${apiDomain}.token`;\n  }\n\n  /**\n   * Fetch the last-saved access/refresh tokens for `authority` from local\n   * storage.\n   */\n  function loadToken() {\n    const token = localStorage.getObject(storageKey());\n\n    if (\n      !token ||\n      typeof token.accessToken !== 'string' ||\n      typeof token.refreshToken !== 'string' ||\n      typeof token.expiresAt !== 'number'\n    ) {\n      return null;\n    }\n\n    return {\n      accessToken: token.accessToken,\n      refreshToken: token.refreshToken,\n      expiresAt: token.expiresAt,\n    };\n  }\n\n  /**\n   * Persist access & refresh tokens for future use.\n   */\n  function saveToken(token) {\n    localStorage.setObject(storageKey(), token);\n  }\n\n  /**\n   * Exchange the refresh token for a new access token and refresh token pair.\n   *\n   * @param {string} refreshToken\n   * @param {RefreshOptions} options\n   * @return {Promise<TokenInfo>} Promise for the new access token\n   */\n  function refreshAccessToken(refreshToken, options) {\n    return oauthClient()\n      .then(client => client.refreshToken(refreshToken))\n      .then(tokenInfo => {\n        if (options.persist) {\n          saveToken(tokenInfo);\n        }\n        return tokenInfo;\n      });\n  }\n\n  const emitter = new TinyEmitter();\n\n  /**\n   * Listen for updated access & refresh tokens saved by other instances of the\n   * client.\n   */\n  function listenForTokenStorageEvents() {\n    $window.addEventListener('storage', ({ key }) => {\n      if (key === storageKey()) {\n        // Reset cached token information. Tokens will be reloaded from storage\n        // on the next call to `tokenGetter()`.\n        tokenInfoPromise = null;\n        emitter.emit('oauthTokensChanged');\n      }\n    });\n  }\n\n  function oauthClient() {\n    if (client) {\n      return Promise.resolve(client);\n    }\n    return apiRoutes.links().then(links => {\n      client = new OAuthClient({\n        clientId: settings.oauthClientId,\n        authorizationEndpoint: links['oauth.authorize'],\n        revokeEndpoint: links['oauth.revoke'],\n        tokenEndpoint: tokenUrl,\n      });\n      return client;\n    });\n  }\n\n  /**\n   * Retrieve an access token for the API.\n   *\n   * @return {Promise<string|null>} The API access token or `null` if not logged in.\n   */\n  function tokenGetter() {\n    if (!tokenInfoPromise) {\n      const cfg = serviceConfig(settings);\n\n      // Check if automatic login is being used, indicated by the presence of\n      // the 'grantToken' property in the service configuration.\n      if (cfg && typeof cfg.grantToken !== 'undefined') {\n        if (cfg.grantToken) {\n          // User is logged-in on the publisher's website.\n          // Exchange the grant token for a new access token.\n          tokenInfoPromise = oauthClient()\n            .then(client => client.exchangeGrantToken(cfg.grantToken))\n            .catch(err => {\n              showAccessTokenExpiredErrorMessage(\n                'You must reload the page to annotate.'\n              );\n              throw err;\n            });\n        } else {\n          // User is anonymous on the publisher's website.\n          tokenInfoPromise = Promise.resolve(null);\n        }\n      } else if (authCode) {\n        // Exchange authorization code retrieved from login popup for a new\n        // access token.\n        const code = authCode;\n        authCode = null; // Auth codes can only be used once.\n        tokenInfoPromise = oauthClient()\n          .then(client => client.exchangeAuthCode(code))\n          .then(tokenInfo => {\n            saveToken(tokenInfo);\n            return tokenInfo;\n          });\n      } else {\n        // Attempt to load the tokens from the previous session.\n        tokenInfoPromise = Promise.resolve(loadToken());\n      }\n    }\n\n    const origToken = tokenInfoPromise;\n\n    return /** @type {Promise<TokenInfo|null>} */ (tokenInfoPromise).then(\n      token => {\n        if (!token) {\n          // No token available. User will need to log in.\n          return null;\n        }\n\n        if (origToken !== tokenInfoPromise) {\n          // A token refresh has been initiated via a call to `refreshAccessToken`\n          // below since `tokenGetter()` was called.\n          return tokenGetter();\n        }\n\n        if (Date.now() > token.expiresAt) {\n          let shouldPersist = true;\n\n          // If we are using automatic login via a grant token, do not persist the\n          // initial access token or refreshed tokens.\n          const cfg = serviceConfig(settings);\n          if (cfg && typeof cfg.grantToken !== 'undefined') {\n            shouldPersist = false;\n          }\n\n          // Token expired. Attempt to refresh.\n          tokenInfoPromise = refreshAccessToken(token.refreshToken, {\n            persist: shouldPersist,\n          })\n            .then(token => {\n              // Sanity check that prevents an infinite loop. Mostly useful in\n              // tests.\n              if (Date.now() > token.expiresAt) {\n                throw new Error('Refreshed token expired in the past');\n              }\n              return token;\n            })\n            .catch(() => {\n              // If refreshing the token fails, the user is simply logged out.\n              return null;\n            });\n\n          return tokenGetter();\n        } else {\n          return token.accessToken;\n        }\n      }\n    );\n  }\n\n  /**\n   * Login to the annotation service using OAuth.\n   *\n   * This displays a popup window which allows the user to login to the service\n   * (if necessary) and then responds with an auth code which the client can\n   * then exchange for access and refresh tokens.\n   */\n  function login() {\n    const authWindow = OAuthClient.openAuthPopupWindow($window);\n    return oauthClient()\n      .then(client => {\n        return client.authorize($window, authWindow);\n      })\n      .then(code => {\n        // Save the auth code. It will be exchanged for an access token when the\n        // next API request is made.\n        authCode = code;\n        tokenInfoPromise = null;\n      });\n  }\n\n  /**\n   * Log out of the service (in the client only).\n   *\n   * This revokes and then forgets any OAuth credentials that the user has.\n   */\n  async function logout() {\n    const [token, client] = await Promise.all([\n      tokenInfoPromise,\n      oauthClient(),\n    ]);\n\n    if (token) {\n      await client.revokeToken(token.accessToken);\n    }\n\n    // eslint-disable-next-line require-atomic-updates\n    tokenInfoPromise = Promise.resolve(null);\n\n    localStorage.removeItem(storageKey());\n  }\n\n  listenForTokenStorageEvents();\n\n  // The returned object `extends` the emitter. We could rework this\n  // service to be a class in future to do this more explicitly.\n  return Object.assign(emitter, {\n    login,\n    logout,\n    tokenGetter,\n  });\n}\n\n// `$inject` is added manually rather than using `@ngInject` to work around\n// a conflict between the transform-async-to-promises and angularjs-annotate\n// Babel plugins.\nauth.$inject = [\n  '$window',\n  'apiRoutes',\n  'localStorage',\n  'settings',\n  'toastMessenger',\n];\n",
    "import { watch } from '../util/watch';\n\n/**\n * A service for reading and persisting convenient client-side defaults for\n * the (browser) user.\n */\n\nconst DEFAULT_KEYS = {\n  annotationPrivacy: 'hypothesis.privacy',\n  focusedGroup: 'hypothesis.groups.focus',\n};\n\n// @ngInject\nexport default function persistedDefaults(localStorage, store) {\n  /**\n   * Store subscribe callback for persisting changes to defaults. It will only\n   * persist defaults that it \"knows about\" via `DEFAULT_KEYS`.\n   */\n  function persistChangedDefaults(defaults, prevDefaults) {\n    for (let defaultKey in defaults) {\n      if (\n        prevDefaults[defaultKey] !== defaults[defaultKey] &&\n        defaultKey in DEFAULT_KEYS\n      ) {\n        localStorage.setItem(DEFAULT_KEYS[defaultKey], defaults[defaultKey]);\n      }\n    }\n  }\n\n  return {\n    /**\n     * Initially populate the store with any available persisted defaults,\n     * then subscribe to the store in order to persist any changes to\n     * those defaults.\n     */\n    init() {\n      // Read persisted defaults into the store\n      Object.keys(DEFAULT_KEYS).forEach(defaultKey => {\n        // `localStorage.getItem` will return `null` for a non-existent key\n        const defaultValue = localStorage.getItem(DEFAULT_KEYS[defaultKey]);\n        store.setDefault(defaultKey, defaultValue);\n      });\n\n      // Listen for changes to those defaults from the store and persist them\n      watch(store.subscribe, () => store.getDefaults(), persistChangedDefaults);\n    },\n  };\n}\n",
    "import * as queryString from 'query-string';\n\n/**\n * A service that manages the association between the route and route parameters\n * implied by the URL and the corresponding route state in the store.\n */\n// @ngInject\nexport default function router($window, store) {\n  /**\n   * Return the name and parameters of the current route.\n   */\n  function currentRoute() {\n    const path = $window.location.pathname;\n    const pathSegments = path.slice(1).split('/');\n    const params = queryString.parse($window.location.search);\n\n    let route;\n    switch (pathSegments[0]) {\n      case 'a':\n        route = 'annotation';\n        params.id = pathSegments[1] || '';\n        break;\n      case 'stream':\n        route = 'stream';\n        break;\n      default:\n        route = 'sidebar';\n        break;\n    }\n\n    return { route, params };\n  }\n\n  /**\n   * Generate a URL for a given route.\n   */\n  function routeUrl(name, params = {}) {\n    let url;\n    const queryParams = { ...params };\n\n    switch (name) {\n      case 'annotation':\n        {\n          const id = params.id;\n          // @ts-ignore - TS doesn't know what properties `queryParams` has.\n          delete queryParams.id;\n          url = `/a/${id}`;\n        }\n        break;\n      case 'stream':\n        url = '/stream';\n        break;\n      default:\n        throw new Error(`Cannot generate URL for route \"${name}\"`);\n    }\n\n    const query = queryString.stringify(queryParams);\n    if (query.length > 0) {\n      url += '?' + query;\n    }\n\n    return url;\n  }\n\n  let didRegisterPopstateListener = false;\n\n  /**\n   * Synchronize the route name and parameters in the store with the current\n   * URL.\n   *\n   * The first call to this method also registers a listener for future back/forwards\n   * navigation in the browser.\n   */\n  function sync() {\n    const { route, params } = currentRoute();\n    store.changeRoute(route, params);\n\n    // Set up listener for back/forward navigation. We do this in `sync()` to\n    // avoid the route being changed by a \"popstate\" emitted by the browser on\n    // document load (which Safari and Chrome do).\n    if (!didRegisterPopstateListener) {\n      $window.addEventListener('popstate', () => {\n        // All the state we need to update the route is contained in the URL, which\n        // has already been updated at this point, so just sync the store route\n        // to match the URL.\n        sync();\n      });\n      didRegisterPopstateListener = true;\n    }\n  }\n\n  /**\n   * Navigate to a given route.\n   *\n   * @param {string} name\n   * @param {Object} params\n   */\n  function navigate(name, params) {\n    $window.history.pushState({}, '', routeUrl(name, params));\n    sync();\n  }\n\n  return { sync, navigate };\n}\n",
    "import * as urlUtil from '../util/url';\n\n/**\n * A function that returns an absolute URL given a link name and params, by\n * expanding named URL templates received from the annotation service's API.\n *\n * The links object from the API is a map of link names to URL templates:\n *\n * {\n *   signup: \"http://localhost:5000/signup\",\n *   user: \"http://localhost:5000/u/:user\",\n *   ...\n * }\n *\n * Given a link name (e.g. 'user') and params (e.g. {user: 'bob'}) return\n * an absolute URL by expanding the named URL template from the API with the\n * given params (e.g. \"http://localhost:5000/u/bob\").\n *\n * Before the links object has been received from the API this function\n * always returns empty strings as the URLs. After the links object has been\n * received from the API this function starts returning the real URLs.\n *\n * @callback ServiceUrlGetter\n * @param {string} linkName - The name of the link to expand\n * @param {object} [params] - The params with which to expand the link\n * @returns {string} The expanded absolute URL, or an empty string if the\n *                   links haven't been received from the API yet\n * @throws {Error} If the links have been received from the API but the given\n *                 linkName is unknown\n * @throws {Error} If one or more of the params given isn't used in the URL\n *                 template\n */\n\n/**\n * @return {ServiceUrlGetter}\n * @ngInject\n */\nexport default function serviceUrl(store, apiRoutes) {\n  apiRoutes\n    .links()\n    .then(store.updateLinks)\n    .catch(function (error) {\n      console.warn('The links API request was rejected: ' + error.message);\n    });\n\n  return function (linkName, params) {\n    const links = store.getState().links;\n\n    if (links === null) {\n      return '';\n    }\n\n    const path = links[linkName];\n\n    if (!path) {\n      throw new Error('Unknown link ' + linkName);\n    }\n\n    params = params || {};\n    const url = urlUtil.replaceURLParams(path, params);\n\n    const unused = Object.keys(url.params);\n    if (unused.length > 0) {\n      throw new Error('Unknown link parameters: ' + unused.join(', '));\n    }\n\n    return url.url;\n  };\n}\n",
    "import serviceConfig from '../service-config';\nimport * as retryUtil from '../util/retry';\nimport * as sentry from '../util/sentry';\n\nconst CACHE_TTL = 5 * 60 * 1000; // 5 minutes\n\n/** @typedef {import('../../types/api').Profile} Profile */\n\n/**\n * This service handles fetching the user's profile, updating profile settings\n * and logging out.\n *\n * Access to the current profile is exposed via the `state` property.\n *\n * @ngInject\n */\nexport default function session(\n  analytics,\n  store,\n  api,\n  auth,\n  settings,\n  toastMessenger\n) {\n  // Cache the result of load()\n  let lastLoad;\n  let lastLoadTime;\n\n  // Return the authority from the first service defined in the settings.\n  // Return null if there are no services defined in the settings.\n  function getAuthority() {\n    const service = serviceConfig(settings);\n    if (service === null) {\n      return null;\n    }\n    return service.authority;\n  }\n\n  // Options to pass to `retry.operation` when fetching the user's profile.\n  const profileFetchRetryOpts = {};\n\n  /**\n   * Fetch the user's profile from the annotation service.\n   *\n   * If the profile has been previously fetched within `CACHE_TTL` ms, then this\n   * method returns a cached profile instead of triggering another fetch.\n   *\n   * @return {Promise<Profile>} A promise for the user's profile data.\n   */\n  function load() {\n    if (!lastLoadTime || Date.now() - lastLoadTime > CACHE_TTL) {\n      // The load attempt is automatically retried with a backoff.\n      //\n      // This serves to make loading the app in the extension cope better with\n      // flakey connectivity but it also throttles the frequency of calls to\n      // the /app endpoint.\n      lastLoadTime = Date.now();\n      lastLoad = retryUtil\n        .retryPromiseOperation(function () {\n          const authority = getAuthority();\n          const opts = {};\n          if (authority) {\n            opts.authority = authority;\n          }\n          return api.profile.read(opts);\n        }, profileFetchRetryOpts)\n        .then(function (session) {\n          update(session);\n          lastLoadTime = Date.now();\n          return session;\n        })\n        .catch(function (err) {\n          lastLoadTime = null;\n          throw err;\n        });\n    }\n    return lastLoad;\n  }\n\n  /**\n   * Store the preference server-side that the user dismissed the sidebar\n   * tutorial and then update the local profile data.\n   */\n  function dismissSidebarTutorial() {\n    return api.profile\n      .update({}, { preferences: { show_sidebar_tutorial: false } })\n      .then(update);\n  }\n\n  /**\n   * Update the local profile data.\n   *\n   * This method can be used to update the profile data in the client when new\n   * data is pushed from the server via the real-time API.\n   *\n   * @param {Profile} model\n   * @return {Profile} The updated profile data\n   */\n  function update(model) {\n    const prevSession = store.profile();\n    const userChanged = model.userid !== prevSession.userid;\n\n    store.updateProfile(model);\n\n    lastLoad = Promise.resolve(model);\n    lastLoadTime = Date.now();\n\n    if (userChanged) {\n      // Associate error reports with the current user in Sentry.\n      if (model.userid) {\n        sentry.setUserInfo({\n          id: model.userid,\n        });\n      } else {\n        sentry.setUserInfo(null);\n      }\n    }\n\n    // Return the model\n    return model;\n  }\n\n  /**\n   * Log the user out of the current session.\n   */\n  function logout() {\n    const loggedOut = auth.logout().then(() => {\n      // Re-fetch the logged-out user's profile.\n      return reload();\n    });\n\n    return loggedOut\n      .catch(function (err) {\n        toastMessenger.error('Log out failed');\n        analytics.track(analytics.events.LOGOUT_FAILURE);\n        throw new Error(err);\n      })\n      .then(function () {\n        analytics.track(analytics.events.LOGOUT_SUCCESS);\n      });\n  }\n\n  /**\n   * Clear the cached profile information and re-fetch it from the server.\n   *\n   * This can be used to refresh the user's profile state after logging in.\n   *\n   * @return {Promise<Profile>}\n   */\n  function reload() {\n    lastLoad = null;\n    lastLoadTime = null;\n    return load();\n  }\n\n  auth.on('oauthTokensChanged', () => {\n    reload();\n  });\n\n  return {\n    dismissSidebarTutorial,\n    load,\n    logout,\n    reload,\n\n    // Exposed for use in tests\n    profileFetchRetryOpts,\n\n    // For the moment, we continue to expose the session state as a property on\n    // this service. In future, other services which access the session state\n    // will do so directly from store or via selector functions\n    get state() {\n      return store.profile();\n    },\n\n    update,\n  };\n}\n",
    "/**\n * @typedef {'equals'|'one_of'} Operator\n */\n\n/**\n * Filter clause against which annotation updates are tested before being\n * sent to the client.\n *\n * @typedef FilterClause\n * @prop {string} field\n * @prop {Operator} operator\n * @prop {any} value\n * @prop {boolean} case_sensitive - TODO: Backend doesn't use this at present,\n *   but it seems important for certain fields (eg. ID).\n */\n\n/**\n * @typedef Filter\n * @prop {string} match_policy - TODO: Remove this, the backend doesn't use it any more.\n * @prop {FilterClause[]} clauses\n * @prop {Object} actions - TODO: Remove this, the backend doesn't use it any more.\n *  @prop {boolean} [actions.create]\n *  @prop {boolean} [actions.update]\n *  @prop {boolean} [actions.delete]\n */\n\n/**\n * Return a filter which matches every update that is visible to the current user.\n *\n * @return {Filter}\n */\nfunction defaultFilter() {\n  return {\n    match_policy: 'include_any',\n    clauses: [],\n    actions: {\n      create: true,\n      update: true,\n      delete: true,\n    },\n  };\n}\n\n/**\n * StreamFilter generates JSON-serializable configuration objects that\n * control which real-time updates are received from the annotation service.\n *\n * See https://github.com/hypothesis/h/blob/master/h/streamer/filter.py\n * for the schema.\n */\nexport default class StreamFilter {\n  constructor() {\n    this.filter = defaultFilter();\n  }\n\n  /**\n   * Add a matching clause to the configuration.\n   *\n   * @param {string} field - Field to filter by\n   * @param {Operator} operator - How to filter\n   * @param {any} value - Value to match\n   * @param {boolean} caseSensitive - Whether matching should be case sensitive\n   */\n  addClause(field, operator, value, caseSensitive = false) {\n    this.filter.clauses.push({\n      field,\n      operator,\n      value,\n      case_sensitive: caseSensitive,\n    });\n    return this;\n  }\n\n  /** Return the JSON-serializable filtering configuration. */\n  getFilter() {\n    return this.filter;\n  }\n\n  /** Reset the configuration to return all updates. */\n  resetFilter() {\n    this.filter = defaultFilter();\n    return this;\n  }\n}\n",
    "import * as queryString from 'query-string';\n\nimport warnOnce from '../../shared/warn-once';\nimport { generateHexString } from '../util/random';\nimport Socket from '../websocket';\nimport { watch } from '../util/watch';\n\n/**\n * Open a new WebSocket connection to the Hypothesis push notification service.\n * Only one websocket connection may exist at a time, any existing socket is\n * closed.\n */\n// @ngInject\nexport default function Streamer(store, auth, groups, session, settings) {\n  // The randomly generated session ID\n  const clientId = generateHexString(32);\n\n  // The socket instance for this Streamer instance\n  let socket;\n\n  // Client configuration messages, to be sent each time a new connection is\n  // established.\n  const configMessages = {};\n\n  function handleAnnotationNotification(message) {\n    const action = message.options.action;\n    const annotations = message.payload;\n\n    switch (action) {\n      case 'create':\n      case 'update':\n      case 'past':\n        store.receiveRealTimeUpdates({ updatedAnnotations: annotations });\n        break;\n      case 'delete':\n        store.receiveRealTimeUpdates({ deletedAnnotations: annotations });\n        break;\n    }\n\n    if (store.route() !== 'sidebar') {\n      applyPendingUpdates();\n    }\n  }\n\n  function handleSessionChangeNotification(message) {\n    session.update(message.model);\n    groups.load();\n  }\n\n  function handleSocketOnError(event) {\n    warnOnce('Error connecting to H push notification service:', event);\n\n    // In development, warn if the connection failure might be due to\n    // the app's origin not having been whitelisted in the H service's config.\n    //\n    // Unfortunately the error event does not provide a way to get at the\n    // HTTP status code for HTTP -> WS upgrade requests.\n    const websocketHost = new URL(settings.websocketUrl).hostname;\n    if (['localhost', '127.0.0.1'].indexOf(websocketHost) !== -1) {\n      warnOnce(\n        'Check that your H service is configured to allow ' +\n          'WebSocket connections from ' +\n          window.location.origin\n      );\n    }\n  }\n\n  function handleSocketOnMessage(event) {\n    const message = JSON.parse(event.data);\n    if (!message) {\n      return;\n    }\n\n    if (message.type === 'annotation-notification') {\n      handleAnnotationNotification(message);\n    } else if (message.type === 'session-change') {\n      handleSessionChangeNotification(message);\n    } else if (message.type === 'whoyouare') {\n      const userid = store.profile().userid;\n      if (message.userid !== userid) {\n        console.warn(\n          'WebSocket user ID \"%s\" does not match logged-in ID \"%s\"',\n          message.userid,\n          userid\n        );\n      }\n    } else {\n      warnOnce('received unsupported notification', message.type);\n    }\n  }\n\n  function sendClientConfig() {\n    Object.keys(configMessages).forEach(function (key) {\n      if (configMessages[key]) {\n        socket.send(configMessages[key]);\n      }\n    });\n  }\n\n  /**\n   * Send a configuration message to the push notification service.\n   * Each message is associated with a key, which is used to re-send\n   * configuration data to the server in the event of a reconnection.\n   */\n  function setConfig(key, configMessage) {\n    configMessages[key] = configMessage;\n    if (socket && socket.isConnected()) {\n      socket.send(configMessage);\n    }\n  }\n\n  const _connect = function () {\n    // If we have no URL configured, don't do anything.\n    if (!settings.websocketUrl) {\n      return Promise.resolve();\n    }\n\n    return auth\n      .tokenGetter()\n      .then(function (token) {\n        let url;\n        if (token) {\n          // Include the access token in the URL via a query param. This method\n          // is used to send credentials because the `WebSocket` constructor does\n          // not support setting the `Authorization` header directly as we do for\n          // other API requests.\n          const parsedURL = new URL(settings.websocketUrl);\n          const queryParams = queryString.parse(parsedURL.search);\n          queryParams.access_token = token;\n          parsedURL.search = queryString.stringify(queryParams);\n          url = parsedURL.toString();\n        } else {\n          url = settings.websocketUrl;\n        }\n\n        socket = new Socket(url);\n\n        socket.on('open', sendClientConfig);\n        socket.on('error', handleSocketOnError);\n        socket.on('message', handleSocketOnMessage);\n\n        // Configure the client ID\n        setConfig('client-id', {\n          messageType: 'client_id',\n          value: clientId,\n        });\n\n        // Send a \"whoami\" message. The server will respond with a \"whoyouare\"\n        // reply which is useful for verifying that authentication worked as\n        // expected.\n        setConfig('auth-check', {\n          type: 'whoami',\n          id: 1,\n        });\n      })\n      .catch(function (err) {\n        console.error(\n          'Failed to fetch token for WebSocket authentication',\n          err\n        );\n      });\n  };\n\n  let reconnectSetUp = false;\n  /**\n   * Set up automatic reconnecting when user changes.\n   */\n  function setUpAutoReconnect() {\n    if (reconnectSetUp) {\n      return;\n    }\n    reconnectSetUp = true;\n\n    // Reconnect when user changes, as auth token will have changed\n    watch(\n      store.subscribe,\n      () => store.profile().userid,\n      () => {\n        reconnect();\n      }\n    );\n  }\n\n  /**\n   * Connect to the Hypothesis real time update service.\n   *\n   * If the service has already connected this does nothing.\n   *\n   * @return {Promise} Promise which resolves once the WebSocket connection\n   *                   process has started.\n   */\n  function connect() {\n    setUpAutoReconnect();\n    if (socket) {\n      return Promise.resolve();\n    }\n    return _connect();\n  }\n\n  /**\n   * Connect to the Hypothesis real time update service.\n   *\n   * If the service has already connected this closes the existing connection\n   * and reconnects.\n   *\n   * @return {Promise} Promise which resolves once the WebSocket connection\n   *                   process has started.\n   */\n  function reconnect() {\n    if (socket) {\n      socket.close();\n    }\n\n    return _connect();\n  }\n\n  function applyPendingUpdates() {\n    const updates = Object.values(store.pendingUpdates());\n    if (updates.length) {\n      store.addAnnotations(updates);\n    }\n\n    const deletions = Object.keys(store.pendingDeletions()).map(id => ({ id }));\n    if (deletions.length) {\n      store.removeAnnotations(deletions);\n    }\n\n    store.clearPendingUpdates();\n  }\n\n  this.applyPendingUpdates = applyPendingUpdates;\n  this.clientId = clientId;\n  this.configMessages = configMessages;\n  this.connect = connect;\n  this.reconnect = reconnect;\n  this.setConfig = setConfig;\n}\n",
    "/**\n * @typedef Tag\n * @property {string} text - The label of the tag\n * @property {number} count - The number of times this tag has been used.\n * @property {number} updated - The timestamp when this tag was last used.\n */\n\n/**\n * Service for fetching tag suggestions and storing data to generate them.\n *\n * The `tags` service stores metadata about recently used tags to local storage\n * and provides a `filter` method to fetch tags matching a query, ranked based\n * on frequency of usage.\n */\n// @ngInject\nexport default function tags(localStorage) {\n  const TAGS_LIST_KEY = 'hypothesis.user.tags.list';\n  const TAGS_MAP_KEY = 'hypothesis.user.tags.map';\n\n  /**\n   * Return a list of tag suggestions matching `query`.\n   *\n   * @param {string} query\n   * @param {number|null} limit - Optional limit of the results.\n   * @return {Tag[]} List of matching tags\n   */\n  function filter(query, limit = null) {\n    const savedTags = localStorage.getObject(TAGS_LIST_KEY) || [];\n    let resultCount = 0;\n    return savedTags.filter(e => {\n      if (e.toLowerCase().indexOf(query.toLowerCase()) !== -1) {\n        if (limit === null || resultCount < limit) {\n          // limit allows a subset of the results\n          // See https://github.com/hypothesis/client/issues/1606\n          ++resultCount;\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Update the list of stored tag suggestions based on the tags that a user has\n   * entered for a given annotation.\n   *\n   * @param {Tag[]} tags - List of tags.\n   */\n  function store(tags) {\n    // Update the stored (tag, frequency) map.\n    const savedTags = localStorage.getObject(TAGS_MAP_KEY) || {};\n    tags.forEach(tag => {\n      if (savedTags[tag.text]) {\n        savedTags[tag.text].count += 1;\n        savedTags[tag.text].updated = Date.now();\n      } else {\n        savedTags[tag.text] = {\n          text: tag.text,\n          count: 1,\n          updated: Date.now(),\n        };\n      }\n    });\n    localStorage.setObject(TAGS_MAP_KEY, savedTags);\n\n    // Sort tag suggestions by frequency.\n    const tagsList = Object.keys(savedTags).sort((t1, t2) => {\n      if (savedTags[t1].count !== savedTags[t2].count) {\n        return savedTags[t2].count - savedTags[t1].count;\n      }\n      return t1.localeCompare(t2);\n    });\n    localStorage.setObject(TAGS_LIST_KEY, tagsList);\n  }\n\n  return {\n    filter,\n    store,\n  };\n}\n",
    "/**\n * @typedef {import('../util/build-thread').Thread} Thread\n */\n\n// @ngInject\nexport default function threadsService(store) {\n  /**\n   * Make this thread and all of its children \"visible\". This has the effect of\n   * \"unhiding\" a thread which is currently hidden by an applied search filter\n   * (as well as its child threads). Only threads that are not currently visible\n   * will be forced visible.\n   *\n   * @param {Thread} thread\n   */\n  function forceVisible(thread) {\n    thread.children.forEach(child => {\n      forceVisible(child);\n    });\n    if (!thread.visible && thread.annotation) {\n      store.setForcedVisible(thread.annotation.$tag, true);\n    }\n  }\n\n  return {\n    forceVisible,\n  };\n}\n",
    "/**\n * A service for managing toast messages. The service will auto-dismiss and\n * remove toast messages created with `#success()` or `#error()`. Added\n * messages may be manually dismissed with the `#dismiss()` method.\n */\nimport { generateHexString } from '../util/random';\n\n// How long toast messages should be displayed before they are dismissed, in ms\nconst MESSAGE_DISPLAY_TIME = 5000;\n// Delay before removing the message entirely (allows animations to complete)\nconst MESSAGE_DISMISS_DELAY = 500;\n\n/**\n * Additional control over the display of a particular message.\n *\n * @typedef {Object} MessageOptions\n * @prop {boolean} [autoDismiss=true] - Whether the toast message automatically disappears.\n * @prop {string} [moreInfoURL=''] - Optional URL for users to visit for \"more info\"\n */\n\n// @ngInject\nexport default function toastMessenger(store) {\n  /**\n   * Update a toast message's dismiss status and set a timeout to remove\n   * it after a bit. This allows effects/animations to happen before the\n   * message is removed entirely.\n   *\n   * @param {string} messageId - The value of the `id` property for the\n   *                             message that is to be dismissed.\n   */\n  const dismiss = messageId => {\n    const message = store.getToastMessage(messageId);\n    if (message && !message.isDismissed) {\n      store.updateToastMessage({ ...message, isDismissed: true });\n      setTimeout(() => {\n        store.removeToastMessage(messageId);\n      }, MESSAGE_DISMISS_DELAY);\n    }\n  };\n\n  /**\n   * Add a new toast message to the store and set a timeout to dismiss it\n   * after some time. This method will not add a message that is already\n   * extant in the store's collection of toast messages (i.e. has the same\n   * `type` and `message` text of an existing message).\n   *\n   * @param {('error'|'success'|'notice')} type\n   * @param {string} messageText - The message to be rendered\n   * @param {MessageOptions} [options]\n   */\n  const addMessage = (\n    type,\n    messageText,\n    { autoDismiss = true, moreInfoURL = '' } = {}\n  ) => {\n    // Do not add duplicate messages (messages with the same type and text)\n    if (store.hasToastMessage(type, messageText)) {\n      return;\n    }\n\n    const id = generateHexString(10);\n    const message = { type, id, message: messageText, moreInfoURL };\n\n    store.addToastMessage({\n      isDismissed: false,\n      ...message,\n    });\n\n    if (autoDismiss) {\n      // Attempt to dismiss message after a set time period. NB: The message may\n      // have been removed by other mechanisms at this point; do not assume its\n      // presence.\n      setTimeout(() => {\n        dismiss(id);\n      }, MESSAGE_DISPLAY_TIME);\n    }\n  };\n\n  /**\n   * Add an error toast message with `messageText`\n   *\n   * @param {string} messageText\n   * @param {MessageOptions} options\n   */\n  const error = (messageText, options) => {\n    addMessage('error', messageText, options);\n  };\n\n  /**\n   * Add a success toast message with `messageText`\n   *\n   * @param {string} messageText\n   * @param {MessageOptions} options\n   */\n  const success = (messageText, options) => {\n    addMessage('success', messageText, options);\n  };\n\n  /**\n   * Add a warn/notice toast message with `messageText`\n   *\n   * @param {string} messageText\n   * @param {MessageOptions} options\n   */\n  const notice = (messageText, options) => {\n    addMessage('notice', messageText, options);\n  };\n\n  return {\n    dismiss,\n    error,\n    success,\n    notice,\n  };\n}\n",
    "/* global process */\n\nimport * as redux from 'redux';\nimport thunk from 'redux-thunk';\n\nimport immutable from '../util/immutable';\n\nimport { createReducer, bindSelectors } from './util';\n\n/**\n * Create a Redux store from a set of _modules_.\n *\n * Each module defines the logic related to a particular piece of the application\n * state, including:\n *\n *  - The initial value of that state\n *  - The _actions_ that can change that state\n *  - The _selectors_ for reading that state or computing things\n *    from that state.\n *\n * On top of the standard Redux store methods, the returned store also exposes\n * each action and selector from the input modules as a method which operates on\n * the store.\n *\n * @param {Object[]} modules\n * @param {any[]} [initArgs] - Arguments to pass to each state module's `init` function\n * @param {any[]} [middleware] - List of additional Redux middlewares to use\n */\nexport default function createStore(modules, initArgs = [], middleware = []) {\n  // Create the initial state and state update function.\n\n  // Namespaced objects for initial states.\n  const initialState = {};\n\n  /**\n   * Namespaced reducers from each module.\n   * @type {import(\"redux\").ReducersMapObject} allReducers\n   */\n  const allReducers = {};\n  // Namespaced selectors from each module.\n  const allSelectors = {};\n\n  // Iterate over each module and prep each module's:\n  //    1. state\n  //    2. reducers\n  //    3. selectors\n  //\n  modules.forEach(module => {\n    if (module.namespace) {\n      initialState[module.namespace] = module.init(...initArgs);\n\n      allReducers[module.namespace] = createReducer(module.update);\n      allSelectors[module.namespace] = {\n        selectors: module.selectors,\n        rootSelectors: module.rootSelectors || {},\n      };\n    } else {\n      console.warn('Store module does not specify a namespace', module);\n    }\n  });\n\n  const defaultMiddleware = [\n    // The `thunk` middleware handles actions which are functions.\n    // This is used to implement actions which have side effects or are\n    // asynchronous (see https://github.com/gaearon/redux-thunk#motivation)\n    thunk,\n  ];\n\n  const enhancer = redux.applyMiddleware(...defaultMiddleware, ...middleware);\n\n  // Create the combined reducer from the reducers for each module.\n  let reducer = redux.combineReducers(allReducers);\n\n  // In debug builds, freeze the new state after each action to catch any attempts\n  // to mutate it, which indicates a bug since it is supposed to be immutable.\n  if (process.env.NODE_ENV !== 'production') {\n    const originalReducer = reducer;\n    reducer = (state, action) => immutable(originalReducer(state, action));\n  }\n\n  // Create the store.\n  const store = redux.createStore(reducer, initialState, enhancer);\n\n  // Add actions and selectors as methods to the store.\n  const actions = Object.assign({}, ...modules.map(m => m.actions));\n  const boundActions = redux.bindActionCreators(actions, store.dispatch);\n  const boundSelectors = bindSelectors(allSelectors, store.getState);\n\n  Object.assign(store, boundActions, boundSelectors);\n\n  return store;\n}\n",
    "/**\n * A debug utility that prints information about internal application state\n * changes to the console.\n *\n * Debugging is enabled by setting `window.debug` to a truthy value.\n *\n * When enabled, every action that changes application state will be printed\n * to the console, along with the application state before and after the action\n * was handled.\n *\n * @param {import(\"redux\").Store} store\n */\nexport default function debugMiddleware(store) {\n  /* eslint-disable no-console */\n  let serial = 0;\n\n  return function (next) {\n    return function (action) {\n      // @ts-ignore The window interface needs to be expanded to include this property\n      if (!window.debug) {\n        next(action);\n        return;\n      }\n\n      ++serial;\n\n      const groupTitle = action.type + ' (' + serial.toString() + ')';\n      console.group(groupTitle);\n      console.log('Prev State:', store.getState());\n      console.log('Action:', action);\n\n      next(action);\n\n      console.log('Next State:', store.getState());\n      console.groupEnd();\n    };\n  };\n  /* eslint-enable no-console */\n}\n",
    "/**\n * Central store of state for the sidebar application, managed using\n * [Redux](http://redux.js.org/).\n *\n * State management in Redux apps work as follows:\n *\n *  1. All important application state is stored in a single, immutable object.\n *  2. The user interface is a presentation of this state. Interaction with the\n *     UI triggers updates by creating `actions`.\n *  3. Actions are plain JS objects which describe some event that happened in\n *     the application. Updates happen by passing actions to a `reducer`\n *     function which takes the current application state, the action and\n *     returns the new application state.\n *\n *     The process of updating the app state using an action is known as\n *     'dispatching' the action.\n *  4. Other parts of the app can subscribe to changes in the app state.\n *     This is used to to update the UI etc.\n *\n * \"middleware\" functions can wrap the dispatch process in order to implement\n *  logging, trigger side effects etc.\n *\n * Tests for a given action consist of:\n *\n *  1. Checking that the UI (or other event source) dispatches the correct\n *     action when something happens.\n *  2. Checking that given an initial state, and an action, a reducer returns\n *     the correct resulting state.\n *  3. Checking that the UI correctly presents a given state.\n */\n\nimport createStore from './create-store';\nimport debugMiddleware from './debug-middleware';\nimport activity from './modules/activity';\nimport annotations from './modules/annotations';\nimport defaults from './modules/defaults';\nimport directLinked from './modules/direct-linked';\nimport drafts from './modules/drafts';\nimport frames from './modules/frames';\nimport groups from './modules/groups';\nimport links from './modules/links';\nimport realTimeUpdates from './modules/real-time-updates';\nimport route from './modules/route';\nimport selection from './modules/selection';\nimport session from './modules/session';\nimport sidebarPanels from './modules/sidebar-panels';\nimport toastMessages from './modules/toast-messages';\nimport viewer from './modules/viewer';\n\n/**\n * // Base redux store\n * @typedef {import(\"redux\").Store} ReduxStore\n *\n * // Custom stores\n * @typedef {import(\"./modules/activity\").ActivityStore} ActivityStore\n * @typedef {import(\"./modules/annotations\").AnnotationsStore} AnnotationsStore\n * @typedef {import(\"./modules/defaults\").DefaultsStore} DefaultsStore\n * @typedef {import(\"./modules/direct-linked\").DirectLinkedStore} DirectLinkedStore\n * @typedef {import(\"./modules/drafts\").DraftsStore} DraftsStore\n * @typedef {import(\"./modules/frames\").FramesStore} FramesStore\n * @typedef {import(\"./modules/groups\").GroupsStore} GroupsStore\n * @typedef {import(\"./modules/links\").LinksStore} LinksStore\n * @typedef {import(\"./modules/real-time-updates\").RealTimeUpdatesStore} RealTimeUpdatesStore\n * @typedef {import(\"./modules/route\").RouteStore} RouteStore\n * @typedef {import(\"./modules/selection\").SelectionStore} SelectionStore\n * @typedef {import(\"./modules/session\").SessionStore} SessionStore\n * @typedef {import(\"./modules/sidebar-panels\").SidebarPanelsStore} SidebarPanelsStore\n * @typedef {import(\"./modules/toast-messages\").ToastMessagesStore} ToastMessagesStore\n * @typedef {import(\"./modules/viewer\").ViewerStore} ViewerStore\n * // TODO: add more stores\n *\n * // Combine all stores\n * @typedef {ReduxStore &\n *  ActivityStore &\n *  AnnotationsStore &\n *  DefaultsStore &\n *  DirectLinkedStore &\n *  DraftsStore &\n *  FramesStore &\n *  GroupsStore &\n *  LinksStore &\n *  RealTimeUpdatesStore &\n *  RouteStore &\n *  SelectionStore &\n *  SessionStore &\n *  SidebarPanelsStore &\n *  ToastMessagesStore &\n *  ViewerStore} SidebarStore\n */\n\n/**\n * Factory which creates the sidebar app's state store.\n *\n * Returns a Redux store augmented with methods for each action and selector in\n * the individual state modules. ie. `store.actionName(args)` dispatches an\n * action through the store and `store.selectorName(args)` invokes a selector\n * passing the current state of the store.\n *\n * @param {import('../../types/config').SidebarConfig} settings\n * @return {SidebarStore}\n */\n// @ngInject\nexport default function store(settings) {\n  const middleware = [debugMiddleware];\n\n  const modules = [\n    activity,\n    annotations,\n    defaults,\n    directLinked,\n    drafts,\n    frames,\n    links,\n    groups,\n    realTimeUpdates,\n    route,\n    selection,\n    session,\n    sidebarPanels,\n    toastMessages,\n    viewer,\n  ];\n  return /** @type {SidebarStore} */ (createStore(\n    modules,\n    [settings],\n    middleware\n  ));\n}\n",
    "/**\n * Store module which tracks activity happening in the application that may\n * need to be reflected in the UI.\n */\n\nimport { actionTypes } from '../util';\n\nfunction init() {\n  return {\n    /**\n     * Annotation `$tag`s that correspond to annotations with active API requests\n     */\n    activeAnnotationSaveRequests: [],\n    /**\n     * The number of API requests that have started and not yet completed.\n     */\n    activeApiRequests: 0,\n    /**\n     * The number of annotation fetches that have started and not yet completed.\n     */\n    activeAnnotationFetches: 0,\n    /**\n     * Have annotations ever been fetched?\n     */\n    hasFetchedAnnotations: false,\n  };\n}\n\nconst update = {\n  API_REQUEST_STARTED(state) {\n    return {\n      ...state,\n      activeApiRequests: state.activeApiRequests + 1,\n    };\n  },\n\n  API_REQUEST_FINISHED(state) {\n    if (state.activeApiRequests === 0) {\n      throw new Error(\n        'API_REQUEST_FINISHED action when no requests were active'\n      );\n    }\n\n    return {\n      ...state,\n      activeApiRequests: state.activeApiRequests - 1,\n    };\n  },\n\n  ANNOTATION_SAVE_STARTED(state, action) {\n    let addToStarted = [];\n    if (\n      action.annotation.$tag &&\n      !state.activeAnnotationSaveRequests.includes(action.annotation.$tag)\n    ) {\n      addToStarted.push(action.annotation.$tag);\n    }\n    const updatedSaves = state.activeAnnotationSaveRequests.concat(\n      addToStarted\n    );\n    return {\n      ...state,\n      activeAnnotationSaveRequests: updatedSaves,\n    };\n  },\n\n  ANNOTATION_SAVE_FINISHED(state, action) {\n    const updatedSaves = state.activeAnnotationSaveRequests.filter(\n      $tag => $tag !== action.annotation.$tag\n    );\n    return {\n      ...state,\n      activeAnnotationSaveRequests: updatedSaves,\n    };\n  },\n\n  ANNOTATION_FETCH_STARTED(state) {\n    return {\n      ...state,\n      activeAnnotationFetches: state.activeAnnotationFetches + 1,\n    };\n  },\n\n  ANNOTATION_FETCH_FINISHED(state) {\n    if (state.activeAnnotationFetches === 0) {\n      throw new Error(\n        'ANNOTATION_FETCH_FINISHED action when no annotation fetches were active'\n      );\n    }\n\n    return {\n      ...state,\n      hasFetchedAnnotations: true,\n      activeAnnotationFetches: state.activeAnnotationFetches - 1,\n    };\n  },\n};\n\nconst actions = actionTypes(update);\n\n/** Action Creators */\n\nfunction annotationFetchStarted() {\n  return { type: actions.ANNOTATION_FETCH_STARTED };\n}\n\nfunction annotationFetchFinished() {\n  return { type: actions.ANNOTATION_FETCH_FINISHED };\n}\n\n/**\n * @param {object} annotation — annotation object with a `$tag` property\n */\nfunction annotationSaveStarted(annotation) {\n  return { type: actions.ANNOTATION_SAVE_STARTED, annotation };\n}\n\n/**\n * @param {object} annotation — annotation object with a `$tag` property\n */\nfunction annotationSaveFinished(annotation) {\n  return { type: actions.ANNOTATION_SAVE_FINISHED, annotation };\n}\n\nfunction apiRequestStarted() {\n  return { type: actions.API_REQUEST_STARTED };\n}\n\nfunction apiRequestFinished() {\n  return { type: actions.API_REQUEST_FINISHED };\n}\n\n/** Selectors */\n\nfunction hasFetchedAnnotations(state) {\n  return state.hasFetchedAnnotations;\n}\n\n/**\n * Return true when annotations are actively being fetched.\n */\nfunction isFetchingAnnotations(state) {\n  return state.activeAnnotationFetches > 0;\n}\n\n/**\n * Return true when any activity is happening in the app that needs to complete\n * before the UI is ready for interactivity with annotations.\n */\nfunction isLoading(state) {\n  return state.activeApiRequests > 0 || !state.hasFetchedAnnotations;\n}\n\n/**\n * Return `true` if `$tag` exists in the array of annotation `$tag`s that\n * have in-flight save requests, i.e. the annotation in question is actively\n * being saved to a remote service.\n *\n * @param {object} state\n * @param {object} annotation\n * @return {boolean}\n */\nfunction isSavingAnnotation(state, annotation) {\n  if (!annotation.$tag) {\n    return false;\n  }\n  return state.activeAnnotationSaveRequests.includes(annotation.$tag);\n}\n\n/** @typedef {import('../../../types/api').Annotation} Annotation */\n\n/**\n * @typedef ActivityStore\n *\n * // Actions\n * @prop {typeof annotationFetchStarted} annotationFetchStarted\n * @prop {typeof annotationFetchFinished} annotationFetchFinished\n * @prop {typeof annotationSaveStarted} annotationSaveStarted\n * @prop {typeof annotationSaveFinished} annotationSaveFinished\n * @prop {typeof apiRequestStarted} apiRequestStarted\n * @prop {typeof apiRequestFinished} apiRequestFinished\n *\n * // Selectors\n * @prop {() => boolean} hasFetchedAnnotations\n * @prop {() => boolean} isLoading\n * @prop {() => boolean} isFetchingAnnotations\n * @prop {(a: Annotation) => boolean} isSavingAnnotation\n */\n\nexport default {\n  init,\n  update,\n  namespace: 'activity',\n\n  actions: {\n    annotationFetchStarted,\n    annotationFetchFinished,\n    annotationSaveStarted,\n    annotationSaveFinished,\n    apiRequestStarted,\n    apiRequestFinished,\n  },\n\n  selectors: {\n    hasFetchedAnnotations,\n    isLoading,\n    isFetchingAnnotations,\n    isSavingAnnotation,\n  },\n};\n",
    "/**\n * State management for the set of annotations currently loaded into the\n * sidebar.\n */\n\n/** @typedef {import('../../../types/api').Annotation} Annotation */\n\n/**\n * @typedef AnnotationStub\n * @prop {string} [id] - service-provided identifier if annotation has been\n *       persisted to the service\n * @prop {string} [$tag] - local-generated identifier\n */\n\nimport { createSelector } from 'reselect';\n\nimport * as metadata from '../../util/annotation-metadata';\nimport { countIf, toTrueMap, trueKeys } from '../../util/collections';\nimport * as util from '../util';\n\nimport route from './route';\n\n/**\n * Return a copy of `current` with all matching annotations in `annotations`\n * removed (matched on identifier—`id` or `$tag`)\n *\n * Annotations in `annotations` may be complete annotations or \"stubs\" with only\n * the `id` field set.\n *\n * @param {Annotation[]} current\n * @param {AnnotationStub[]} annotations\n */\nfunction excludeAnnotations(current, annotations) {\n  const ids = {};\n  const tags = {};\n  annotations.forEach(function (annot) {\n    if (annot.id) {\n      ids[annot.id] = true;\n    }\n    if (annot.$tag) {\n      tags[annot.$tag] = true;\n    }\n  });\n  return current.filter(function (annot) {\n    const shouldRemove =\n      (annot.id && annot.id in ids) || (annot.$tag && annot.$tag in tags);\n    return !shouldRemove;\n  });\n}\n\nfunction findByID(annotations, id) {\n  return annotations.find(function (annot) {\n    return annot.id === id;\n  });\n}\n\nfunction findByTag(annotations, tag) {\n  return annotations.find(function (annot) {\n    return annot.$tag === tag;\n  });\n}\n\n/**\n * Set custom private fields on an annotation object about to be added to the\n * store's collection of `annotations`.\n *\n * `annotation` may either be new (unsaved) or a persisted annotation retrieved\n * from the service.\n *\n * @param {Object} annotation\n * @param {string} tag - The `$tag` value that should be used for this\n *                       if it doesn't have a `$tag` already\n * @return {Object} - annotation with local (`$*`) fields set\n */\nfunction initializeAnnotation(annotation, tag) {\n  let orphan = annotation.$orphan;\n\n  if (!annotation.id) {\n    // New annotations must be anchored\n    orphan = false;\n  }\n\n  return Object.assign({}, annotation, {\n    // Flag indicating whether waiting for the annotation to anchor timed out.\n    $anchorTimeout: false,\n    $tag: annotation.$tag || tag,\n    $orphan: orphan,\n  });\n}\n\nfunction init() {\n  return {\n    annotations: [],\n    // A set of annotations that are currently \"focused\" — e.g. hovered over in\n    // the UI\n    focused: {},\n    // A map of annotations that should appear as \"highlighted\", e.g. the\n    // target of a single-annotation view\n    highlighted: {},\n    // The local tag to assign to the next annotation that is loaded into the\n    // app\n    nextTag: 1,\n  };\n}\n\nconst update = {\n  ADD_ANNOTATIONS: function (state, action) {\n    const updatedIDs = {};\n    const updatedTags = {};\n\n    const added = [];\n    const unchanged = [];\n    const updated = [];\n    let nextTag = state.nextTag;\n\n    action.annotations.forEach(annot => {\n      let existing;\n      if (annot.id) {\n        existing = findByID(state.annotations, annot.id);\n      }\n      if (!existing && annot.$tag) {\n        existing = findByTag(state.annotations, annot.$tag);\n      }\n\n      if (existing) {\n        // Merge the updated annotation with the private fields from the local\n        // annotation\n        updated.push(Object.assign({}, existing, annot));\n        if (annot.id) {\n          updatedIDs[annot.id] = true;\n        }\n        if (existing.$tag) {\n          updatedTags[existing.$tag] = true;\n        }\n      } else {\n        added.push(initializeAnnotation(annot, 't' + nextTag));\n        ++nextTag;\n      }\n    });\n\n    state.annotations.forEach(annot => {\n      if (!updatedIDs[annot.id] && !updatedTags[annot.$tag]) {\n        unchanged.push(annot);\n      }\n    });\n\n    return {\n      annotations: added.concat(updated).concat(unchanged),\n      nextTag: nextTag,\n    };\n  },\n\n  CLEAR_ANNOTATIONS: function () {\n    return { annotations: [], focused: {}, highlighted: {} };\n  },\n\n  FOCUS_ANNOTATIONS: function (state, action) {\n    return { focused: toTrueMap(action.focusedTags) };\n  },\n\n  HIDE_ANNOTATION: function (state, action) {\n    const anns = state.annotations.map(function (ann) {\n      if (ann.id !== action.id) {\n        return ann;\n      }\n      return { ...ann, hidden: true };\n    });\n    return { annotations: anns };\n  },\n\n  HIGHLIGHT_ANNOTATIONS: function (state, action) {\n    return { highlighted: action.highlighted };\n  },\n\n  REMOVE_ANNOTATIONS: function (state, action) {\n    return {\n      annotations: [...action.remainingAnnotations],\n    };\n  },\n\n  UNHIDE_ANNOTATION: function (state, action) {\n    const anns = state.annotations.map(function (ann) {\n      if (ann.id !== action.id) {\n        return ann;\n      }\n      return Object.assign({}, ann, { hidden: false });\n    });\n    return { annotations: anns };\n  },\n\n  UPDATE_ANCHOR_STATUS: function (state, action) {\n    const annotations = state.annotations.map(function (annot) {\n      if (!action.statusUpdates.hasOwnProperty(annot.$tag)) {\n        return annot;\n      }\n\n      const state = action.statusUpdates[annot.$tag];\n      if (state === 'timeout') {\n        return Object.assign({}, annot, { $anchorTimeout: true });\n      } else {\n        return Object.assign({}, annot, { $orphan: state === 'orphan' });\n      }\n    });\n    return { annotations: annotations };\n  },\n\n  UPDATE_FLAG_STATUS: function (state, action) {\n    const annotations = state.annotations.map(function (annot) {\n      const match = annot.id && annot.id === action.id;\n      if (match) {\n        if (annot.flagged === action.isFlagged) {\n          return annot;\n        }\n\n        const newAnn = Object.assign({}, annot, {\n          flagged: action.isFlagged,\n        });\n        if (newAnn.moderation) {\n          const countDelta = action.isFlagged ? 1 : -1;\n          newAnn.moderation = Object.assign({}, annot.moderation, {\n            flagCount: annot.moderation.flagCount + countDelta,\n          });\n        }\n        return newAnn;\n      } else {\n        return annot;\n      }\n    });\n    return { annotations: annotations };\n  },\n};\n\nconst actions = util.actionTypes(update);\n\n/* Action creators */\n\n/**\n * Add these `annotations` to the current collection of annotations in the store.\n *\n * @param {Annotation[]} annotations - Array of annotation objects to add.\n */\nfunction addAnnotations(annotations) {\n  return function (dispatch, getState) {\n    const added = annotations.filter(annot => {\n      return !findByID(getState().annotations.annotations, annot.id);\n    });\n\n    dispatch({\n      type: actions.ADD_ANNOTATIONS,\n      annotations: annotations,\n      currentAnnotationCount: getState().annotations.annotations.length,\n    });\n\n    // If we're not in the sidebar, we're done here.\n    // FIXME Split the annotation-adding from the anchoring code; possibly\n    // move into service\n    if (route.selectors.route(getState().route) !== 'sidebar') {\n      return;\n    }\n\n    // If anchoring fails to complete in a reasonable amount of time, then\n    // we assume that the annotation failed to anchor. If it does later\n    // successfully anchor then the status will be updated.\n    const ANCHORING_TIMEOUT = 500;\n\n    const anchoringIDs = added\n      .filter(metadata.isWaitingToAnchor)\n      .map(ann => ann.id);\n    if (anchoringIDs.length > 0) {\n      setTimeout(() => {\n        // Find annotations which haven't yet been anchored in the document.\n        const anns = getState().annotations.annotations;\n        const annsStillAnchoring = anchoringIDs\n          .map(id => findByID(anns, id))\n          .filter(ann => ann && metadata.isWaitingToAnchor(ann));\n\n        // Mark anchoring as timed-out for these annotations.\n        const anchorStatusUpdates = annsStillAnchoring.reduce(\n          (updates, ann) => {\n            updates[ann.$tag] = 'timeout';\n            return updates;\n          },\n          {}\n        );\n        dispatch(updateAnchorStatus(anchorStatusUpdates));\n      }, ANCHORING_TIMEOUT);\n    }\n  };\n}\n\n/** Set the currently displayed annotations to the empty set. */\nfunction clearAnnotations() {\n  return { type: actions.CLEAR_ANNOTATIONS };\n}\n\n/**\n * Replace the current set of focused annotations with the annotations\n * identified by `tags`. All provided annotations (`tags`) will be set to\n * `true` in the `focused` map.\n *\n * @param {string[]} tags - Identifiers of annotations to focus\n */\nfunction focusAnnotations(tags) {\n  return {\n    type: actions.FOCUS_ANNOTATIONS,\n    focusedTags: tags,\n  };\n}\n\n/**\n * Update the local hidden state of an annotation.\n *\n * This updates an annotation to reflect the fact that it has been hidden from\n * non-moderators.\n */\nfunction hideAnnotation(id) {\n  return {\n    type: actions.HIDE_ANNOTATION,\n    id: id,\n  };\n}\n\n/**\n * Highlight annotations with the given `ids`.\n *\n * This is used to indicate the specific annotation in a thread that was\n * linked to for example. Replaces the current map of highlighted annotations.\n * All provided annotations (`ids`) will be set to `true` in the `highlighted`\n * map.\n *\n * @param {string[]} ids - annotations to highlight\n */\nfunction highlightAnnotations(ids) {\n  return {\n    type: actions.HIGHLIGHT_ANNOTATIONS,\n    highlighted: toTrueMap(ids),\n  };\n}\n\n/**\n * Remove annotations from the currently displayed set.\n *\n * @param {Annotation[]} annotations -\n *   Annotations to remove. These may be complete annotations or stubs which\n *   only contain an `id` property.\n */\nfunction removeAnnotations(annotations) {\n  return (dispatch, getState) => {\n    const remainingAnnotations = excludeAnnotations(\n      getState().annotations.annotations,\n      annotations\n    );\n    dispatch({\n      type: actions.REMOVE_ANNOTATIONS,\n      annotationsToRemove: annotations,\n      remainingAnnotations,\n    });\n  };\n}\n\n/**\n * Update the local hidden state of an annotation.\n *\n * This updates an annotation to reflect the fact that it has been made visible\n * to non-moderators.\n */\nfunction unhideAnnotation(id) {\n  return {\n    type: actions.UNHIDE_ANNOTATION,\n    id: id,\n  };\n}\n\n/**\n * Update the anchoring status of an annotation\n *\n * @param {{ [tag: string]: 'anchored'|'orphan'|'timeout'} } statusUpdates - A\n *        map of annotation tag to orphan status\n */\nfunction updateAnchorStatus(statusUpdates) {\n  return {\n    type: actions.UPDATE_ANCHOR_STATUS,\n    statusUpdates,\n  };\n}\n\n/**\n * Updating the flagged status of an annotation.\n *\n * @param {string} id - Annotation ID\n * @param {boolean} isFlagged - The flagged status of the annotation. True if\n *        the user has flagged the annotation.\n *\n */\nfunction updateFlagStatus(id, isFlagged) {\n  return {\n    type: actions.UPDATE_FLAG_STATUS,\n    id: id,\n    isFlagged: isFlagged,\n  };\n}\n\n/* Selectors */\n\n/**\n * Count the number of annotations (as opposed to notes or orphans)\n *\n * @type {(state: any) => number}\n */\nconst annotationCount = createSelector(\n  state => state.annotations,\n  annotations => countIf(annotations, metadata.isAnnotation)\n);\n\n/**\n * Does the annotation indicated by `id` exist in the collection?\n *\n * @param {string} id\n * @return {boolean}\n */\nfunction annotationExists(state, id) {\n  return state.annotations.some(annot => annot.id === id);\n}\n\n/**\n * Return the annotation with the given ID\n */\nfunction findAnnotationByID(state, id) {\n  return findByID(state.annotations, id);\n}\n\n/**\n * Return the IDs of annotations that correspond to `tags`.\n *\n * If an annotation does not have an ID because it has not been created on\n * the server, there will be no entry for it in the returned array.\n *\n * @param {string[]} tags - Local tags of annotations to look up\n */\nfunction findIDsForTags(state, tags) {\n  const ids = [];\n  tags.forEach(tag => {\n    const annot = findByTag(state.annotations, tag);\n    if (annot && annot.id) {\n      ids.push(annot.id);\n    }\n  });\n  return ids;\n}\n\n/**\n * Retrieve currently-focused annotation identifiers\n *\n * @type {(state: any) => string[]}\n */\nconst focusedAnnotations = createSelector(\n  state => state.focused,\n  focused => trueKeys(focused)\n);\n\n/**\n * Retrieve currently-highlighted annotation identifiers\n *\n * @type {(state: any) => string[]}\n */\nconst highlightedAnnotations = createSelector(\n  state => state.highlighted,\n  highlighted => trueKeys(highlighted)\n);\n\n/**\n * Is the annotation referenced by `$tag` currently focused?\n *\n * @param {string} $tag - annotation identifier\n * @return {boolean}\n */\nfunction isAnnotationFocused(state, $tag) {\n  return state.focused[$tag] === true;\n}\n\n/**\n * Are there any annotations still waiting to anchor?\n *\n * @type {(state: any) => boolean}\n */\nconst isWaitingToAnchorAnnotations = createSelector(\n  state => state.annotations,\n  annotations => annotations.some(metadata.isWaitingToAnchor)\n);\n\n/**\n * Return all loaded annotations that are not highlights and have not been saved\n * to the server\n *\n * @type {(state: any) => Annotation[]}\n */\nconst newAnnotations = createSelector(\n  state => state.annotations,\n  annotations =>\n    annotations.filter(ann => metadata.isNew(ann) && !metadata.isHighlight(ann))\n);\n\n/**\n * Return all loaded annotations that are highlights and have not been saved\n * to the server\n *\n * @type {(state: any) => Annotation[]}\n */\nconst newHighlights = createSelector(\n  state => state.annotations,\n  annotations =>\n    annotations.filter(ann => metadata.isNew(ann) && metadata.isHighlight(ann))\n);\n\n/**\n * Count the number of page notes currently in the collection\n *\n @type {(state: any) => number}\n */\nconst noteCount = createSelector(\n  state => state.annotations,\n  annotations => countIf(annotations, metadata.isPageNote)\n);\n\n/**\n * Count the number of orphans currently in the collection\n *\n * @type {(state: any) => number}\n */\nconst orphanCount = createSelector(\n  state => state.annotations,\n  annotations => countIf(annotations, metadata.isOrphan)\n);\n\n/**\n * Return all loaded annotations which have been saved to the server\n *\n * @return {Annotation[]}\n */\nfunction savedAnnotations(state) {\n  return state.annotations.filter(function (ann) {\n    return !metadata.isNew(ann);\n  });\n}\n\n/**\n * @typedef AnnotationsStore\n *\n * // Actions\n * @prop {typeof addAnnotations} addAnnotations\n * @prop {typeof clearAnnotations} clearAnnotations\n * @prop {typeof focusAnnotations} focusAnnotations\n * @prop {typeof hideAnnotation} hideAnnotation\n * @prop {typeof highlightAnnotations} highlightAnnotations\n * @prop {typeof removeAnnotations} removeAnnotations\n * @prop {typeof unhideAnnotation} unhideAnnotation\n * @prop {typeof updateAnchorStatus} updateAnchorStatus\n * @prop {typeof updateFlagStatus} updateFlagStatus\n \n *\n * // Selectors\n * @prop {() => number} annotationCount\n * @prop {(id: string) => boolean} annotationExists\n * @prop {(id: string) => Annotation} findAnnotationByID\n * @prop {(tags: string[]) => string[]} findIDsForTags\n * @prop {() => string[]} focusedAnnotations\n * @prop {() => string[]} highlightedAnnotations\n * @prop {(tag: string) => boolean} isAnnotationFocused\n * @prop {() => boolean} isWaitingToAnchorAnnotations\n * @prop {() => Annotation[]} newAnnotations\n * @prop {() => Annotation[]} newHighlights\n * @prop {() => number} noteCount\n * @prop {() => number} orphanCount\n * @prop {() => Annotation[]} savedAnnotations\n */\n\nexport default {\n  init: init,\n  namespace: 'annotations',\n  update: update,\n  actions: {\n    addAnnotations,\n    clearAnnotations,\n    focusAnnotations,\n    hideAnnotation,\n    highlightAnnotations,\n    removeAnnotations,\n    unhideAnnotation,\n    updateAnchorStatus,\n    updateFlagStatus,\n  },\n\n  selectors: {\n    annotationCount,\n    annotationExists,\n    findAnnotationByID,\n    findIDsForTags,\n    focusedAnnotations,\n    highlightedAnnotations,\n    isAnnotationFocused,\n    isWaitingToAnchorAnnotations,\n    newAnnotations,\n    newHighlights,\n    noteCount,\n    orphanCount,\n    savedAnnotations,\n  },\n};\n",
    "import * as util from '../util';\n\n/**\n * A store module for managing client-side user-convenience defaults.\n *\n * Example: the default privacy level for newly-created annotations\n * (`private` or `shared`). This default is updated when a user selects a\n * different publishing destination (e.g. `Post to [group name]` versus\n * `Post to Only Me`) from the menu rendered by the `AnnotationPublishControl`\n * component.\n *\n * At present, these defaults are persisted between app sessions in `localStorage`,\n * and their retrieval and re-persistence on change is handled in the\n * `persistedDefaults` service.\n */\n\nfunction init() {\n  /**\n   * Note that the persisted presence of any of these defaults cannot be\n   * guaranteed, so consumers of said defaults should be prepared to handle\n   * missing (i.e. `null`) values. As `null` is a sentinal value indicating\n   * \"not set/unavailable\", a `null` value for a default is otherwise invalid.\n   */\n  return {\n    annotationPrivacy: null,\n    focusedGroup: null,\n  };\n}\n\nconst update = {\n  SET_DEFAULT: function (state, action) {\n    return { [action.defaultKey]: action.value };\n  },\n};\n\nconst actions = util.actionTypes(update);\n\nfunction setDefault(defaultKey, value) {\n  return { type: actions.SET_DEFAULT, defaultKey: defaultKey, value: value };\n}\n\n/** Selectors */\n\n/**\n * Retrieve the state's current value for `defaultKey`.\n *\n * @return {string|null} - The current value for `defaultKey` or `undefined` if it is not\n *               present\n */\nfunction getDefault(state, defaultKey) {\n  return state[defaultKey];\n}\n\nfunction getDefaults(state) {\n  return state;\n}\n\n/**\n * @typedef DefaultsStore\n *\n * // Actions\n * @prop {typeof setDefault} setDefault\n *\n * // Selectors\n * @prop {(key: string) => string|null} getDefault\n * @prop {() => Object.<string,string|null>} getDefaults\n */\n\nexport default {\n  init,\n  namespace: 'defaults',\n  update,\n  actions: {\n    setDefault,\n  },\n  selectors: {\n    getDefault,\n    getDefaults,\n  },\n};\n",
    "import * as util from '../util';\n\nfunction init(settings) {\n  return {\n    /**\n     * The ID of the direct-linked group.\n     *\n     * This ID is initialized from the client's configuration to indicate that\n     * the client should focus on a particular group initially. The user may\n     * need to login for this step to complete. When the user navigates away\n     * from the group or clears the selection, the direct link is \"consumed\"\n     * and no longer used.\n     *\n     * @type {string}\n     */\n    directLinkedGroupId: settings.group || null,\n\n    /**\n     * The ID of the direct-linked annotation.\n     *\n     * This ID is initialized from the client's configuration to indicate that\n     * the client should focus on a particular annotation. The user may need to\n     * login to see the annotation. When the user clears the selection or\n     * switches to a different group manually, the direct link is \"consumed\"\n     * and no longer used.\n     *\n     * @type {string}\n     */\n    directLinkedAnnotationId: settings.annotations || null,\n\n    /**\n     * Indicates that an error occurred in retrieving/showing the direct linked group.\n     * This could be because:\n     * - the group does not exist\n     * - the user does not have permission\n     * - the group is out of scope for the given page\n     * @type {boolean}\n     */\n    directLinkedGroupFetchFailed: false,\n  };\n}\n\nconst update = {\n  UPDATE_DIRECT_LINKED_GROUP_FETCH_FAILED(state, action) {\n    return {\n      directLinkedGroupFetchFailed: action.directLinkedGroupFetchFailed,\n    };\n  },\n  UPDATE_DIRECT_LINKED_GROUP_ID(state, action) {\n    return {\n      directLinkedGroupId: action.directLinkedGroupId,\n    };\n  },\n  UPDATE_DIRECT_LINKED_ANNOTATION_ID(state, action) {\n    return {\n      directLinkedAnnotationId: action.directLinkedAnnotationId,\n    };\n  },\n  CLEAR_DIRECT_LINKED_IDS() {\n    return {\n      directLinkedAnnotationId: null,\n      directLinkedGroupId: null,\n    };\n  },\n  CLEAR_SELECTION: function () {\n    return {\n      directLinkedAnnotationId: null,\n      directLinkedGroupId: null,\n      directLinkedGroupFetchFailed: false,\n    };\n  },\n};\n\nconst actions = util.actionTypes(update);\n\n/**\n * Set the direct linked group id.\n */\nfunction setDirectLinkedGroupId(groupId) {\n  return {\n    type: actions.UPDATE_DIRECT_LINKED_GROUP_ID,\n    directLinkedGroupId: groupId,\n  };\n}\n\n/**\n * Set the direct linked annotation's id.\n */\nfunction setDirectLinkedAnnotationId(annId) {\n  return {\n    type: actions.UPDATE_DIRECT_LINKED_ANNOTATION_ID,\n    directLinkedAnnotationId: annId,\n  };\n}\n\n/**\n * Set the direct linked group fetch failure to true.\n */\nfunction setDirectLinkedGroupFetchFailed() {\n  return {\n    type: actions.UPDATE_DIRECT_LINKED_GROUP_FETCH_FAILED,\n    directLinkedGroupFetchFailed: true,\n  };\n}\n\n/**\n * Clear the direct linked group fetch failure.\n */\nfunction clearDirectLinkedGroupFetchFailed() {\n  return {\n    type: actions.UPDATE_DIRECT_LINKED_GROUP_FETCH_FAILED,\n    directLinkedGroupFetchFailed: false,\n  };\n}\n\n/**\n * Clear the direct linked annotations and group IDs.\n *\n * This action indicates that the direct link has been \"consumed\" and should\n * not affect future group/annotation etc. fetches.\n */\nfunction clearDirectLinkedIds() {\n  return {\n    type: actions.CLEAR_DIRECT_LINKED_IDS,\n  };\n}\n\n/**\n * Selectors\n */\nfunction directLinkedAnnotationId(state) {\n  return state.directLinkedAnnotationId;\n}\n\nfunction directLinkedGroupId(state) {\n  return state.directLinkedGroupId;\n}\n\nfunction directLinkedGroupFetchFailed(state) {\n  return state.directLinkedGroupFetchFailed;\n}\n\n/**\n * @typedef DirectLinkedStore\n *\n * // Actions\n * @prop {typeof setDirectLinkedGroupFetchFailed} setDirectLinkedGroupFetchFailed\n * @prop {typeof setDirectLinkedGroupId} setDirectLinkedGroupId\n * @prop {typeof setDirectLinkedAnnotationId} setDirectLinkedAnnotationId\n * @prop {typeof clearDirectLinkedGroupFetchFailed} clearDirectLinkedGroupFetchFailed\n * @prop {typeof clearDirectLinkedIds} clearDirectLinkedIds\n *\n * // Selectors\n * @prop {() => string|null} directLinkedAnnotationId\n * @prop {() => boolean} directLinkedGroupFetchFailed\n * @prop {() => string|null} directLinkedGroupId\n */\n\nexport default {\n  init,\n  namespace: 'directLinked',\n  update,\n  actions: {\n    setDirectLinkedGroupFetchFailed,\n    setDirectLinkedGroupId,\n    setDirectLinkedAnnotationId,\n    clearDirectLinkedGroupFetchFailed,\n    clearDirectLinkedIds,\n  },\n  selectors: {\n    directLinkedAnnotationId,\n    directLinkedGroupFetchFailed,\n    directLinkedGroupId,\n  },\n};\n",
    "import { createSelector } from 'reselect';\n\nimport * as metadata from '../../util/annotation-metadata';\nimport * as util from '../util';\n\n/** @typedef {import('../../../types/api').Annotation} Annotation */\n\n/**\n * The drafts store provides temporary storage for unsaved edits to new or\n * existing annotations.\n */\n\nfunction init() {\n  return [];\n}\n\n/**\n * Helper class to encapsulate the draft properties and a few simple methods.\n *\n *  A draft consists of:\n *\n * 1. `annotation` which is the original annotation object which the\n *    draft is associated with. If this is just a draft, then this may\n *    not have an id yet and instead, $tag is used.\n *\n * 2. `isPrivate` (boolean), `tags` (array of objects) and `text` (string)\n *    which are the user's draft changes to the annotation. These are returned\n *    from the drafts store selector by `drafts.getDraft()`.\n */\nexport class Draft {\n  constructor(annotation, changes) {\n    this.annotation = { id: annotation.id, $tag: annotation.$tag };\n    this.isPrivate = changes.isPrivate;\n    this.tags = changes.tags;\n    this.text = changes.text;\n  }\n  /**\n   * Returns true if this draft matches a given annotation.\n   *\n   * Annotations are matched by ID or local tag.\n   */\n  match(annotation) {\n    return (\n      (this.annotation.$tag && annotation.$tag === this.annotation.$tag) ||\n      (this.annotation.id && annotation.id === this.annotation.id)\n    );\n  }\n  /**\n   * Return true if this draft is empty and can be discarded without losing\n   * any user input.\n   */\n  isEmpty() {\n    return !this.text && this.tags.length === 0;\n  }\n}\n\n/* Reducer */\n\nconst update = {\n  DISCARD_ALL_DRAFTS: function () {\n    return [];\n  },\n  REMOVE_DRAFT: function (state, action) {\n    const drafts = state.filter(draft => {\n      return !draft.match(action.annotation);\n    });\n    return drafts;\n  },\n  UPDATE_DRAFT: function (state, action) {\n    // removes a matching existing draft, then adds\n    const drafts = state.filter(draft => {\n      return !draft.match(action.draft.annotation);\n    });\n    drafts.push(action.draft); // push ok since its a copy\n    return drafts;\n  },\n};\n\nconst actions = util.actionTypes(update);\n\n/* Actions */\n\n/**\n * Create or update the draft version for a given annotation by\n * replacing any existing draft or simply creating a new one.\n */\nfunction createDraft(annotation, changes) {\n  return {\n    type: actions.UPDATE_DRAFT,\n    draft: new Draft(annotation, changes),\n  };\n}\n\n/**\n * Remove any drafts that are empty.\n *\n * An empty draft has no text and no reference tags.\n */\n\nfunction deleteNewAndEmptyDrafts() {\n  const { default: annotations } = require('./annotations');\n\n  return (dispatch, getState) => {\n    const newDrafts = getState().drafts.filter(draft => {\n      return (\n        metadata.isNew(draft.annotation) &&\n        !getDraftIfNotEmpty(getState().drafts, draft.annotation)\n      );\n    });\n    const removedAnnotations = newDrafts.map(draft => {\n      dispatch(removeDraft(draft.annotation));\n      return draft.annotation;\n    });\n    dispatch(annotations.actions.removeAnnotations(removedAnnotations));\n  };\n}\n\n/**\n * Remove all drafts.\n * */\nfunction discardAllDrafts() {\n  return {\n    type: actions.DISCARD_ALL_DRAFTS,\n  };\n}\n\n/**\n * Remove the draft version of an annotation.\n */\nfunction removeDraft(annotation) {\n  return {\n    type: actions.REMOVE_DRAFT,\n    annotation,\n  };\n}\n\n/* Selectors */\n\n/**\n * Returns the number of drafts - both unsaved new annotations, and unsaved\n * edits to saved annotations - currently stored.\n *\n * @return {number}\n */\nfunction countDrafts(state) {\n  return state.length;\n}\n\n/**\n * Retrieve the draft changes for an annotation.\n *\n * @return {Draft|null}\n */\nfunction getDraft(state, annotation) {\n  const drafts = state;\n  for (let i = 0; i < drafts.length; i++) {\n    const draft = drafts[i];\n    if (draft.match(annotation)) {\n      return draft;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Returns the draft changes for an annotation, or null if no draft exists\n * or the draft is empty.\n *\n * @return {Draft|null}\n */\nfunction getDraftIfNotEmpty(state, annotation) {\n  const draft = getDraft(state, annotation);\n  if (!draft) {\n    return null;\n  }\n  return draft.isEmpty() ? null : draft;\n}\n\n/**\n * Returns a list of draft annotations which have no id.\n *\n * @type {(state: any) => Annotation[]}\n */\nconst unsavedAnnotations = createSelector(\n  state => state,\n  drafts => drafts.filter(d => !d.annotation.id).map(d => d.annotation)\n);\n\n/**\n * @typedef DraftsStore\n *\n * // Actions\n * @prop {typeof createDraft} createDraft\n * @prop {typeof deleteNewAndEmptyDrafts} deleteNewAndEmptyDrafts\n * @prop {typeof discardAllDrafts} discardAllDrafts\n * @prop {typeof removeDraft} removeDraft\n *\n * // Selectors\n * @prop {() => number} countDrafts\n * @prop {(a: Annotation) => Draft|null} getDraft\n * @prop {(a: Annotation) => Draft|null} getDraftIfNotEmpty\n * @prop {() => Annotation[]} unsavedAnnotations\n */\n\nexport default {\n  init,\n  namespace: 'drafts',\n  update,\n  actions: {\n    createDraft,\n    deleteNewAndEmptyDrafts,\n    discardAllDrafts,\n    removeDraft,\n  },\n\n  selectors: {\n    countDrafts,\n    getDraft,\n    getDraftIfNotEmpty,\n    unsavedAnnotations,\n  },\n};\n",
    "import {\n  createSelector,\n  createSelectorCreator,\n  defaultMemoize,\n} from 'reselect';\nimport shallowEqual from 'shallowequal';\n\nimport * as util from '../util';\n\n/**\n * @typedef {import('../../../types/annotator').DocumentMetadata} DocumentMetadata\n */\n\n/**\n * @typedef Frame\n * @prop {string|null} id\n *   - Sub-frames will all have a id (frame identifier) set. The main frame's id is always `null`\n * @prop {DocumentMetadata} metadata - Metadata about the document currently loaded in this frame\n * @prop {string} uri - Current primary URI of the document being displayed\n */\n\nfunction init() {\n  // The list of frames connected to the sidebar app\n  return [];\n}\n\nconst update = {\n  CONNECT_FRAME: function (state, action) {\n    return [...state, action.frame];\n  },\n\n  DESTROY_FRAME: function (state, action) {\n    return state.filter(f => f !== action.frame);\n  },\n\n  UPDATE_FRAME_ANNOTATION_FETCH_STATUS: function (state, action) {\n    const frames = state.map(function (frame) {\n      const match = frame.uri && frame.uri === action.uri;\n      if (match) {\n        return Object.assign({}, frame, {\n          isAnnotationFetchComplete: action.isAnnotationFetchComplete,\n        });\n      } else {\n        return frame;\n      }\n    });\n    return frames;\n  },\n};\n\nconst actions = util.actionTypes(update);\n\n/**\n * Add a frame to the list of frames currently connected to the sidebar app.\n *\n * @param {Frame} frame\n */\nfunction connectFrame(frame) {\n  return { type: actions.CONNECT_FRAME, frame: frame };\n}\n\n/**\n * Remove a frame from the list of frames currently connected to the sidebar app.\n *\n * @param {Frame} frame\n */\nfunction destroyFrame(frame) {\n  return { type: actions.DESTROY_FRAME, frame: frame };\n}\n\n/**\n * Update the `isAnnotationFetchComplete` flag of the frame.\n *\n * @param {string} uri\n * @param {boolean} isFetchComplete\n */\nfunction updateFrameAnnotationFetchStatus(uri, isFetchComplete) {\n  return {\n    type: actions.UPDATE_FRAME_ANNOTATION_FETCH_STATUS,\n    isAnnotationFetchComplete: isFetchComplete,\n    uri: uri,\n  };\n}\n\n/**\n * Return the list of frames currently connected to the sidebar app.\n */\nfunction frames(state) {\n  return state;\n}\n\n/**\n * Return the \"main\" frame that the sidebar is connected to.\n *\n * The sidebar may be connected to multiple frames from different URLs.\n * For some purposes, the main frame (typically the top-level one that contains\n * the sidebar) needs to be distinguished. This selector returns the main frame\n * for that purpose.\n *\n * This may be `null` during startup.\n *\n * @type {(state: any) => Frame|null}\n */\nconst mainFrame = createSelector(\n  state => state,\n\n  // Sub-frames will all have a \"frame identifier\" set. The main frame is the\n  // one with a `null` id.\n  frames => frames.find(f => !f.id) || null\n);\n\n/**\n * @param {Frame} frame\n */\nfunction searchUrisForFrame(frame) {\n  let uris = [frame.uri];\n\n  if (frame.metadata && frame.metadata.documentFingerprint) {\n    uris = frame.metadata.link.map(function (link) {\n      return link.href;\n    });\n  }\n\n  if (frame.metadata && frame.metadata.link) {\n    frame.metadata.link.forEach(function (link) {\n      if (link.href.startsWith('doi:')) {\n        uris.push(link.href);\n      }\n    });\n  }\n\n  return uris;\n}\n\n// \"selector creator\" that uses `shallowEqual` instead of `===` for memoization\nconst createShallowEqualSelector = createSelectorCreator(\n  defaultMemoize,\n  shallowEqual\n);\n\n/**\n * Memoized selector will return the same array (of URIs) reference unless the\n * values of the array change (are not shallow-equal).\n *\n * @type {(state: any) => string[]}\n */\nconst searchUris = createShallowEqualSelector(\n  frames => {\n    return frames.reduce(\n      (uris, frame) => uris.concat(searchUrisForFrame(frame)),\n      []\n    );\n  },\n  uris => uris\n);\n\n/**\n * @typedef FramesStore\n *\n * // Actions\n * @prop {typeof connectFrame} connectFrame\n * @prop {typeof destroyFrame} destroyFrame\n * @prop {typeof updateFrameAnnotationFetchStatus} updateFrameAnnotationFetchStatus\n *\n * // Selectors\n * @prop {() => Frame[]} frames\n * @prop {() => Frame|null} mainFrame\n * @prop {() => string[]} searchUris\n */\n\nexport default {\n  init: init,\n  namespace: 'frames',\n  update: update,\n\n  actions: {\n    connectFrame,\n    destroyFrame,\n    updateFrameAnnotationFetchStatus,\n  },\n\n  selectors: {\n    frames,\n    mainFrame,\n    searchUris,\n  },\n};\n",
    "import { createSelector } from 'reselect';\n\nimport * as util from '../util';\n\nimport session from './session';\n\n/**\n * @typedef {import('../../../types/api').Group} Group\n */\n\nfunction init() {\n  return {\n    /**\n     * List of groups.\n     * @type {Group[]}\n     */\n    groups: [],\n\n    /**\n     * ID of currently selected group.\n     * @type {string|null}\n     */\n    focusedGroupId: null,\n  };\n}\n\nconst update = {\n  FOCUS_GROUP(state, action) {\n    const group = state.groups.find(g => g.id === action.id);\n    if (!group) {\n      console.error(\n        `Attempted to focus group ${action.id} which is not loaded`\n      );\n      return {};\n    }\n    return { focusedGroupId: action.id };\n  },\n\n  LOAD_GROUPS(state, action) {\n    const groups = action.groups;\n    let focusedGroupId = state.focusedGroupId;\n\n    // Reset focused group if not in the new set of groups.\n    if (\n      state.focusedGroupId === null ||\n      !groups.find(g => g.id === state.focusedGroupId)\n    ) {\n      if (groups.length > 0) {\n        focusedGroupId = groups[0].id;\n      } else {\n        focusedGroupId = null;\n      }\n    }\n\n    return {\n      focusedGroupId,\n      groups: action.groups,\n    };\n  },\n\n  CLEAR_GROUPS() {\n    return {\n      focusedGroupId: null,\n      groups: [],\n    };\n  },\n};\n\nconst actions = util.actionTypes(update);\n\nfunction clearGroups() {\n  return {\n    type: actions.CLEAR_GROUPS,\n  };\n}\n\n/**\n * Set the current focused group.\n *\n * @param {string} id\n */\nfunction focusGroup(id) {\n  return {\n    type: actions.FOCUS_GROUP,\n    id,\n  };\n}\n\n/**\n * Update the set of loaded groups.\n *\n * @param {Group[]} groups\n */\nfunction loadGroups(groups) {\n  return {\n    type: actions.LOAD_GROUPS,\n    groups,\n  };\n}\n\n/**\n * Return the currently focused group.\n *\n * @return {Group|undefined|null}\n */\nfunction focusedGroup(state) {\n  if (!state.focusedGroupId) {\n    return null;\n  }\n  return getGroup(state, state.focusedGroupId);\n}\n\n/**\n * Return the current focused group ID or `null`.\n *\n * @return {string|null}\n */\nfunction focusedGroupId(state) {\n  return state.focusedGroupId;\n}\n\n/**\n * Return the list of all groups.\n *\n * @return {Group[]}\n */\nfunction allGroups(state) {\n  return state.groups;\n}\n\n/**\n * Return the group with the given ID.\n *\n * @param {string} id\n * @return {Group|undefined}\n */\nfunction getGroup(state, id) {\n  return state.groups.find(g => g.id === id);\n}\n\n/**\n * Return groups the user isn't a member of that are scoped to the URI.\n *\n * @type {(state: any) => Group[]}\n */\nconst getFeaturedGroups = createSelector(\n  state => state.groups,\n  groups => groups.filter(group => !group.isMember && group.isScopedToUri)\n);\n\n/**\n * Return groups that are scoped to the uri. This is used to return the groups\n * that show up in the old groups menu. This should be removed once the new groups\n * menu is permanent.\n *\n * @type {(state: any) => Group[]}\n */\nconst getInScopeGroups = createSelector(\n  state => state.groups,\n  groups => groups.filter(g => g.isScopedToUri)\n);\n\n// Selectors that receive root state.\n\n/**\n * Return groups the logged in user is a member of.\n *\n * @type {(state: any) => Group[]}\n */\nconst getMyGroups = createSelector(\n  rootState => rootState.groups.groups,\n  rootState => session.selectors.isLoggedIn(rootState.session),\n  (groups, loggedIn) => {\n    // If logged out, the Public group still has isMember set to true so only\n    // return groups with membership in logged in state.\n    if (loggedIn) {\n      return groups.filter(g => g.isMember);\n    }\n    return [];\n  }\n);\n\n/**\n * Return groups that don't show up in Featured and My Groups.\n *\n * @type {(state: any) => Group[]}\n */\nconst getCurrentlyViewingGroups = createSelector(\n  rootState => allGroups(rootState.groups),\n  rootState => getMyGroups(rootState),\n  rootState => getFeaturedGroups(rootState.groups),\n  (allGroups, myGroups, featuredGroups) => {\n    return allGroups.filter(\n      g => !myGroups.includes(g) && !featuredGroups.includes(g)\n    );\n  }\n);\n\n/**\n * @typedef GroupsStore\n *\n * // Actions\n * @prop {typeof focusGroup} focusGroup\n * @prop {typeof loadGroups} loadGroups\n * @prop {typeof clearGroups} clearGroups\n *\n * // Selectors\n * @prop {() => Group[]} allGroups\n * @prop {() => Group|undefined|null} focusedGroup\n * @prop {() => string|null} focusedGroupId\n * @prop {() => Group[]} getFeaturedGroups\n * @prop {(id: string) => Group|undefined} getGroup\n * @prop {() => Group[]} getInScopeGroups\n *\n * // Root selectors\n * @prop {() => Group[]} getCurrentlyViewingGroups,\n * @prop {() => Group[]} getMyGroups,\n */\n\nexport default {\n  init,\n  namespace: 'groups',\n  update,\n  actions: {\n    focusGroup,\n    loadGroups,\n    clearGroups,\n  },\n  selectors: {\n    allGroups,\n    focusedGroup,\n    focusedGroupId,\n    getFeaturedGroups,\n    getGroup,\n    getInScopeGroups,\n  },\n  rootSelectors: {\n    getCurrentlyViewingGroups,\n    getMyGroups,\n  },\n};\n",
    "import { actionTypes } from '../util';\n\n/**\n * Reducer for storing a \"links\" object in the Redux state store.\n *\n * The links object is initially null, and can only be updated by completely\n * replacing it with a new links object.\n *\n * Used by serviceUrl.\n */\n\n/** Return the initial links. */\nfunction init() {\n  return null;\n}\n\nconst update = {\n  UPDATE_LINKS(state, action) {\n    return {\n      ...action.newLinks,\n    };\n  },\n};\n\nconst actions = actionTypes(update);\n\n/** Return updated links based on the given current state and action object. */\nfunction updateLinks(newLinks) {\n  return {\n    type: actions.UPDATE_LINKS,\n    newLinks,\n  };\n}\n\n/**\n * @typedef LinksStore\n *\n * // Actions\n * @prop {typeof updateLinks} updateLinks\n */\n\nexport default {\n  init: init,\n  namespace: 'links',\n  update,\n  actions: {\n    updateLinks,\n  },\n  selectors: {},\n};\n",
    "/**\n * This module contains state related to real-time updates received via the\n * WebSocket connection to h's real-time API.\n */\n\n/**\n * @typedef {import('../../../types/api').Annotation} Annotation\n */\n\nimport { createSelector } from 'reselect';\n\nimport { actionTypes } from '../util';\n\nimport annotations from './annotations';\nimport groups from './groups';\nimport route from './route';\n\nfunction init() {\n  return {\n    // Map of ID -> updated annotation for updates that have been received over\n    // the WebSocket but not yet applied\n    pendingUpdates: {},\n\n    // Set of IDs of annotations which have been deleted but for which the\n    // deletion has not yet been applied\n    pendingDeletions: {},\n  };\n}\n\nconst update = {\n  RECEIVE_REAL_TIME_UPDATES(state, action) {\n    return {\n      pendingUpdates: { ...action.pendingUpdates },\n      pendingDeletions: { ...action.pendingDeletions },\n    };\n  },\n\n  CLEAR_PENDING_UPDATES() {\n    return { pendingUpdates: {}, pendingDeletions: {} };\n  },\n\n  ADD_ANNOTATIONS(state, { annotations }) {\n    // Discard any pending updates which conflict with an annotation added\n    // locally or fetched via an API call.\n    //\n    // If there is a conflicting local update/remote delete then we keep\n    // the pending delete. The UI should prevent the user from editing an\n    // annotation that has been deleted on the server.\n    const pendingUpdates = { ...state.pendingUpdates };\n\n    annotations.forEach(ann => delete pendingUpdates[ann.id]);\n\n    return { pendingUpdates };\n  },\n\n  REMOVE_ANNOTATIONS(state, { annotationsToRemove }) {\n    // Discard any pending updates which conflict with an annotation removed\n    // locally.\n\n    const pendingUpdates = { ...state.pendingUpdates };\n    const pendingDeletions = { ...state.pendingDeletions };\n\n    annotationsToRemove.forEach(ann => {\n      delete pendingUpdates[ann.id];\n      delete pendingDeletions[ann.id];\n    });\n\n    return { pendingUpdates, pendingDeletions };\n  },\n\n  FOCUS_GROUP() {\n    // When switching groups we clear and re-fetch all annotations, so discard\n    // any pending updates.\n    return { pendingUpdates: {}, pendingDeletions: {} };\n  },\n};\n\nconst actions = actionTypes(update);\n\n/**\n * Record pending updates representing changes on the server that the client\n * has been notified about but has not yet applied.\n *\n * @param {Object} args\n * @param {Annotation[]} args.updatedAnnotations\n * @param {Annotation[]} args.deletedAnnotations\n */\nfunction receiveRealTimeUpdates({\n  updatedAnnotations = [],\n  deletedAnnotations = [],\n}) {\n  return (dispatch, getState) => {\n    const pendingUpdates = { ...getState().realTimeUpdates.pendingUpdates };\n    const pendingDeletions = { ...getState().realTimeUpdates.pendingDeletions };\n\n    updatedAnnotations.forEach(ann => {\n      // In the sidebar, only save pending updates for annotations in the\n      // focused group, since we only display annotations from the focused\n      // group and reload all annotations and discard pending updates\n      // when switching groups.\n      if (\n        ann.group === groups.selectors.focusedGroupId(getState()) ||\n        route.selectors.route(getState()) !== 'sidebar'\n      ) {\n        pendingUpdates[ann.id] = ann;\n      }\n    });\n    deletedAnnotations.forEach(ann => {\n      // Discard any pending but not-yet-applied updates for this annotation\n      delete pendingUpdates[ann.id];\n\n      // If we already have this annotation loaded, then record a pending\n      // deletion. We do not check the group of the annotation here because a)\n      // that information is not included with deletion notifications and b)\n      // even if the annotation is from the current group, it might be for a\n      // new annotation (saved in pendingUpdates and removed above), that has\n      // not yet been loaded.\n      if (annotations.selectors.annotationExists(getState(), ann.id)) {\n        pendingDeletions[ann.id] = true;\n      }\n    });\n    dispatch({\n      type: actions.RECEIVE_REAL_TIME_UPDATES,\n      pendingUpdates,\n      pendingDeletions,\n    });\n  };\n}\n\n/**\n * Clear the queue of real-time updates which have been received but not applied.\n */\nfunction clearPendingUpdates() {\n  return {\n    type: actions.CLEAR_PENDING_UPDATES,\n  };\n}\n\n/**\n * Return added or updated annotations received via the WebSocket\n * which have not been applied to the local state.\n *\n * @return {Object.<string, Annotation>}\n */\nfunction pendingUpdates(state) {\n  return state.pendingUpdates;\n}\n\n/**\n * Return IDs of annotations which have been deleted on the server but not\n * yet removed from the local state.\n *\n * @return {Object.<string, Annotation>}\n */\nfunction pendingDeletions(state) {\n  return state.pendingDeletions;\n}\n\n/**\n * Return a total count of pending updates and deletions.\n *\n * @type {(state: any) => number}\n */\nconst pendingUpdateCount = createSelector(\n  state => [state.pendingUpdates, state.pendingDeletions],\n  ([pendingUpdates, pendingDeletions]) =>\n    Object.keys(pendingUpdates).length + Object.keys(pendingDeletions).length\n);\n\n/**\n * Return true if an annotation has been deleted on the server but the deletion\n * has not yet been applied.\n *\n * @param {string} id\n */\nfunction hasPendingDeletion(state, id) {\n  return state.pendingDeletions.hasOwnProperty(id);\n}\n\n/**\n * @typedef RealTimeUpdatesStore\n *\n * // Actions\n * @prop {typeof receiveRealTimeUpdates} receiveRealTimeUpdates\n * @prop {typeof clearPendingUpdates} clearPendingUpdates\n *\n * // Selectors\n * @prop {() => boolean} hasPendingDeletion\n * @prop {() => Object.<string, boolean>} pendingDeletions\n * @prop {() => Object.<string, Annotation>} pendingUpdates\n * @prop {() => number} pendingUpdateCount\n */\n\nexport default {\n  init,\n  namespace: 'realTimeUpdates',\n  update,\n  actions: {\n    receiveRealTimeUpdates,\n    clearPendingUpdates,\n  },\n  selectors: {\n    hasPendingDeletion,\n    pendingDeletions,\n    pendingUpdates,\n    pendingUpdateCount,\n  },\n};\n",
    "import { actionTypes } from '../util';\n\nfunction init() {\n  return {\n    /**\n     * The current route.\n     * One of null (if no route active yet), \"sidebar\", \"annotation\" or \"stream\".\n     */\n    name: null,\n\n    /**\n     * Parameters of the current route.\n     *\n     * - The \"annotation\" route has an \"id\" (annotation ID) parameter.\n     * - The \"stream\" route has a \"q\" (query) parameter.\n     * - The \"sidebar\" route has no parameters.\n     */\n    params: {},\n  };\n}\n\nconst update = {\n  CHANGE_ROUTE(state, { name, params }) {\n    return { name, params };\n  },\n};\n\nconst actions = actionTypes(update);\n\n/**\n * Change the active route.\n *\n * @param {string} name - Name of the route to activate. See `init` for possible values\n * @param {Object.<string,string>} params - Parameters associated with the route\n */\nfunction changeRoute(name, params = {}) {\n  return {\n    type: actions.CHANGE_ROUTE,\n    name,\n    params,\n  };\n}\n\n/**\n * Return the name of the current route.\n */\nfunction route(state) {\n  return state.name;\n}\n\n/**\n * Return any parameters for the current route, extracted from the path and\n * query string.\n */\nfunction routeParams(state) {\n  return state.params;\n}\n\n/**\n * @typedef RouteStore\n *\n * // Actions\n * @prop {typeof changeRoute} changeRoute\n *\n * // Selectors\n * @prop {() => string|null} route\n * @prop {() => Object.<string,string>} routeParams\n */\n\nexport default {\n  init,\n  namespace: 'route',\n  update,\n  actions: {\n    changeRoute,\n  },\n  selectors: {\n    route,\n    routeParams,\n  },\n};\n",
    "/**\n * This module handles the state affecting the visibility and presence of\n * annotations and threads in the UI.\n */\n\n/**\n * @typedef {import('../../../types/api').Annotation} Annotation\n */\n\n/**\n * @typedef User\n * @prop {string} [userid]\n * @prop {string} [username]\n * @prop {string} displayName - User's display name\n */\n\n/**\n * @typedef FocusedUser\n * @prop {string} filter - The identifier to use for filtering annotations\n *           derived from either a userId or a username. This may take the\n *           form of a username, e.g. 'oakbucket', or a userid\n * @prop {string} displayName\n */\n\n/**\n * @typedef FocusState\n * @prop {boolean} configured - Focus config contains valid `user` and\n *           is good to go\n * @prop {boolean} active - Focus mode is currently applied\n * @prop {FocusedUser} [user] - User to focus on (filter annotations for)\n */\n\n/**\n * @typedef FocusConfig\n * @prop {User} user\n */\n\n/**\n * @typedef ThreadState\n * @prop {Annotation[]} annotations\n * @prop {Object} selection\n *   @prop {Object<string,boolean>} selection.expanded\n *   @prop {string|null} selection.filterQuery\n *   @prop {Object<string,string>} selection.filters\n *   @prop {string[]} selection.forcedVisible\n *   @prop {string[]} selection.selected\n *   @prop {string} selection.sortKey\n *   @prop {'annotation'|'note'|'orphan'} selection.selectedTab\n * @prop {string} route\n */\n\n/**\n * @typedef FilterState\n * @prop {string|null} filterQuery\n * @prop {boolean} focusActive\n * @prop {boolean} focusConfigured\n * @prop {string|null} focusDisplayName\n * @prop {number} forcedVisibleCount\n * @prop {number} selectedCount\n */\n\nimport { createSelector } from 'reselect';\n\nimport uiConstants from '../../ui-constants';\nimport * as metadata from '../../util/annotation-metadata';\nimport { countIf, trueKeys, toTrueMap } from '../../util/collections';\nimport * as util from '../util';\n\n/**\n * Default sort keys for each tab.\n */\nconst TAB_SORTKEY_DEFAULT = {\n  [uiConstants.TAB_ANNOTATIONS]: 'Location',\n  [uiConstants.TAB_NOTES]: 'Oldest',\n  [uiConstants.TAB_ORPHANS]: 'Location',\n};\n\nfunction initialSelection(settings) {\n  const selection = {};\n  // TODO: Do not take into account existence of `settings.query` here\n  // once root-thread-building is fully updated: the decision of whether\n  // selection trumps any query is not one for the store to make\n  if (settings.annotations && !settings.query) {\n    selection[settings.annotations] = true;\n  }\n  return selection;\n}\n\n/**\n * Configure (user-)focused mode. User-focus mode may be set in one of two\n * ways:\n * - A `focus` object containing a valid `user` object is present in the\n *   application's `settings` object during initialization time\n * - A `user` object is given to the `changeFocusedUser` action (this\n *   is implemented via an RPC method call)\n * For focus mode to be considered configured, it must have a valid `user`.\n * A successfully-configured focus mode will be set to `active` immediately\n * and may be toggled via `toggleFocusMode`.\n *\n * @param {FocusConfig} focusConfig\n * @return {FocusState}\n */\nfunction setFocus(focusConfig) {\n  const focusDefaultState = {\n    configured: false,\n    active: false,\n  };\n\n  // To be able to apply a focused mode, a `user` object must be present,\n  // and that user object must have either a `username` or a `userid`\n  const focusUser = focusConfig.user || {};\n  const userFilter = focusUser.username || focusUser.userid;\n\n  // If that requirement is not met, we can't configure/activate focus mode\n  if (!userFilter) {\n    return focusDefaultState;\n  }\n\n  return {\n    configured: true,\n    active: true, // Activate valid focus mode immediately\n    user: {\n      filter: userFilter,\n      displayName: focusUser.displayName || userFilter || '',\n    },\n  };\n}\n\nfunction init(settings) {\n  return {\n    /**\n     * The following objects map annotation identifiers to a boolean\n     * (typically `true`). They are objects (i.e. instead of Arrays) for two\n     * reasons:\n     * - Allows explicit setting of `false`\n     * - Prevents duplicate entries for a single annotation\n     */\n\n    // A set of annotations that are currently \"selected\" by the user —\n    // these will supersede other filters/selections\n    selected: initialSelection(settings),\n\n    // Explicitly-expanded or -collapsed annotations (threads). A collapsed\n    // annotation thread will not show its replies; an expanded thread will\n    // show its replies. Note that there are other factors affecting\n    // collapsed states, e.g., top-level threads are collapsed by default\n    // until explicitly expanded.\n    expanded: initialSelection(settings) || {},\n\n    // Set of annotations that have been \"forced\" visible by the user\n    // (e.g. by clicking on \"Show x more\" button) even though they may not\n    // match the currently-applied filters\n    forcedVisible: {},\n\n    filterQuery: settings.query || null,\n    focusMode: setFocus(settings.focus || /** @type FocusConfig */ ({})),\n\n    selectedTab: uiConstants.TAB_ANNOTATIONS,\n    // Key by which annotations are currently sorted.\n    sortKey: TAB_SORTKEY_DEFAULT[uiConstants.TAB_ANNOTATIONS],\n  };\n}\n\nconst setTab = (newTab, oldTab) => {\n  // Do nothing if the \"new tab\" is not a valid tab or is the same as the\n  // tab already selected. This will avoid resetting the `sortKey`, too.\n  if (!uiConstants.TABS.includes(newTab) || oldTab === newTab) {\n    return {};\n  }\n  return {\n    selectedTab: newTab,\n    sortKey: TAB_SORTKEY_DEFAULT[newTab],\n  };\n};\n\n/**\n * Return state object representing a reset selection. This\n * resets user-set filters (but leaves focus mode intact)\n */\nconst resetSelection = () => {\n  return {\n    filterQuery: null,\n    forcedVisible: {},\n    selected: {},\n  };\n};\n\nconst update = {\n  CHANGE_FOCUS_MODE_USER: function (state, action) {\n    return {\n      ...resetSelection(),\n      focusMode: setFocus({ user: action.user }),\n    };\n  },\n\n  CLEAR_SELECTION: function () {\n    return resetSelection();\n  },\n\n  SELECT_ANNOTATIONS: function (state, action) {\n    return { ...resetSelection(), selected: action.selection };\n  },\n\n  SELECT_TAB: function (state, action) {\n    return setTab(action.tab, state.selectedTab);\n  },\n\n  SET_EXPANDED: function (state, action) {\n    const newExpanded = { ...state.expanded };\n    newExpanded[action.id] = action.expanded;\n    return { expanded: newExpanded };\n  },\n\n  SET_FILTER_QUERY: function (state, action) {\n    return { ...resetSelection(), expanded: {}, filterQuery: action.query };\n  },\n\n  SET_FOCUS_MODE: function (state, action) {\n    const active =\n      typeof action.active !== 'undefined'\n        ? action.active\n        : !state.focusMode.active;\n    return {\n      ...resetSelection(),\n      focusMode: {\n        ...state.focusMode,\n        active,\n      },\n    };\n  },\n\n  SET_FORCED_VISIBLE: function (state, action) {\n    return {\n      forcedVisible: { ...state.forcedVisible, [action.id]: action.visible },\n    };\n  },\n\n  SET_SORT_KEY: function (state, action) {\n    return { sortKey: action.key };\n  },\n\n  TOGGLE_SELECTED_ANNOTATIONS: function (state, action) {\n    const selection = { ...state.selected };\n    action.toggleIds.forEach(id => {\n      selection[id] = !selection[id];\n    });\n    return { selected: selection };\n  },\n\n  /**\n   * Automatically select the Page Notes tab, for convenience, if all of the\n   * top-level annotations in `action.annotations` are Page Notes and the\n   * previous annotation count was 0 (i.e. collection empty).\n   */\n  ADD_ANNOTATIONS(state, action) {\n    const topLevelAnnotations = action.annotations.filter(\n      annotation => !metadata.isReply(annotation)\n    );\n    const noteCount = countIf(action.annotations, metadata.isPageNote);\n\n    const haveOnlyPageNotes = noteCount === topLevelAnnotations.length;\n    if (action.currentAnnotationCount === 0 && haveOnlyPageNotes) {\n      return setTab(uiConstants.TAB_NOTES, state.selectedTab);\n    }\n    return {};\n  },\n\n  REMOVE_ANNOTATIONS: function (state, action) {\n    let newTab = state.selectedTab;\n    // If the orphans tab is selected but no remaining annotations are orphans,\n    // switch back to annotations tab\n    if (\n      newTab === uiConstants.TAB_ORPHANS &&\n      countIf(action.remainingAnnotations, metadata.isOrphan) === 0\n    ) {\n      newTab = uiConstants.TAB_ANNOTATIONS;\n    }\n\n    const removeAnns = collection => {\n      action.annotationsToRemove.forEach(annotation => {\n        if (annotation.id) {\n          delete collection[annotation.id];\n        }\n        if (annotation.$tag) {\n          delete collection[annotation.$tag];\n        }\n      });\n      return collection;\n    };\n    return {\n      ...setTab(newTab, state.selectedTab),\n      expanded: removeAnns({ ...state.expanded }),\n      forcedVisible: removeAnns({ ...state.forcedVisible }),\n      selected: removeAnns({ ...state.selected }),\n    };\n  },\n};\n\nconst actions = util.actionTypes(update);\n\n/* Action Creators */\n\n/**\n * Clears any applied filters, changes the focused user and sets\n * focused enabled to `true`.\n *\n * @param {User} user - The user to focus on\n */\nfunction changeFocusModeUser(user) {\n  return { type: actions.CHANGE_FOCUS_MODE_USER, user };\n}\n\n/**\n * Clear all selected annotations and filters. This will leave user-focus\n * alone, however.\n */\nfunction clearSelection() {\n  return {\n    type: actions.CLEAR_SELECTION,\n  };\n}\n\n/**\n * Set the currently selected annotation IDs. This will replace the current\n * selection. All provided annotation ids will be set to `true` in the selection.\n *\n * @param {string[]} ids - Identifiers of annotations to select\n */\nfunction selectAnnotations(ids) {\n  return dispatch => {\n    dispatch({ type: actions.SET_FOCUS_MODE, active: false });\n    dispatch({\n      type: actions.SELECT_ANNOTATIONS,\n      selection: toTrueMap(ids),\n    });\n  };\n}\n\n/**\n * Set the currently-selected tab to `tabKey`.\n *\n * @param {'annotation'|'note'|'orphan'} tabKey\n */\nfunction selectTab(tabKey) {\n  return {\n    type: actions.SELECT_TAB,\n    tab: tabKey,\n  };\n}\n\n/**\n * Set the expanded state for a single annotation/thread.\n *\n * @param {string} id - annotation (or thread) id\n * @param {boolean} expanded - `true` for expanded replies, `false` to collapse\n */\nfunction setExpanded(id, expanded) {\n  return {\n    type: actions.SET_EXPANDED,\n    id,\n    expanded,\n  };\n}\n\n/** Set the query used to filter displayed annotations. */\nfunction setFilterQuery(query) {\n  return {\n    type: actions.SET_FILTER_QUERY,\n    query: query,\n  };\n}\n\n/**\n * A user may \"force\" an annotation to be visible, even if it would be otherwise\n * not be visible because of applied filters. Set the force-visibility for a\n * single annotation, without affecting other forced-visible annotations.\n *\n * @param {string} id\n * @param {boolean} visible - Should this annotation be visible, even if it\n *        conflicts with current filters?\n */\nfunction setForcedVisible(id, visible) {\n  return {\n    type: actions.SET_FORCED_VISIBLE,\n    id,\n    visible,\n  };\n}\n\n/** Sets the sort key for the annotation list. */\nfunction setSortKey(key) {\n  return {\n    type: actions.SET_SORT_KEY,\n    key: key,\n  };\n}\n\n/**\n * Toggle whether or not a (user-)focus mode is applied, either inverting the\n * current active state or setting it to a target `active` state, if provided.\n *\n * @param {boolean} [active] - Optional `active` state for focus mode\n */\nfunction toggleFocusMode(active) {\n  return {\n    type: actions.SET_FOCUS_MODE,\n    active,\n  };\n}\n\n/**\n * Toggle the selected state for the annotations in `toggledAnnotations`:\n * unselect any that are selected; select any that are unselected.\n *\n * @param {string[]} toggleIds - identifiers of annotations to toggle\n */\nfunction toggleSelectedAnnotations(toggleIds) {\n  return {\n    type: actions.TOGGLE_SELECTED_ANNOTATIONS,\n    toggleIds,\n  };\n}\n\n/* Selectors */\n\n/**\n * Retrieve map of expanded/collapsed annotations (threads)\n *\n * @return {Object<string,boolean>}\n */\nfunction expandedMap(state) {\n  return state.expanded;\n}\n\nfunction filterQuery(state) {\n  return state.filterQuery;\n}\n\n/**\n * Is a focus mode currently applied?\n *\n * @return {boolean}\n */\nfunction focusModeActive(state) {\n  return state.focusMode.active;\n}\n\n/**\n * Does the state have a configured focus mode? That is, does it have a valid\n * focus mode filter that could be applied (regardless of whether it is currently\n * active)?\n *\n * @return {boolean}\n */\nfunction focusModeConfigured(state) {\n  return state.focusMode.configured;\n}\n\n/**\n * Returns the user identifier for a focused user or `null` if no focused user.\n *\n * @return {string|null}\n */\nfunction focusModeUserFilter(state) {\n  if (!focusModeActive(state)) {\n    return null;\n  }\n  return state.focusMode.user.filter;\n}\n\n/**\n * Returns the display name for a user or the userid\n * if display name is not present. If both are missing\n * then this returns an empty string.\n *\n * @return {string}\n */\nfunction focusModeUserPrettyName(state) {\n  if (!focusModeConfigured(state)) {\n    return '';\n  }\n  return state.focusMode.user.displayName;\n}\n\n/**\n * @type {(state: any) => string[]}\n */\nconst forcedVisibleAnnotations = createSelector(\n  state => state.forcedVisible,\n  forcedVisible => trueKeys(forcedVisible)\n);\n\n/**\n * Returns the annotation ID of the first annotation in the selection that is\n * selected (`true`) or `null` if there are none.\n *\n * @type {(state: any) => string|null}\n */\nconst getFirstSelectedAnnotationId = createSelector(\n  state => state.selected,\n  selection => {\n    const selectedIds = trueKeys(selection);\n    return selectedIds.length ? selectedIds[0] : null;\n  }\n);\n\n/**\n * Are any annotations currently selected?\n *\n * @type {(state: any) => boolean}\n */\nconst hasSelectedAnnotations = createSelector(\n  state => state.selected,\n  selection => trueKeys(selection).length > 0\n);\n\n/**\n * @type {(state: any) => string[]}\n */\nconst selectedAnnotations = createSelector(\n  state => state.selected,\n  selection => trueKeys(selection)\n);\n\n/**\n * Is any sort of filtering currently applied to the list of annotations? This\n * includes a search query, but also if annotations are selected or a user\n * is focused.\n *\n * @type {(state: any) => boolean}\n */\nconst hasAppliedFilter = createSelector(\n  filterQuery,\n  focusModeActive,\n  hasSelectedAnnotations,\n  (filterQuery, focusModeActive, hasSelectedAnnotations) =>\n    !!filterQuery || focusModeActive || hasSelectedAnnotations\n);\n\n/**\n * Return the currently-selected tab\n *\n * @return {'annotation'|'note'|'orphan'}\n */\nfunction selectedTab(state) {\n  return state.selectedTab;\n}\n\n/**\n * Retrieve the current sort option key\n *\n * @return {string}\n */\nfunction sortKey(state) {\n  return state.sortKey;\n}\n\n/**\n * Retrieve applicable sort options for the currently-selected tab.\n *\n * @return {string[]}\n */\nfunction sortKeys(state) {\n  const sortKeysForTab = ['Newest', 'Oldest'];\n  if (state.selectedTab !== uiConstants.TAB_NOTES) {\n    // Location is inapplicable to Notes tab\n    sortKeysForTab.push('Location');\n  }\n  return sortKeysForTab;\n}\n\n/**\n * Summary of applied filters\n *\n * @type {(state: any) => FilterState}\n */\nconst filterState = createSelector(\n  state => state,\n  selection => {\n    return {\n      filterQuery: filterQuery(selection),\n      focusActive: focusModeActive(selection),\n      focusConfigured: focusModeConfigured(selection),\n      focusDisplayName: focusModeUserPrettyName(selection),\n      forcedVisibleCount: forcedVisibleAnnotations(selection).length,\n      selectedCount: selectedAnnotations(selection).length,\n    };\n  }\n);\n\n/* Selectors that take root state */\n\n/**\n * Retrieve state needed to calculate the root thread\n *\n * @type {(rootState: any) => ThreadState}\n */\nconst threadState = createSelector(\n  rootState => rootState.annotations.annotations,\n  rootState => rootState.route.name,\n  rootState => rootState.selection,\n  (annotations, routeName, selection) => {\n    const filters = /** @type {Object.<string,string>} */ ({});\n    const userFilter = focusModeUserFilter(selection);\n    if (userFilter) {\n      filters.user = userFilter;\n    }\n    const selectionState = {\n      expanded: expandedMap(selection),\n      filterQuery: filterQuery(selection),\n      filters,\n      forcedVisible: forcedVisibleAnnotations(selection),\n      selected: selectedAnnotations(selection),\n      sortKey: sortKey(selection),\n      selectedTab: selectedTab(selection),\n    };\n    return { annotations, route: routeName, selection: selectionState };\n  }\n);\n\n/**\n * @typedef SelectionStore\n *\n * // Actions\n * @prop {typeof changeFocusModeUser} changeFocusModeUser\n * @prop {typeof clearSelection} clearSelection\n * @prop {typeof selectAnnotations} selectAnnotations\n * @prop {typeof selectTab} selectTab\n * @prop {typeof setExpanded} setExpanded\n * @prop {typeof setFilterQuery} setFilterQuery\n * @prop {typeof setForcedVisible} setForcedVisible\n * @prop {typeof setSortKey} setSortKey\n * @prop {typeof toggleFocusMode} toggleFocusMode\n * @prop {typeof toggleSelectedAnnotations} toggleSelectedAnnotations\n *\n * // Selectors\n * @prop {() => Object<string,boolean>} expandedMap\n * @prop {() => string|null} filterQuery\n * @prop {() => FilterState} filterState\n * @prop {() => boolean} focusModeActive\n * @prop {() => boolean} focusModeConfigured\n * @prop {() => string|null} focusModeUserFilter\n * @prop {() => string} focusModeUserPrettyName\n * @prop {() => string[]} forcedVisibleAnnotations\n * @prop {() => string|null} getFirstSelectedAnnotationId\n * @prop {() => boolean} hasAppliedFilter\n * @prop {() => boolean} hasSelectedAnnotations\n * @prop {() => string[]} selectedAnnotations\n * @prop {() => string} selectedTab\n * @prop {() => string} sortKey\n * @prop {() => string[]} sortKeys\n *\n * // Root Selectors\n * @prop {() => ThreadState} threadState\n *\n */\n\nexport default {\n  init: init,\n  namespace: 'selection',\n  update: update,\n\n  actions: {\n    changeFocusModeUser,\n    clearSelection,\n    selectAnnotations,\n    selectTab,\n    setExpanded,\n    setFilterQuery,\n    setForcedVisible,\n    setSortKey,\n    toggleFocusMode,\n    toggleSelectedAnnotations,\n  },\n\n  selectors: {\n    expandedMap,\n    filterQuery,\n    filterState,\n    focusModeActive,\n    focusModeConfigured,\n    focusModeUserFilter,\n    focusModeUserPrettyName,\n    forcedVisibleAnnotations,\n    getFirstSelectedAnnotationId,\n    hasAppliedFilter,\n    hasSelectedAnnotations,\n    selectedAnnotations,\n    selectedTab,\n    sortKey,\n    sortKeys,\n  },\n\n  rootSelectors: {\n    threadState,\n  },\n};\n",
    "import * as util from '../util';\n\n/**\n * @typedef {import('../../../types/api').Profile} Profile\n */\n\n/**\n * A dummy profile returned by the `profile` selector before the real profile\n * is fetched.\n *\n * @type Profile\n */\nconst initialProfile = {\n  /** A map of features that are enabled for the current user. */\n  features: {},\n  /** A map of preference names and values. */\n  preferences: {},\n  /**\n   * The authenticated user ID or null if the user is not logged in.\n   */\n  userid: null,\n};\n\nfunction init() {\n  return {\n    /**\n     * Profile object fetched from the `/api/profile` endpoint.\n     */\n    profile: initialProfile,\n  };\n}\n\nconst update = {\n  UPDATE_PROFILE: function (state, action) {\n    return {\n      profile: { ...action.profile },\n    };\n  },\n};\n\nconst actions = util.actionTypes(update);\n\n/**\n * Update the profile information for the current user.\n */\nfunction updateProfile(profile) {\n  return {\n    type: actions.UPDATE_PROFILE,\n    profile,\n  };\n}\n\n/**\n * Return true if a user is logged in and false otherwise.\n *\n * @param {object} state - The application state\n */\nfunction isLoggedIn(state) {\n  return state.profile.userid !== null;\n}\n\n/**\n * Return true if a given feature flag is enabled for the current user.\n *\n * @param {object} state - The application state\n * @param {string} feature - The name of the feature flag. This matches the\n *        name of the feature flag as declared in the Hypothesis service.\n */\nfunction isFeatureEnabled(state, feature) {\n  return !!state.profile.features[feature];\n}\n\n/**\n * Return true if the user's profile has been fetched. This can be used to\n * distinguish the dummy profile returned by `profile()` on startup from a\n * logged-out user profile returned by the server.\n */\nfunction hasFetchedProfile(state) {\n  return state.profile !== initialProfile;\n}\n\n/**\n * Return the user's profile.\n *\n * Returns the current user's profile fetched from the `/api/profile` endpoint.\n *\n * If the profile has not yet been fetched yet, a dummy logged-out profile is\n * returned. This allows code to skip a null check.\n */\nfunction profile(state) {\n  return state.profile;\n}\n\n/**\n * @typedef SessionStore\n *\n * // Actions\n * @prop {typeof hasFetchedProfile} hasFetchedProfile\n *\n * // Selectors\n * @prop {() => boolean} hasFetchedProfile\n * @prop {(feature: string) => boolean} isFeatureEnabled\n * @prop {() => boolean} isLoggedIn\n * @prop {() => Profile} profile\n */\n\nexport default {\n  init,\n  namespace: 'session',\n  update,\n\n  actions: {\n    updateProfile,\n  },\n\n  selectors: {\n    hasFetchedProfile,\n    isFeatureEnabled,\n    isLoggedIn,\n    profile,\n  },\n};\n",
    "/**\n * This module handles the state for `SidebarPanel` components used in the app.\n * It keeps track of the \"active\" `panelName` (simple string) and allows the\n * opening, closing or toggling of panels via their `panelName`. It merely\n * retains the `panelName` state as a string: it has no understanding nor\n * opinions about whether a given `panelName` corresponds to one or more\n * extant `SidebarPanel` components. Only one panel (as keyed by `panelName`)\n * may be \"active\" (open) at one time.\n */\n\nimport * as util from '../util';\n\nfunction init() {\n  return {\n    /*\n     * The `panelName` of the currently-active sidebar panel.\n     * Only one `panelName` may be active at a time, but it is valid (though not\n     * the standard use case) for multiple `SidebarPanel` components to share\n     * the same `panelName`—`panelName` is not intended as a unique ID/key.\n     *\n     * e.g. If `activePanelName` were `foobar`, all `SidebarPanel` components\n     * with `panelName` of `foobar` would be active, and thus visible.\n     *\n     */\n    activePanelName: null,\n  };\n}\n\nconst update = {\n  OPEN_SIDEBAR_PANEL: function (state, action) {\n    return { activePanelName: action.panelName };\n  },\n\n  CLOSE_SIDEBAR_PANEL: function (state, action) {\n    let activePanelName = state.activePanelName;\n    if (action.panelName === activePanelName) {\n      // `action.panelName` is indeed the currently-active panel; deactivate\n      activePanelName = null;\n    }\n    // `action.panelName` is not the active panel; nothing to do here\n    return {\n      activePanelName,\n    };\n  },\n\n  TOGGLE_SIDEBAR_PANEL: function (state, action) {\n    let activePanelName;\n    // Is the panel in question currently the active panel?\n    const panelIsActive = state.activePanelName === action.panelName;\n    // What state should the panel in question move to next?\n    const panelShouldBeActive =\n      typeof action.panelState !== 'undefined'\n        ? action.panelState\n        : !panelIsActive;\n\n    if (panelShouldBeActive) {\n      // If the specified panel should be open (active), set it as active\n      activePanelName = action.panelName;\n    } else if (panelIsActive && !panelShouldBeActive) {\n      // If the specified panel is currently open (active), but it shouldn't be anymore\n      activePanelName = null;\n    } else {\n      // This panel is already inactive; do nothing\n      activePanelName = state.activePanelName;\n    }\n\n    return {\n      activePanelName,\n    };\n  },\n};\n\nconst actions = util.actionTypes(update);\n\n/**\n * Designate `panelName` as the currently-active panel name\n */\nfunction openSidebarPanel(panelName) {\n  return { type: actions.OPEN_SIDEBAR_PANEL, panelName: panelName };\n}\n\n/**\n * `panelName` should not be the active panel\n */\nfunction closeSidebarPanel(panelName) {\n  return { type: actions.CLOSE_SIDEBAR_PANEL, panelName: panelName };\n}\n\n/**\n * Toggle a sidebar panel from its current state, or set it to the\n * designated `panelState`.\n *\n * @param {string} panelName\n * @param {boolean} [panelState] -\n *   Should the panel be active? Omit this prop to simply toggle the value.\n */\nfunction toggleSidebarPanel(panelName, panelState) {\n  return {\n    type: actions.TOGGLE_SIDEBAR_PANEL,\n    panelName: panelName,\n    panelState: panelState,\n  };\n}\n\n/**\n * Is the panel indicated by `panelName` currently active (open)?\n *\n * @param {string} panelName\n * @return {boolean} - `true` if `panelName` is the currently-active panel\n */\nfunction isSidebarPanelOpen(state, panelName) {\n  return state.activePanelName === panelName;\n}\n\n/**\n * @typedef SidebarPanelsStore\n *\n * // Actions\n * @prop {typeof openSidebarPanel} openSidebarPanel\n * @prop {typeof closeSidebarPanel} closeSidebarPanel\n * @prop {typeof toggleSidebarPanel} toggleSidebarPanel\n *\n * // Selectors\n * @prop {(name: string) => boolean} isSidebarPanelOpen\n */\n\nexport default {\n  namespace: 'sidebarPanels',\n  init: init,\n  update: update,\n\n  actions: {\n    openSidebarPanel,\n    closeSidebarPanel,\n    toggleSidebarPanel,\n  },\n\n  selectors: {\n    isSidebarPanelOpen,\n  },\n};\n",
    "import * as util from '../util';\n\n/**\n * @typedef ToastMessage\n * @prop {('error'|'success'|'notice')} type\n * @prop {string} id\n * @prop {string} message\n * @prop {string} moreInfoURL\n * @prop {boolean} isDismissed\n */\n\n/**\n * A store module for managing a collection of toast messages. This module\n * maintains state only; it's up to other layers to handle the management\n * and interactions with these messages.\n */\nfunction init() {\n  return {\n    messages: [],\n  };\n}\n\nconst update = {\n  ADD_MESSAGE: function (state, action) {\n    return {\n      messages: state.messages.concat({ ...action.message }),\n    };\n  },\n\n  REMOVE_MESSAGE: function (state, action) {\n    const updatedMessages = state.messages.filter(\n      message => message.id !== action.id\n    );\n    return { messages: updatedMessages };\n  },\n\n  UPDATE_MESSAGE: function (state, action) {\n    const updatedMessages = state.messages.map(message => {\n      if (message.id && message.id === action.message.id) {\n        return { ...action.message };\n      }\n      return message;\n    });\n    return { messages: updatedMessages };\n  },\n};\n\nconst actions = util.actionTypes(update);\n\n/** Actions */\n\n/**\n * @param {ToastMessage} message\n */\nfunction addMessage(message) {\n  return { type: actions.ADD_MESSAGE, message };\n}\n\n/**\n * Remove the `message` with the corresponding `id` property value.\n *\n * @param {string} id\n */\nfunction removeMessage(id) {\n  return { type: actions.REMOVE_MESSAGE, id };\n}\n\n/**\n * Update the `message` object (lookup is by `id`).\n *\n * @param {ToastMessage} message\n */\nfunction updateMessage(message) {\n  return { type: actions.UPDATE_MESSAGE, message };\n}\n\n/** Selectors */\n\n/**\n * Retrieve a message by `id`\n *\n * @param {string} id\n * @return {Object|undefined}\n */\nfunction getMessage(state, id) {\n  return state.messages.find(message => message.id === id);\n}\n\n/**\n * Retrieve all current messages\n *\n * @return {Object[]}\n */\nfunction getMessages(state) {\n  return state.messages;\n}\n\n/**\n * Return boolean indicating whether a message with the same type and message\n * text exists in the state's collection of messages. This matches messages\n * by content, not by ID (true uniqueness).\n *\n * @param {string} type\n * @param {string} text\n * @return {boolean}\n */\nfunction hasMessage(state, type, text) {\n  return state.messages.some(message => {\n    return message.type === type && message.message === text;\n  });\n}\n\n/**\n * @typedef ToastMessagesStore\n *\n * // Actions\n * @prop {typeof addMessage} addToastMessage\n * @prop {typeof removeMessage} removeToastMessage\n * @prop {typeof updateMessage} updateToastMessage\n *\n * // Selectors\n * @prop {(id: string) => (ToastMessage|undefined)} getToastMessage\n * @prop {() => ToastMessage[]} getToastMessages\n * @prop {(type: string, text: string) => boolean} hasToastMessage\n */\n\nexport default {\n  init,\n  namespace: 'toastMessages',\n  update,\n  actions: {\n    addToastMessage: addMessage,\n    removeToastMessage: removeMessage,\n    updateToastMessage: updateMessage,\n  },\n  selectors: {\n    getToastMessage: getMessage,\n    getToastMessages: getMessages,\n    hasToastMessage: hasMessage,\n  },\n};\n",
    "import * as util from '../util';\n\n/**\n * This module defines actions and state related to the display mode of the\n * sidebar.\n */\n\nfunction init() {\n  return {\n    // Has the sidebar ever been opened? NB: This is not necessarily the\n    // current state of the sidebar, but tracks whether it has ever been open\n    sidebarHasOpened: false,\n    visibleHighlights: false,\n  };\n}\n\nconst update = {\n  SET_HIGHLIGHTS_VISIBLE: function (state, action) {\n    return { visibleHighlights: action.visible };\n  },\n  SET_SIDEBAR_OPENED: (state, action) => {\n    if (action.opened === true) {\n      // If the sidebar is open, track that it has ever been opened\n      return { sidebarHasOpened: true };\n    }\n    // Otherwise, nothing to do here\n    return {};\n  },\n};\n\nconst actions = util.actionTypes(update);\n\n// Action creators\n\n/**\n * Sets whether annotation highlights in connected documents are shown\n * or not.\n */\nfunction setShowHighlights(show) {\n  return { type: actions.SET_HIGHLIGHTS_VISIBLE, visible: show };\n}\n\n/**\n * @param {boolean} opened - If the sidebar is open\n */\nfunction setSidebarOpened(opened) {\n  return { type: actions.SET_SIDEBAR_OPENED, opened };\n}\n\n// Selectors\n\nfunction hasSidebarOpened(state) {\n  return state.sidebarHasOpened;\n}\n\n/**\n * @typedef ViewerStore\n *\n * // Actions\n * @prop {typeof setShowHighlights} setShowHighlights\n * @prop {typeof setSidebarOpened} setSidebarOpened\n *\n * // Selectors\n * @prop {() => boolean} hasSidebarOpened\n */\n\nexport default {\n  init: init,\n  namespace: 'viewer',\n  update: update,\n  actions: {\n    setShowHighlights,\n    setSidebarOpened,\n  },\n  selectors: {\n    hasSidebarOpened,\n  },\n};\n",
    "/* global process */\n\nimport { useEffect, useRef, useReducer } from 'preact/hooks';\nimport shallowEqual from 'shallowequal';\n\nimport warnOnce from '../../shared/warn-once';\nimport { useService } from '../util/service-context';\n\n/** @typedef {import(\"redux\").Store} Store */\n\n/** @typedef {import(\"./index\").SidebarStore} SidebarStore */\n\n/**\n * @template T\n * @callback StoreCallback\n * @param {SidebarStore} store\n * @return {T}\n */\n\n/**\n * Hook for accessing state or actions from the store inside a component.\n *\n * This hook fetches the store using `useService` and returns the result of\n * passing it to the provided callback. The callback will be re-run whenever\n * the store updates and the component will be re-rendered if the result of\n * `callback(store)` changed.\n *\n * This ensures that the component updates when relevant store state changes.\n *\n * @example\n *   function MyWidget({ widgetId }) {\n *     const widget = useStore(store => store.getWidget(widgetId));\n *     const hideWidget = useStore(store => store.hideWidget);\n *\n *     return (\n *       <div>\n *         {widget.name}\n *         <button onClick={() => hideWidget(widgetId)}>Hide</button>\n *       </div>\n *     )\n *   }\n *\n * @template T\n * @param {StoreCallback<T>} callback -\n *   Callback that receives the store as an argument and returns some state\n *   and/or actions extracted from the store.\n * @return {T} - The result of `callback(store)`\n */\nexport default function useStore(callback) {\n  const store = useService('store');\n\n  // Store the last-used callback in a ref so we can access it in the effect\n  // below without having to re-subscribe to the store when it changes.\n  const lastCallback = useRef(/** @type {StoreCallback<T>|null} */ (null));\n  lastCallback.current = callback;\n\n  const lastResult = useRef(/** @type {T|undefined} */ (undefined));\n  lastResult.current = callback(store);\n\n  // Check for a performance issue caused by `callback` returning a different\n  // result on every call, even if the store has not changed.\n  if (process.env.NODE_ENV !== 'production') {\n    if (!shallowEqual(lastResult.current, callback(store))) {\n      warnOnce(\n        'The output of a callback passed to `useStore` changes every time. ' +\n          'This will lead to a component updating more often than necessary.'\n      );\n    }\n  }\n\n  // Abuse `useReducer` to force updates when the store state changes.\n\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n  // Connect to the store, call `callback(store)` whenever the store changes\n  // and re-render the component if the result changed.\n  useEffect(() => {\n    function checkForUpdate() {\n      const result = lastCallback.current(store);\n      if (shallowEqual(result, lastResult.current)) {\n        return;\n      }\n      lastResult.current = result;\n      // Force this function to ignore parameters and just force a store update.\n      /** @type {()=>any} */ (forceUpdate)();\n    }\n\n    // Check for any changes since the component was rendered.\n    checkForUpdate();\n\n    // Check for updates when the store changes in future.\n    const unsubscribe = store.subscribe(checkForUpdate);\n\n    // Remove the subscription when the component is unmounted.\n    return unsubscribe;\n  }, [forceUpdate, store]);\n\n  return lastResult.current;\n}\n",
    "/**\n * Return an object where each key in `updateFns` is mapped to the key itself.\n *\n * @template {Object.<string,Function>} T\n * @param {T} reducers - Object containing reducer functions\n * @return {{ [index in keyof T]: string }}\n */\nexport function actionTypes(reducers) {\n  return Object.keys(reducers).reduce(function (types, key) {\n    types[key] = key;\n    return types;\n  }, /** @type {any} */ ({}));\n}\n\n/**\n * Given objects which map action names to update functions, this returns a\n * reducer function that can be passed to the redux `createStore` function.\n *\n * @param {Object} actionToUpdateFn - Object mapping action names to update\n *                                      functions.\n */\nexport function createReducer(actionToUpdateFn) {\n  return (state = {}, action) => {\n    const fn = actionToUpdateFn[action.type];\n    if (!fn) {\n      return state;\n    }\n    // Some modules return an array rather than an object. They need to be\n    // handled differently so we don't cast them to an object.\n    if (Array.isArray(state)) {\n      return [...fn(state, action)];\n    }\n    return {\n      ...state,\n      ...fn(state, action),\n    };\n  };\n}\n\n/**\n * Takes a mapping of namespaced modules and the store's `getState()` function\n * and returns an aggregated flat object with all the selectors at the root\n * level. The keys to this object are functions that call the original\n * selectors with the `state` argument set to the current value of `getState()`.\n */\nexport function bindSelectors(namespaces, getState) {\n  const boundSelectors = {};\n  Object.keys(namespaces).forEach(namespace => {\n    const { selectors, rootSelectors = {} } = namespaces[namespace];\n\n    Object.keys(selectors).forEach(selector => {\n      if (boundSelectors[selector]) {\n        throw new Error(`Duplicate selector \"${selector}\"`);\n      }\n      boundSelectors[selector] = (...args) =>\n        selectors[selector](getState()[namespace], ...args);\n    });\n\n    Object.keys(rootSelectors).forEach(selector => {\n      if (boundSelectors[selector]) {\n        throw new Error(`Duplicate selector \"${selector}\"`);\n      }\n      boundSelectors[selector] = (...args) =>\n        rootSelectors[selector](getState(), ...args);\n    });\n  });\n  return boundSelectors;\n}\n",
    "/**\n * uiConstants is a set of globally used constants across the application.\n */\n\nexport default {\n  PANEL_HELP: 'help',\n  PANEL_LOGIN_PROMPT: 'loginPrompt',\n  PANEL_SHARE_ANNOTATIONS: 'shareGroupAnnotations',\n  TABS: ['annotation', 'note', 'orphan'],\n  TAB_ANNOTATIONS: 'annotation',\n  TAB_NOTES: 'note',\n  TAB_ORPHANS: 'orphan',\n};\n",
    "/**\n * Parses H account names of the form 'acct:<username>@<provider>'\n * into a {username, provider} object or null if the input does not\n * match the expected form.\n */\nexport function parseAccountID(user) {\n  if (!user) {\n    return null;\n  }\n  const match = user.match(/^acct:([^@]+)@(.+)/);\n  if (!match) {\n    return null;\n  }\n  return {\n    username: match[1],\n    provider: match[2],\n  };\n}\n\n/**\n * Returns the username part of an account ID or an empty string.\n *\n * @param {string} user\n */\nexport function username(user) {\n  const account = parseAccountID(user);\n  if (!account) {\n    return '';\n  }\n  return account.username;\n}\n\n/**\n * Returns true if the authority is of a 3rd party user.\n *\n * @param {string} user\n * @param {string} authDomain\n */\nexport function isThirdPartyUser(user, authDomain) {\n  const account = parseAccountID(user);\n\n  if (!account) {\n    return false;\n  }\n\n  return account.provider !== authDomain;\n}\n",
    "/**\n * Utility functions for querying annotation metadata.\n */\n\n/** @typedef {import('../../types/api').Annotation} Annotation */\n/** @typedef {import('../../types/api').TextPositionSelector} TextPositionSelector */\n/** @typedef {import('../../types/api').TextQuoteSelector} TextQuoteSelector */\n\n/** Extract a URI, domain and title from the given domain model object.\n *\n * @param {Annotation} annotation\n *\n */\nexport function documentMetadata(annotation) {\n  const uri = annotation.uri;\n\n  let domain = new URL(uri).hostname;\n  let title = domain;\n\n  if (annotation.document && annotation.document.title) {\n    title = annotation.document.title[0];\n  }\n\n  if (domain === 'localhost') {\n    domain = '';\n  }\n\n  return {\n    uri: uri,\n    domain: domain,\n    title: title,\n  };\n}\n\n/**\n * Return the domain and title of an annotation for display on an annotation\n * card.\n * @param {Annotation} annotation\n */\nexport function domainAndTitle(annotation) {\n  return {\n    domain: domainTextFromAnnotation(annotation),\n    titleText: titleTextFromAnnotation(annotation),\n    titleLink: titleLinkFromAnnotation(annotation),\n  };\n}\n\n/**\n * @param {Annotation} annotation\n */\nfunction titleLinkFromAnnotation(annotation) {\n  let titleLink = /** @type {string|null} */ (annotation.uri);\n\n  if (\n    titleLink &&\n    !(titleLink.indexOf('http://') === 0 || titleLink.indexOf('https://') === 0)\n  ) {\n    // We only link to http(s) URLs.\n    titleLink = null;\n  }\n\n  if (annotation.links && annotation.links.incontext) {\n    titleLink = annotation.links.incontext;\n  }\n\n  return titleLink;\n}\n/**\n * Returns the domain text from an annotation.\n *\n * @param {Annotation} annotation\n */\nfunction domainTextFromAnnotation(annotation) {\n  const document = documentMetadata(annotation);\n\n  let domainText = '';\n  if (document.uri && document.uri.indexOf('file://') === 0 && document.title) {\n    const parts = document.uri.split('/');\n    const filename = parts[parts.length - 1];\n    if (filename) {\n      domainText = filename;\n    }\n  } else if (document.domain && document.domain !== document.title) {\n    domainText = document.domain;\n  }\n\n  return domainText;\n}\n\n/**\n * Returns the title text from an annotation and crops it to 30 chars\n * if needed.\n *\n * @param {Annotation} annotation\n */\nfunction titleTextFromAnnotation(annotation) {\n  const document = documentMetadata(annotation);\n\n  let titleText = document.title;\n  if (titleText.length > 30) {\n    titleText = titleText.slice(0, 30) + '…';\n  }\n\n  return titleText;\n}\n\n/**\n * Return `true` if the given annotation is a reply, `false` otherwise.\n *\n *  @param {Annotation} annotation - An annotation domain model object.\n */\nexport function isReply(annotation) {\n  return (annotation.references || []).length > 0;\n}\n\n/** Return `true` if the given annotation is new, `false` otherwise.\n *\n * \"New\" means this annotation has been newly created client-side and not\n * saved to the server yet.\n *\n * @param {Annotation} annotation\n */\nexport function isNew(annotation) {\n  return !annotation.id;\n}\n\n/**\n * Return `true` if the given annotation is public, `false` otherwise.\n *\n * @param {Annotation} annotation\n */\nexport function isPublic(annotation) {\n  let isPublic = false;\n\n  if (!annotation.permissions) {\n    return isPublic;\n  }\n\n  annotation.permissions.read.forEach(function (perm) {\n    const readPermArr = perm.split(':');\n    if (readPermArr.length === 2 && readPermArr[0] === 'group') {\n      isPublic = true;\n    }\n  });\n\n  return isPublic;\n}\n\n/**\n * Return `true` if `annotation` has a selector.\n *\n * An annotation which has a selector refers to a specific part of a document,\n * as opposed to a Page Note which refers to the whole document or a reply,\n * which refers to another annotation.\n *\n * @param {Annotation} annotation\n */\nfunction hasSelector(annotation) {\n  return !!(\n    annotation.target &&\n    annotation.target.length > 0 &&\n    annotation.target[0].selector\n  );\n}\n\n/**\n * Return `true` if the given annotation is not yet anchored.\n *\n * Returns false if anchoring is still in process but the flag indicating that\n * the initial timeout allowed for anchoring has expired.\n *\n * @param {Annotation} annotation\n */\nexport function isWaitingToAnchor(annotation) {\n  return (\n    hasSelector(annotation) &&\n    typeof annotation.$orphan === 'undefined' &&\n    !annotation.$anchorTimeout\n  );\n}\n\n/**\n * Has this annotation hidden by moderators?\n *\n * @param {Annotation} annotation\n * @return {boolean}\n */\nexport function isHidden(annotation) {\n  return !!annotation.hidden;\n}\n\n/**\n * Is this annotation a highlight?\n *\n * Highlights are generally identifiable by having no text content AND no tags,\n * but there is some nuance.\n *\n * @param {Annotation} annotation\n * @return {boolean}\n */\nexport function isHighlight(annotation) {\n  // `$highlight` is an ephemeral attribute set by the `annotator` on new\n  // annotation objects (created by clicking the \"highlight\" button).\n  // It is not persisted and cannot be relied upon, but if it IS present,\n  // this is definitely a highlight (one which is not yet saved).\n  if (annotation.$highlight) {\n    return true;\n  }\n\n  if (isNew(annotation)) {\n    // For new (unsaved-to-service) annotations, unless they have a truthy\n    // `$highlight` attribute, we don't know yet if they are a highlight.\n    return false;\n  }\n\n  // Note that it is possible to end up with an empty (no `text`) annotation\n  // that is not a highlight by adding at least one tag—thus, it is necessary\n  // to check for the existence of tags as well as text content.\n\n  return (\n    !isPageNote(annotation) &&\n    !isReply(annotation) &&\n    !annotation.hidden && // A hidden annotation has some form of objectionable content\n    !annotation.text &&\n    !(annotation.tags && annotation.tags.length)\n  );\n}\n\n/**\n * Return `true` if the given annotation is an orphan.\n *\n * @param {Annotation} annotation\n */\nexport function isOrphan(annotation) {\n  return hasSelector(annotation) && annotation.$orphan;\n}\n\n/**\n * Return `true` if the given annotation is a page note.\n *\n * @param {Annotation} annotation\n */\nexport function isPageNote(annotation) {\n  return !hasSelector(annotation) && !isReply(annotation);\n}\n\n/**\n * Return `true` if the given annotation is a top level annotation, `false` otherwise.\n *\n * @param {Annotation} annotation\n */\nexport function isAnnotation(annotation) {\n  return !!(hasSelector(annotation) && !isOrphan(annotation));\n}\n\n/** Return a numeric key that can be used to sort annotations by location.\n *\n * @param {Annotation} annotation\n * @return {number} - A key representing the location of the annotation in\n *                    the document, where lower numbers mean closer to the\n *                    start.\n */\nexport function location(annotation) {\n  if (annotation) {\n    const targets = annotation.target || [];\n    for (let i = 0; i < targets.length; i++) {\n      const selectors = targets[i].selector || [];\n      for (const selector of selectors) {\n        if (selector.type === 'TextPositionSelector') {\n          return selector.start;\n        }\n      }\n    }\n  }\n  return Number.POSITIVE_INFINITY;\n}\n\n/**\n * Return the number of times the annotation has been flagged\n * by other users. If moderation metadata is not present, returns `null`.\n *\n * @param {Annotation} annotation\n * @return {number|null}\n */\nexport function flagCount(annotation) {\n  if (!annotation.moderation) {\n    return null;\n  }\n  return annotation.moderation.flagCount;\n}\n\n/**\n * Return the text quote that an annotation refers to.\n *\n * @param {Annotation} annotation\n * @return {string|null}\n */\nexport function quote(annotation) {\n  if (annotation.target.length === 0) {\n    return null;\n  }\n  const target = annotation.target[0];\n  if (!target.selector) {\n    return null;\n  }\n  const quoteSel = target.selector.find(s => s.type === 'TextQuoteSelector');\n  return quoteSel ? /** @type {TextQuoteSelector}*/ (quoteSel).exact : null;\n}\n",
    "/**\n * @typedef {import('../../types/config').HostConfig} HostConfig\n */\n\nimport serviceConfig from '../service-config';\n\n/**\n * Is the sharing of annotations enabled? Check for any defined `serviceConfig`,\n * but default to `true` if none found.\n *\n * @param {HostConfig} settings\n * @return {boolean}\n */\nexport function sharingEnabled(settings) {\n  const serviceConfig_ = serviceConfig(settings);\n  if (serviceConfig_ === null) {\n    return true;\n  }\n  if (typeof serviceConfig_.enableShareLinks !== 'boolean') {\n    return true;\n  }\n  return serviceConfig_.enableShareLinks;\n}\n\n/**\n * Return any defined standalone URI for this `annotation`, preferably the\n * `incontext` URI, but fallback to `html` link if not present.\n *\n * @param {object} annotation\n * @return {string|undefined}\n */\nexport function shareURI(annotation) {\n  const links = annotation.links;\n  return links && (links.incontext || links.html);\n}\n\n/**\n * For an annotation to be \"shareable\", sharing links need to be enabled overall\n * and the annotation itself needs to have a sharing URI.\n *\n * @param {object} annotation\n * @param {HostConfig} settings\n * @return {boolean}\n */\nexport function isShareable(annotation, settings) {\n  return !!(sharingEnabled(settings) && shareURI(annotation));\n}\n",
    "/**\n * @typedef {import('../../types/api').Annotation} Annotation\n *\n * @typedef Thread\n * @prop {string} id - The thread's id, which equivalent to the id of its\n *       annotation. For unsaved annotations, the id is derived from the\n *       annotation's local `$tag` property.\n * @prop {Annotation} [annotation] - This thread's annotation. Undefined in cases\n *       when an annotation _should_ exist—it's implied by a reference from\n *       another annotation—but is not present in our collection of annotations.\n *       This can happen when a reply has been deleted, but still has children\n *       that exist.\n * @prop {string} [parent] - The id of this thread's parent. Top-level threads\n *       do not have parents\n * @prop {boolean} visible - Whether this thread should be visible when rendered.\n *       true when the thread's annotation matches current annotation filters.\n * @prop {boolean} collapsed - Whether the replies in this thread should be\n *       rendered as collapsed (when true) or expanded (when false)\n * @prop {Thread[]} children\n * @prop {number} totalChildren - Computed count of this thread's immediate\n *       children. This count includes visually-hidden threads.\n * @prop {number} replyCount - Computed count of all replies to a thread\n * @prop {number} [depth] - The thread's depth in the hierarchy\n */\n\n/**\n * Default state for new threads\n */\nconst DEFAULT_THREAD_STATE = {\n  collapsed: false,\n  visible: true,\n  replyCount: 0,\n  totalChildren: 0,\n};\n\n/**\n * Returns a persistent identifier for an Annotation.\n * If the Annotation has been created on the server, it will have\n * an id assigned, otherwise we fall back to the local-only '$tag'\n * property.\n *\n * @param {Annotation} annotation\n * @return {string}\n */\nfunction annotationId(annotation) {\n  return annotation.id || annotation.$tag;\n}\n\n/**\n * Is there a valid path from the thread indicated by `id` to the root thread,\n * with no circular references?\n *\n * @param {string} id - The id of the thread to be verified\n * @param {string} ancestorId - The ancestor of the thread indicated by id that\n *        is to be verified: is it extant and not a circular reference?\n * @return {boolean}\n */\nfunction hasPathToRoot(threads, id, ancestorId) {\n  if (!threads[ancestorId] || threads[ancestorId].parent === id) {\n    // Thread for ancestor not found, or points at itself: circular reference\n    return false;\n  } else if (!threads[ancestorId].parent) {\n    // Top of the tree: we've made it\n    return true;\n  }\n  return hasPathToRoot(threads, id, threads[ancestorId].parent);\n}\n\n/**\n * Link the thread's annotation to its parent\n * @param {Object.<string,Thread>} threads\n * @param {string} id\n * @param {string[]} [parents] - ids of parent annotations, from the\n *        annotation's `references` field. Immediate parent is last entry.\n */\nfunction setParent(threads, id, parents = []) {\n  if (threads[id].parent || !parents.length) {\n    // Parent already assigned, do not try to change it.\n    return;\n  }\n  const parentId = parents[parents.length - 1];\n\n  if (!threads[parentId]) {\n    // Parent does not exist. This may be a reply to an annotation which has\n    // been deleted. Create a placeholder Thread with no annotation to\n    // represent the missing annotation.\n    threads[parentId] = {\n      ...DEFAULT_THREAD_STATE,\n      children: [],\n      id: parentId,\n    };\n    // Link up this new thread to _its_ parent, which should be the original\n    // thread's grandparent\n    setParent(threads, parentId, parents.slice(0, -1));\n  }\n\n  if (hasPathToRoot(threads, id, parentId)) {\n    threads[id].parent = parentId;\n    threads[parentId].children.push(threads[id]);\n  }\n}\n\n/**\n * Creates a thread tree of annotations from a list of annotations.\n *\n * Given a flat list of annotations and replies, this generates a hierarchical\n * thread, using the `references` field of an annotation to link together\n * annotations and their replies. The `references` field is a possibly\n * incomplete ordered list of the parents of an annotation, from furthest to\n * nearest ancestor.\n *\n * @param {Annotation[]} annotations - The input annotations to thread.\n * @return {Thread} - The input annotations threaded into a tree structure.\n */\nfunction threadAnnotations(annotations) {\n  /** @type {Object.<string,Thread>} */\n  const threads = {};\n\n  // Create a `Thread` for each annotation\n  annotations.forEach(annotation => {\n    const id = annotationId(annotation);\n    threads[id] = {\n      ...DEFAULT_THREAD_STATE,\n      children: [],\n      annotation,\n      id,\n    };\n  });\n\n  // Establish ancestral relationships between annotations\n  annotations.forEach(annotation => {\n    // Remove references to self from `references` to avoid circular references\n    const parents = (annotation.references || []).filter(\n      id => id !== annotation.id\n    );\n    return setParent(threads, annotationId(annotation), parents);\n  });\n\n  // Collect the set of threads which have no parent as\n  // children of the thread root\n  const rootThreads = [];\n  for (const rootThreadId in threads) {\n    if (!threads[rootThreadId].parent) {\n      // Top-level threads are collapsed by default\n      threads[rootThreadId].collapsed = true;\n      rootThreads.push(threads[rootThreadId]);\n    }\n  }\n\n  const rootThread = {\n    ...DEFAULT_THREAD_STATE,\n    id: 'root',\n    children: rootThreads,\n    totalChildren: rootThreads.length,\n  };\n\n  return rootThread;\n}\n\n/**\n * Returns a copy of `thread` with the thread\n * and each of its children transformed by mapFn(thread).\n *\n * @param {Thread} thread\n * @param {(t: Thread) => Thread} mapFn\n * @return {Thread}\n */\nfunction mapThread(thread, mapFn) {\n  return Object.assign({}, mapFn(thread), {\n    children: thread.children.map(child => {\n      return mapThread(child, mapFn);\n    }),\n  });\n}\n\n/**\n * Return a sorted copy of an array of threads.\n *\n * @param {Thread[]} threads - The list of threads to sort\n * @param {(a: Annotation, b: Annotation) => boolean} compareFn\n * @return {Thread[]} Sorted list of threads\n */\nfunction sort(threads, compareFn) {\n  return threads.slice().sort((a, b) => {\n    // Threads with no annotation always sort to the top\n    if (!a.annotation || !b.annotation) {\n      if (!a.annotation && !b.annotation) {\n        return 0;\n      } else {\n        return !a.annotation ? -1 : 1;\n      }\n    }\n\n    if (compareFn(a.annotation, b.annotation)) {\n      return -1;\n    } else if (compareFn(b.annotation, a.annotation)) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n}\n\n/**\n * Return a new `Thread` object with all (recursive) `children` arrays sorted.\n * Sort the children of top-level threads using `compareFn` and all other\n * children using `replyCompareFn`.\n *\n * @param {Thread} thread\n * @param {(a: Annotation, b: Annotation) => boolean} compareFn - Less-than\n *         comparison function for sorting top-level annotations\n * @param {(a: Annotation, b: Annotation) => boolean} replyCompareFn - Less-than\n *       comparison function for sorting replies\n * @return {Thread}\n */\nfunction sortThread(thread, compareFn, replyCompareFn) {\n  const children = thread.children.map(child =>\n    sortThread(child, replyCompareFn, replyCompareFn)\n  );\n\n  return { ...thread, children: sort(children, compareFn) };\n}\n\n/**\n * Return a copy of `thread` with the `replyCount` and `depth` properties\n * updated.\n *\n * @param {Thread} thread\n * @param {number} depth\n * @return {Thread}\n */\nfunction countRepliesAndDepth(thread, depth) {\n  const children = thread.children.map(c => countRepliesAndDepth(c, depth + 1));\n  const replyCount = children.reduce(\n    (total, child) => total + 1 + child.replyCount,\n    0\n  );\n  return {\n    ...thread,\n    children,\n    depth,\n    replyCount,\n  };\n}\n\n/**\n * Does this thread have any visible children?\n *\n * @param {Thread} thread\n * @return {boolean}\n */\nfunction hasVisibleChildren(thread) {\n  return thread.children.some(child => {\n    return child.visible || hasVisibleChildren(child);\n  });\n}\n\n/**\n * @typedef Options\n * @prop {string[]} [selected] - List of currently-selected annotation ids, from\n *       the data store\n * @prop {string[]} [forcedVisible] - List of $tags of annotations that have\n *       been explicitly expanded by the user, even if they don't\n *       match current filters\n * @prop {(a: Annotation) => boolean} [filterFn] - Predicate function that\n *       returns `true` if annotation should be visible\n * @prop {(t: Thread) => boolean} [threadFilterFn] - Predicate function that\n *       returns `true` if the annotation should be included in the thread tree\n * @prop {Object.<string, boolean>} [expanded] - Map of thread id => expansion state\n * @prop {(a: Annotation, b: Annotation) => boolean} [sortCompareFn] - Less-than\n *       comparison function for sorting top-level annotations\n * @prop {(a: Annotation, b: Annotation) => boolean} [replySortCompareFn] - Less-than\n *       comparison function for sorting replies\n */\n\n/**\n * Default options for buildThread()\n *\n * @type {Options}\n */\nconst defaultOpts = {\n  selected: [],\n  expanded: {},\n  sortCompareFn: (a, b) => {\n    return a.id < b.id;\n  },\n  replySortCompareFn: (a, b) => {\n    return a.created < b.created;\n  },\n};\n\n/**\n * Project, filter and sort a list of annotations into a thread structure for\n * display by the <Thread> component.\n *\n * buildThread() takes as inputs a flat list of annotations,\n * the current visibility filters and sort function and returns\n * the thread structure that should be rendered.\n *\n * An Annotation present in `annotations` will not be present in the returned threads if:\n * - The annotation does not match thread-level filters (options.threadFilterFn), OR\n * - The annotation is not in the current selection (options.selected), OR\n * - The annotation's thread is hidden and has no visible children\n *\n * Annotations that do not match the currently-applied annotation filters\n * (options.filterFn) will have their thread's `visible` property set to `hidden`\n * (an exception is made if that annotation's thead has been forced visible by\n * a user).\n *\n * @param {Annotation[]} annotations - A list of annotations and replies\n * @param {Partial<Options>} options\n * @return {Thread} - The root thread, whose children are the top-level\n *                    annotations to display.\n */\nexport default function buildThread(annotations, options) {\n  const opts = { ...defaultOpts, ...options };\n\n  const annotationsFiltered = !!opts.filterFn;\n  const threadsFiltered = !!opts.threadFilterFn;\n\n  const hasSelection = opts.selected.length > 0;\n  const hasForcedVisible = opts.forcedVisible && opts.forcedVisible.length;\n\n  let thread = threadAnnotations(annotations);\n\n  if (hasSelection) {\n    // Remove threads (annotations) that are not selected or\n    // are not forced-visible\n    thread.children = thread.children.filter(child => {\n      const isSelected = opts.selected.includes(child.id);\n      const isForcedVisible =\n        hasForcedVisible &&\n        child.annotation &&\n        opts.forcedVisible.includes(child.annotation.$tag);\n      return isSelected || isForcedVisible;\n    });\n  }\n\n  if (threadsFiltered) {\n    // Remove threads not matching thread-level filters\n    thread.children = thread.children.filter(opts.threadFilterFn);\n  }\n\n  // Set visibility for threads\n  thread = mapThread(thread, thread => {\n    let threadIsVisible = thread.visible;\n\n    if (!thread.annotation) {\n      threadIsVisible = false; // Nothing to show\n    } else if (annotationsFiltered) {\n      if (\n        hasForcedVisible &&\n        opts.forcedVisible.includes(thread.annotation.$tag)\n      ) {\n        // This annotation may or may not match the filter, but we should\n        // make sure it is visible because it has been forced visible by user\n        threadIsVisible = true;\n      } else {\n        // Otherwise, visibility depends on whether it matches the filter\n        threadIsVisible = !!opts.filterFn(thread.annotation);\n      }\n    }\n    return { ...thread, visible: threadIsVisible };\n  });\n\n  // Remove top-level threads which contain no visible annotations\n  thread.children = thread.children.filter(\n    child => child.visible || hasVisibleChildren(child)\n  );\n\n  // Determine collapsed state for UI\n  thread = mapThread(thread, thread => {\n    const threadStates = {\n      collapsed: thread.collapsed,\n    };\n\n    if (opts.expanded.hasOwnProperty(thread.id)) {\n      // This thread has been explicitly expanded/collapsed by user\n      threadStates.collapsed = !opts.expanded[thread.id];\n    } else {\n      // If annotations are filtered, and at least one child matches\n      // those filters, make sure thread is not collapsed\n      const hasUnfilteredChildren =\n        annotationsFiltered && hasVisibleChildren(thread);\n      threadStates.collapsed = thread.collapsed && !hasUnfilteredChildren;\n    }\n    return { ...thread, ...threadStates };\n  });\n\n  // Sort the root thread according to the current search criteria\n  thread = sortThread(thread, opts.sortCompareFn, opts.replySortCompareFn);\n\n  // Update `replyCount` and `depth` properties\n  thread = countRepliesAndDepth(thread, -1);\n\n  return thread;\n}\n",
    "/**\n * Utility functions for collections: Sets, Maps, Arrays and Map-like objects\n */\n\n/**\n * Return the number of elements in `ary` for which `predicate` returns true.\n *\n * @template T\n * @param {T[]} ary\n * @param {(item: T) => boolean} predicate\n * @return {number}\n */\nexport function countIf(ary, predicate) {\n  return ary.reduce(function (count, item) {\n    return predicate(item) ? count + 1 : count;\n  }, 0);\n}\n\n/**\n * Convert an array of strings into an object mapping each array entry\n * to `true`.\n *\n * @param {string[]} arr\n * @return {Object<string,true>}\n */\nexport function toTrueMap(arr) {\n  const obj = /** @type {Object<string,true>} */ ({});\n  arr.forEach(key => (obj[key] = true));\n  return obj;\n}\n\n/**\n * Utility function that returns all of the properties of an object whose\n * value is `true`.\n *\n * @param {Object} obj\n * @return {string[]}\n */\nexport function trueKeys(obj) {\n  return Object.keys(obj).filter(key => obj[key] === true);\n}\n",
    "/**\n * Copy the string `text` to the clipboard.\n *\n * In most browsers, this function can only be called in response to a user\n * gesture. For example in response to a \"click\" event.\n *\n * @throws {Error}\n *   This function may throw an exception if the browser rejects the attempt\n *   to copy text.\n * @param {string} text\n */\nexport function copyText(text) {\n  const temp = document.createElement('pre');\n  temp.className = 'copy-text';\n  temp.textContent = text;\n  document.body.appendChild(temp);\n\n  try {\n    const range = document.createRange();\n    const selection = /** @type {Selection} */ (document.getSelection());\n\n    selection.removeAllRanges();\n    range.selectNodeContents(temp);\n    selection.addRange(range);\n    document.execCommand('copy');\n  } finally {\n    temp.remove();\n  }\n}\n",
    "// cached date formatting instance.\n// See https://github.com/hypothesis/h/issues/2820#issuecomment-166285361\nlet formatter;\n\n/**\n * Returns a standard human-readable representation\n * of a date and time.\n *\n * @param {Date} date\n */\nexport function format(date) {\n  if (typeof Intl !== 'undefined' && Intl.DateTimeFormat) {\n    if (!formatter) {\n      formatter = new Intl.DateTimeFormat(undefined, {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n        weekday: 'long',\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n    }\n    return formatter.format(date);\n  } else {\n    // IE < 11, Safari <= 9.0.\n    // In English, this generates the string most similar to\n    // the toLocaleDateString() result above.\n    return date.toDateString() + ' ' + date.toLocaleTimeString();\n  }\n}\n",
    "/**\n * Prevent windows or tabs opened via links under `root` from accessing their\n * opening `Window`.\n *\n * This makes links with `target=\"blank\"` attributes act as if they also had\n * the `rel=\"noopener\"` [1] attribute set.\n *\n * In addition to preventing tab-jacking [2], this also enables multi-process\n * browsers to more easily use a new process for instances of Hypothesis in the\n * newly-opened tab and works around a bug in Chrome [3]\n *\n * [1] https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types#noopener\n * [2] https://mathiasbynens.github.io/rel-noopener/\n * [3] https://bugs.chromium.org/p/chromium/issues/detail?id=753314\n *\n * @param {Element} root - Root element\n */\nexport default function disableOpenerForExternalLinks(root) {\n  root.addEventListener('click', event => {\n    const target = /** @type {HTMLElement} */ (event.target);\n\n    if (target.tagName === 'A') {\n      const linkEl = /** @type {HTMLAnchorElement} */ (target);\n      if (linkEl.target === '_blank') {\n        linkEl.rel = 'noopener';\n      }\n    }\n  });\n}\n",
    "/**\n * Obtain the pixel height of the provided DOM element, including\n * top and bottom margins.\n *\n * Note that this function *only* accounts for margins on `element`, not any\n * descendants which may contribute to the effective margin due to CSS \"margin\n * collapsing\".\n *\n * @param {Element} element - DOM element to measure\n * @return {number|null} - The element's height in pixels\n */\nexport function getElementHeightWithMargins(element) {\n  const style = window.getComputedStyle(element);\n  // Get the height of the element inside the border-box, excluding\n  // top and bottom margins.\n  const elementHeight = element.getBoundingClientRect().height;\n\n  // Get the bottom margin of the element. style.margin{Side} will return\n  // values of the form 'Npx', from which we extract 'N'.\n  const marginHeight =\n    parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n\n  return elementHeight + marginHeight;\n}\n\n/**\n * Attach listeners for one or multiple events to an element and return a\n * function that removes the listeners.\n *\n * @param {HTMLElement} element\n * @param {string[]|string} events\n * @param {EventListener} listener\n * @param {Object} options\n *   @param {boolean} [options.useCapture]\n * @return {function} Function which removes the event listeners.\n */\nexport function listen(element, events, listener, { useCapture = false } = {}) {\n  if (!Array.isArray(events)) {\n    events = [events];\n  }\n  events.forEach(event =>\n    element.addEventListener(event, listener, useCapture)\n  );\n  return () => {\n    /** @type {string[]} */ (events).forEach(event =>\n      element.removeEventListener(event, listener, useCapture)\n    );\n  };\n}\n",
    "import getApiUrl from '../get-api-url';\nimport hostConfig from '../host-config';\nimport * as postMessageJsonRpc from './postmessage-json-rpc';\n\n/**\n * @typedef {import('../../types/config').SidebarConfig} SidebarConfig\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n */\n\n/**\n * @deprecated\n */\nfunction ancestors(window_) {\n  if (window_ === window_.top) {\n    return [];\n  }\n\n  // nb. The top window's `parent` is itself!\n  const ancestors = [];\n  do {\n    window_ = window_.parent;\n    ancestors.push(window_);\n  } while (window_ !== window_.top);\n\n  return ancestors;\n}\n\n/**\n * Returns the global embedder ancestor frame.\n *\n * @param {number} levels - Number of ancestors levels to ascend.\n * @param {Window=} window_\n * @return {Window}\n */\nfunction getAncestorFrame(levels, window_ = window) {\n  let ancestorWindow = window_;\n  for (let i = 0; i < levels; i++) {\n    if (ancestorWindow === ancestorWindow.top) {\n      throw new Error(\n        'The target parent frame has exceeded the ancestor tree. Try reducing the `requestConfigFromFrame.ancestorLevel` value in the `hypothesisConfig`'\n      );\n    }\n    ancestorWindow = ancestorWindow.parent;\n  }\n  return ancestorWindow;\n}\n\n/**\n * @deprecated\n * Fetch client configuration from an ancestor frame.\n *\n * @param {string} origin - The origin of the frame to fetch config from.\n * @param {Window} window_ - Test seam.\n * @return {Promise<any>}\n */\nfunction fetchConfigFromAncestorFrame(origin, window_ = window) {\n  const configResponses = [];\n\n  for (let ancestor of ancestors(window_)) {\n    const timeout = 3000;\n    const result = postMessageJsonRpc.call(\n      ancestor,\n      origin,\n      'requestConfig',\n      [],\n      timeout\n    );\n    configResponses.push(result);\n  }\n\n  if (configResponses.length === 0) {\n    configResponses.push(Promise.reject(new Error('Client is top frame')));\n  }\n\n  return Promise.race(configResponses);\n}\n\n/**\n * @deprecated\n * Merge client configuration from h service with config fetched from\n * embedding frame.\n *\n * Typically the configuration from the embedding frame is passed\n * synchronously in the query string. However it can also be retrieved from\n * an ancestor of the embedding frame. See tests for more details.\n *\n * @param {Object} appConfig - Settings rendered into `app.html` by the h service.\n * @param {Window} window_ - Test seam.\n * @return {Promise<Object>} - The merged settings.\n */\nfunction fetchConfigLegacy(appConfig, window_ = window) {\n  const hostPageConfig = hostConfig(window_);\n\n  let embedderConfig;\n  const origin = /** @type string */ (hostPageConfig.requestConfigFromFrame);\n  embedderConfig = fetchConfigFromAncestorFrame(origin, window_);\n\n  return embedderConfig.then(embedderConfig => {\n    const mergedConfig = Object.assign({}, appConfig, embedderConfig);\n    mergedConfig.apiUrl = getApiUrl(mergedConfig);\n    return mergedConfig;\n  });\n}\n\n/**\n * Merge client configuration from h service with config from the hash fragment.\n *\n * @param {Object} appConfig - App config settings rendered into `app.html` by the h service.\n * @param {Object} hostPageConfig - App configuration specified by the embedding  frame.\n * @return {Object} - The merged settings.\n */\nfunction fetchConfigEmbed(appConfig, hostPageConfig) {\n  const mergedConfig = {\n    ...appConfig,\n    ...hostPageConfig,\n  };\n  mergedConfig.apiUrl = getApiUrl(mergedConfig);\n  return mergedConfig;\n}\n\n/**\n * Merge client configuration from h service with config fetched from\n * a parent frame asynchronously.\n *\n * Use this method to retrieve the config asynchronously from a parent\n * frame via RPC. See tests for more details.\n *\n * @param {Object} appConfig - Settings rendered into `app.html` by the h service.\n * @param {Window} parentFrame - Frame to send call to.\n * @param {string} origin - Origin filter for `window.postMessage` call.\n * @return {Promise<Object>} - The merged settings.\n */\nasync function fetchConfigRpc(appConfig, parentFrame, origin) {\n  const remoteConfig = await postMessageJsonRpc.call(\n    parentFrame,\n    origin,\n    'requestConfig',\n    [],\n    3000\n  );\n  // Closure for the RPC call to scope parentFrame and origin variables.\n  const rpcCall = (method, args = [], timeout = 3000) =>\n    postMessageJsonRpc.call(parentFrame, origin, method, args, timeout);\n  const mergedConfig = fetchConfigEmbed(appConfig, remoteConfig);\n  return fetchGroupsAsync(mergedConfig, rpcCall);\n}\n\n/**\n * Potentially mutates the `groups` config object(s) to be a promise that\n * resolves right away if the `groups` value exists in the original\n * config, or returns a promise that resolves with a secondary RPC\n * call to `requestGroups` when the `groups` value is '$rpc:requestGroups'\n * If the `groups` value is missing or falsely then it won't be mutated.\n *\n * This allows the app to start with an incomplete config and then lazily\n * fill in the `groups` value(s) later when its ready. This helps speed\n * up the loading process.\n *\n * @param {Object} config - The configuration object to mutate. This should\n *  already have the `services` value\n * @param {function} rpcCall - RPC method\n *  (method, args, timeout) => Promise\n * @return {Promise<Object>} - The mutated settings\n */\nasync function fetchGroupsAsync(config, rpcCall) {\n  if (Array.isArray(config.services)) {\n    config.services.forEach((service, index) => {\n      if (service.groups === '$rpc:requestGroups') {\n        // The `groups` need to be fetched from a secondary RPC call and\n        // there should be no timeout as it may be waiting for user input.\n        service.groups = rpcCall('requestGroups', [index], null).catch(() => {\n          throw new Error('Unable to fetch groups');\n        });\n      }\n    });\n  }\n  return config;\n}\n\n/**\n * Fetch the host configuration and merge it with the app configuration from h.\n *\n * There are 3 ways to get the host config:\n *  Direct embed - From the hash string of the embedder frame.\n *  Legacy RPC with unknown parent - From a ancestor parent frame that passes it down via RPC. (deprecated)\n *  RPC with known parent - From a ancestor parent frame that passes it down via RPC.\n *\n * @param {SidebarConfig} appConfig\n * @param {Window} window_ - Test seam.\n * @return {Promise<MergedConfig>} - The merged settings.\n */\nexport async function fetchConfig(appConfig, window_ = window) {\n  const hostPageConfig = hostConfig(window);\n\n  const requestConfigFromFrame = hostPageConfig.requestConfigFromFrame;\n\n  if (!requestConfigFromFrame) {\n    // Directly embed: just get the config.\n    return fetchConfigEmbed(appConfig, hostPageConfig);\n  }\n  if (typeof requestConfigFromFrame === 'string') {\n    // Legacy: send RPC to all parents to find config. (deprecated)\n    // nb. Browsers may display errors in the console when messages are sent to frames\n    // that don't match the origin filter\".\n    return await fetchConfigLegacy(appConfig, window_);\n  } else if (\n    typeof requestConfigFromFrame.ancestorLevel === 'number' &&\n    typeof requestConfigFromFrame.origin === 'string'\n  ) {\n    // Know parent frame: send RPC directly to the parent.\n    const parentFrame = getAncestorFrame(\n      requestConfigFromFrame.ancestorLevel,\n      window_\n    );\n    return await fetchConfigRpc(\n      appConfig,\n      parentFrame,\n      requestConfigFromFrame.origin\n    );\n  } else {\n    throw new Error(\n      'Improper `requestConfigFromFrame` object. Both `ancestorLevel` and `origin` need to be specified'\n    );\n  }\n}\n",
    "/**\n * @typedef {import('../../types/api').Group} Group\n */\n\n/**\n * @param {Group} group\n * @return {string}\n */\nexport function orgName(group) {\n  return group.organization && group.organization.name;\n}\n",
    "import immutable from './immutable';\n\n/**\n * @typedef {import('../../types/api').Group} Group\n */\n\n// TODO: Update when this is a property available on the API response\nconst DEFAULT_ORG_ID = '__default__';\n\n/**\n * Generate consistent object keys for organizations so that they\n * may be sorted\n *\n * @param {Object} organization\n * @return {String}\n */\nfunction orgKey(organization) {\n  if (organization.id === DEFAULT_ORG_ID) {\n    return DEFAULT_ORG_ID;\n  }\n  return `${organization.name.toLowerCase()}${organization.id}`;\n}\n\n/**\n * Add a clone of the group object to the given organization object's\n * groups Array.\n *\n * @param {Group} group\n * @param {Object} organization\n * @return undefined - organization is mutated in place\n */\nfunction addGroup(group, organization) {\n  // Object.assign won't suffice because of nested objects on groups\n  const groupObj = Object.assign({}, group);\n  const groupList = organization.groups;\n\n  if (!groupList.length && group.organization.logo) {\n    groupObj.logo = group.organization.logo;\n  }\n\n  groupList.push(immutable(groupObj));\n}\n\n/**\n * Iterate over groups and locate unique organizations. Slot groups into\n * their appropriate \"parent\" organizations.\n *\n * @param {Array<Group>} groups\n * @return {Object} - A collection of all unique organizations, containing\n *                    their groups. Keyed by each org's \"orgKey\"\n */\nfunction organizations(groups) {\n  const orgs = {};\n  groups.forEach(group => {\n    // Ignore groups with undefined or non-object organizations\n    if (typeof group.organization !== 'object') {\n      return;\n    }\n    const orgId = orgKey(group.organization);\n    if (typeof orgs[orgId] === 'undefined') {\n      // First time we've seen this org\n      orgs[orgId] = Object.assign({}, group.organization);\n      orgs[orgId].groups = []; // Will hold this org's groups\n    }\n    addGroup(group, orgs[orgId]); // Add the current group to its organization's groups\n  });\n  return orgs;\n}\n\n/**\n * Take groups as returned from API service and sort them by which organization\n * they are in (all groups within a given organization will be contiguous\n * in the resulting Array).\n *\n * Groups with no organization or an unexpanded organization\n * will be omitted from the resulting Array.\n *\n * Organization ordering is by name, secondarily (pub)ID. Groups in the default\n * organization will appear at the end of the list. The first group\n * in each organization will have a logo property (if available on the\n * organization).\n *\n * @param {Array<Group>} groups\n * @return {Array<Object>} - groups sorted by which organization they're in\n */\nexport default function groupsByOrganization(groups) {\n  const orgs = organizations(groups);\n  const defaultOrganizationGroups = [];\n  const sortedGroups = [];\n\n  const sortedOrgKeys = Object.keys(orgs).sort();\n  sortedOrgKeys.forEach(orgKey => {\n    if (orgKey === DEFAULT_ORG_ID) {\n      // Handle default groups separately\n      defaultOrganizationGroups.push(...orgs[orgKey].groups);\n    } else {\n      sortedGroups.push(...orgs[orgKey].groups);\n    }\n  });\n\n  if (defaultOrganizationGroups.length) {\n    // Put default groups at end\n    sortedGroups.push(...defaultOrganizationGroups);\n  }\n\n  return sortedGroups;\n}\n",
    "/**\n * @typedef {import('../../types/config').HostConfig} HostConfig\n * @typedef {import('../../types/api').Group} Group\n */\n\nimport escapeStringRegexp from 'escape-string-regexp';\nimport serviceConfig from '../service-config';\n\n/**\n * Should users be able to leave private groups of which they\n * are a member? Users may leave private groups unless\n * explicitly disallowed in the service configuration of the\n * `settings` object.\n *\n * @param {HostConfig} settings\n * @return {boolean}\n */\nfunction allowLeavingGroups(settings) {\n  const config = serviceConfig(settings);\n  if (!config) {\n    return true;\n  }\n  return !!config.allowLeavingGroups;\n}\n\n/**\n * Combine groups from multiple api calls together to form a unique list of groups.\n * Add an isMember property to each group indicating whether the logged in user is a member.\n * Add an isScopedToUri property to each group indicating whether the uri matches the group's\n *   uri patterns. If no uri patterns are specified, defaults to True.\n *\n * @param {Group[]} userGroups - groups the user is a member of\n * @param {Group[]} featuredGroups - all other groups, may include some duplicates from the userGroups\n * @param {string} uri - uri of the current page\n * @param {HostConfig} settings\n */\nexport function combineGroups(userGroups, featuredGroups, uri, settings) {\n  const worldGroup = featuredGroups.find(g => g.id === '__world__');\n  if (worldGroup) {\n    userGroups.unshift(worldGroup);\n  }\n\n  const myGroupIds = userGroups.map(g => g.id);\n  featuredGroups = featuredGroups.filter(g => !myGroupIds.includes(g.id));\n\n  // Set the isMember property indicating user membership.\n  featuredGroups.forEach(group => (group.isMember = false));\n  userGroups.forEach(group => (group.isMember = true));\n\n  const groups = userGroups.concat(featuredGroups);\n\n  // Set the `canLeave` property. Groups can be left if they are private unless\n  // the global `allowLeavingGroups` value is false in the config settings object.\n  groups.forEach(group => {\n    group.canLeave = !allowLeavingGroups(settings)\n      ? false\n      : group.type === 'private';\n  });\n\n  // Add isScopedToUri property indicating whether a group is within scope\n  // of the given uri. If the scope check cannot be performed, isScopedToUri\n  // defaults to true.\n  groups.forEach(group => (group.isScopedToUri = isScopedToUri(group, uri)));\n\n  return groups;\n}\n\n/**\n * @param {Group} group\n * @param {string} uri\n */\nfunction isScopedToUri(group, uri) {\n  /* If a scope check cannot be performed, meaning:\n   * - the group doesn't have a scopes attribute\n   * - the group has no scopes.uri_patterns present\n   * - there is no uri to compare against (aka: uri=null)\n   * the group is defaulted to in-scope.\n   */\n  if (group.scopes && group.scopes.uri_patterns.length > 0 && uri) {\n    return uriMatchesScopes(uri, group.scopes.uri_patterns);\n  }\n  return true;\n}\n\nfunction uriMatchesScopes(uri, scopes) {\n  return (\n    scopes.find(uriRegex =>\n      uri.match(\n        // Convert *'s to .*'s for regex matching and escape all other special characters.\n        uriRegex.split('*').map(escapeStringRegexp).join('.*')\n      )\n    ) !== undefined\n  );\n}\n",
    "/* global process */\n\n/**\n * Freeze an object recursively.\n *\n * This only works for plain objects, arrays and objects where data is stored\n * in enumerable fields.\n */\nfunction deepFreeze(object) {\n  Object.freeze(object);\n\n  Object.values(object).forEach(val => {\n    if (typeof val === 'object' && val !== null) {\n      deepFreeze(val);\n    }\n  });\n\n  return object;\n}\n\n/**\n * Prevent accidental mutations to `object` or any of its fields in debug builds.\n *\n * @param {Object} object\n * @return {Object} Returns the input object\n */\nexport default function immutable(object) {\n  if (process.env.NODE_ENV === 'production') {\n    return object;\n  } else {\n    return deepFreeze(object);\n  }\n}\n",
    "/**\n * @typedef {import('../../types/config').MergedConfig} MergedConfig\n */\n\nimport serviceConfig from '../service-config';\n\n/**\n * Return `true` if the first configured service is a \"third-party\" service.\n *\n * Return `true` if the first custom annotation service configured in the\n * services array in the host page is a third-party service, `false` otherwise.\n *\n * If no custom annotation services are configured then return `false`.\n *\n * @param {MergedConfig} settings\n * @return {boolean}\n */\nexport default function isThirdPartyService(settings) {\n  const service = serviceConfig(settings);\n\n  if (service === null) {\n    return false;\n  }\n\n  if (!service.hasOwnProperty('authority')) {\n    return false;\n  }\n\n  return service.authority !== settings.authDomain;\n}\n",
    "/**\n * A simple memoization function which caches the last result of\n * a single-argument function.\n *\n * The argument to the input function may be of any type and is compared\n * using reference equality.\n *\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} fn\n * @return {(arg: Arg) => Result}\n */\nexport default function memoize(fn) {\n  if (fn.length !== 1) {\n    throw new Error('Memoize input must be a function of one argument');\n  }\n\n  let lastArg;\n  let lastResult;\n\n  return function (arg) {\n    if (arg === lastArg) {\n      return lastResult;\n    }\n    lastArg = arg;\n    lastResult = fn(arg);\n    return lastResult;\n  };\n}\n",
    "import * as queryString from 'query-string';\n\nimport * as random from './random';\n\n/**\n * An object holding the details of an access token from the tokenUrl endpoint.\n * @typedef {Object} TokenInfo\n * @property {string} accessToken  - The access token itself.\n * @property {number} expiresAt    - The date when the timestamp will expire.\n * @property {string} refreshToken - The refresh token that can be used to\n *                                   get a new access token.\n */\n\n/**\n * Return a new TokenInfo object from the given tokenUrl endpoint response.\n * @param {Response} response - The HTTP response from a POST to the tokenUrl\n *                            endpoint.\n * @returns {Promise<TokenInfo>}\n */\nfunction tokenInfoFrom(response) {\n  return response.json().then(data => {\n    return {\n      accessToken: data.access_token,\n\n      // Set the expiry date to some time slightly before that implied by\n      // `expires_in` to account for the delay in the client receiving the\n      // response.\n      expiresAt: Date.now() + (data.expires_in - 10) * 1000,\n\n      refreshToken: data.refresh_token,\n    };\n  });\n}\n\n/**\n * Generate a short random string suitable for use as the \"state\" param in\n * authorization requests.\n *\n * See https://tools.ietf.org/html/rfc6749#section-4.1.1.\n */\nfunction generateState() {\n  return random.generateHexString(16);\n}\n\n/**\n * OAuthClient configuration.\n *\n * @typedef {Object} Config\n * @property {string} clientId - OAuth client ID\n * @property {string} tokenEndpoint - OAuth token exchange/refresh endpoint\n * @property {string} authorizationEndpoint - OAuth authorization endpoint\n * @property {string} revokeEndpoint - RFC 7009 token revocation endpoint\n * @property {() => string} [generateState] - Authorization \"state\" parameter generator\n */\n\n/**\n * OAuthClient handles interaction with the annotation service's OAuth\n * endpoints.\n */\nexport default class OAuthClient {\n  /**\n   * Create a new OAuthClient\n   *\n   * @param {Config} config\n   */\n  constructor(config) {\n    this.clientId = config.clientId;\n    this.tokenEndpoint = config.tokenEndpoint;\n    this.authorizationEndpoint = config.authorizationEndpoint;\n    this.revokeEndpoint = config.revokeEndpoint;\n\n    // Test seam\n    this.generateState = config.generateState || generateState;\n  }\n\n  /**\n   * Exchange an authorization code for access and refresh tokens.\n   *\n   * @param {string} code\n   * @return {Promise<TokenInfo>}\n   */\n  exchangeAuthCode(code) {\n    const data = {\n      client_id: this.clientId,\n      grant_type: 'authorization_code',\n      code,\n    };\n    return this._formPost(this.tokenEndpoint, data).then(response => {\n      if (response.status !== 200) {\n        throw new Error('Authorization code exchange failed');\n      }\n      return tokenInfoFrom(response);\n    });\n  }\n\n  /**\n   * Exchange a grant token for access and refresh tokens.\n   *\n   * See https://tools.ietf.org/html/rfc7523#section-4\n   *\n   * @param {string} token\n   * @return {Promise<TokenInfo>}\n   */\n  exchangeGrantToken(token) {\n    const data = {\n      grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n      assertion: token,\n    };\n    return this._formPost(this.tokenEndpoint, data).then(response => {\n      if (response.status !== 200) {\n        throw new Error('Failed to retrieve access token');\n      }\n      return tokenInfoFrom(response);\n    });\n  }\n\n  /**\n   * Refresh an access and refresh token pair.\n   *\n   * See https://tools.ietf.org/html/rfc6749#section-6\n   *\n   * @param {string} refreshToken\n   * @return {Promise<TokenInfo>}\n   */\n  refreshToken(refreshToken) {\n    const data = { grant_type: 'refresh_token', refresh_token: refreshToken };\n    return this._formPost(this.tokenEndpoint, data).then(response => {\n      if (response.status !== 200) {\n        throw new Error('Failed to refresh access token');\n      }\n      return tokenInfoFrom(response);\n    });\n  }\n\n  /**\n   * Revoke an access and refresh token pair.\n   *\n   * @param {string} accessToken\n   * @return {Promise}\n   */\n  revokeToken(accessToken) {\n    return this._formPost(this.revokeEndpoint, { token: accessToken });\n  }\n\n  /**\n   * Prompt the user for permission to access their data.\n   *\n   * Returns an authorization code which can be passed to `exchangeAuthCode`.\n   *\n   * @param {Window} $window - Window which will receive the auth response.\n   * @param {Window} authWindow - Popup window where the login prompt will be shown.\n   *   This should be created using `openAuthPopupWindow`.\n   * @return {Promise<string>}\n   */\n  authorize($window, authWindow) {\n    // Random state string used to check that auth messages came from the popup\n    // window that we opened.\n    const state = this.generateState();\n\n    // Promise which resolves or rejects when the user accepts or closes the\n    // auth popup.\n    const authResponse = new Promise((resolve, reject) => {\n      function authRespListener(event) {\n        if (typeof event.data !== 'object') {\n          return;\n        }\n\n        if (event.data.state !== state) {\n          // This message came from a different popup window.\n          return;\n        }\n\n        if (event.data.type === 'authorization_response') {\n          resolve(event.data);\n        }\n        if (event.data.type === 'authorization_canceled') {\n          reject(new Error('Authorization window was closed'));\n        }\n        $window.removeEventListener('message', authRespListener);\n      }\n      $window.addEventListener('message', authRespListener);\n    });\n\n    // Authorize user and retrieve grant token\n    let authUrl = this.authorizationEndpoint;\n    authUrl +=\n      '?' +\n      queryString.stringify({\n        client_id: this.clientId,\n        origin: $window.location.origin,\n        response_mode: 'web_message',\n        response_type: 'code',\n        state: state,\n      });\n\n    // @ts-ignore - TS doesn't know about `location = <string>`.\n    authWindow.location = authUrl;\n\n    return authResponse.then(rsp => rsp.code);\n  }\n\n  /**\n   * Make an `application/x-www-form-urlencoded` POST request.\n   *\n   * @param {string} url\n   * @param {Object} data - Parameter dictionary\n   */\n  _formPost(url, data) {\n    // The `fetch` API has native support for sending form data by setting\n    // the `body` option to a `FormData` instance. We are not using that here\n    // because our test environment has very limited `FormData` support and it\n    // is simpler just to format the data manually.\n    const formData = queryString.stringify(data);\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    };\n    return fetch(url, {\n      method: 'POST',\n      headers,\n      body: formData,\n    });\n  }\n\n  /**\n   * Create and show a pop-up window for use with `OAuthClient#authorize`.\n   *\n   * This function _must_ be called in the same turn of the event loop as the\n   * button or link which initiates login to avoid triggering the popup blocker\n   * in certain browsers. See https://github.com/hypothesis/client/issues/534\n   * and https://github.com/hypothesis/client/issues/535.\n   *\n   * @param {Window} $window - The parent of the created window.\n   * @return {Window} The new popup window.\n   */\n  static openAuthPopupWindow($window) {\n    // In Chrome & Firefox the sizes passed to `window.open` are used for the\n    // viewport size. In Safari the size is used for the window size including\n    // title bar etc. There is enough vertical space at the bottom to allow for\n    // this.\n    //\n    // See https://bugs.webkit.org/show_bug.cgi?id=143678\n    const width = 475;\n    const height = 430;\n    const left = $window.screen.width / 2 - width / 2;\n    const top = $window.screen.height / 2 - height / 2;\n\n    // Generate settings for `window.open` in the required comma-separated\n    // key=value format.\n    const authWindowSettings = queryString\n      .stringify({\n        left: left,\n        top: top,\n        width: width,\n        height: height,\n      })\n      .replace(/&/g, ',');\n\n    return /** @type {Window} */ ($window.open(\n      'about:blank',\n      'Log in to Hypothesis',\n      authWindowSettings\n    ));\n  }\n}\n",
    "/**\n * Watch for changes in the size (`clientWidth` and `clientHeight`) of\n * an element.\n *\n * Returns a cleanup function which should be called to remove observers when\n * updates are no longer needed.\n *\n * @param {Element} element - HTML element to watch\n * @param {(width: number, height: number) => any} onSizeChanged -\n *   Callback to invoke with the `clientWidth` and `clientHeight` of the\n *   element when a change in its size is detected.\n * @return {() => void}\n */\nexport default function observeElementSize(element, onSizeChanged) {\n  // @ts-ignore - TS is missing `ResizeObserver` type definition\n  if (typeof ResizeObserver !== 'undefined') {\n    // @ts-ignore\n    const observer = new ResizeObserver(() =>\n      onSizeChanged(element.clientWidth, element.clientHeight)\n    );\n    observer.observe(element);\n    return () => observer.disconnect();\n  }\n\n  // Fallback method which listens for the most common events that result in\n  // element size changes:\n  //\n  // - Window size change\n  // - Media loading and adjusting size to content\n  // - DOM changes\n  //\n  // This is not comprehensive but it is simple to implement and good-enough for\n  // our current use cases.\n\n  let prevWidth = element.clientWidth;\n  let prevHeight = element.clientHeight;\n\n  const check = () => {\n    if (\n      prevWidth !== element.clientWidth ||\n      prevHeight !== element.clientHeight\n    ) {\n      prevWidth = element.clientWidth;\n      prevHeight = element.clientHeight;\n      onSizeChanged(prevWidth, prevHeight);\n    }\n  };\n\n  element.addEventListener('load', check);\n  window.addEventListener('resize', check);\n  const observer = new MutationObserver(check);\n  observer.observe(element, {\n    characterData: true,\n    childList: true,\n    subtree: true,\n  });\n\n  return () => {\n    element.removeEventListener('load', check);\n    window.removeEventListener('resize', check);\n    observer.disconnect();\n  };\n}\n",
    "/**\n * Utils for working with permissions principals on annotations.\n *\n * This is the same as the `permissions` field retrieved on an annotation via\n * the API.\n *\n * Principals are strings of the form `type:id` where `type` is `'acct'` (for a\n * specific user) or `'group'` (for a group).\n *\n * @typedef Permissions\n * @property {string[]} read - List of principals that can read the annotation\n * @property {string[]} update - List of principals that can edit the annotation\n * @property {string[]} delete - List of principals that can delete the\n * annotation\n */\n\nfunction defaultLevel(savedLevel) {\n  switch (savedLevel) {\n    case 'private':\n    case 'shared':\n      return savedLevel;\n    default:\n      return 'shared';\n  }\n}\n\n/**\n * Return the permissions for a private annotation.\n *\n * A private annotation is one which is readable only by its author.\n *\n * @param {string} userid - User ID of the author\n * @return {Permissions}\n */\nexport function privatePermissions(userid) {\n  return {\n    read: [userid],\n    update: [userid],\n    delete: [userid],\n  };\n}\n\n/**\n * Return the permissions for an annotation that is shared with the given\n * group.\n *\n * @param {string} userid - User ID of the author\n * @param {string} groupid - ID of the group the annotation is being\n * shared with\n * @return {Permissions}\n */\nexport function sharedPermissions(userid, groupid) {\n  return Object.assign(privatePermissions(userid), {\n    read: ['group:' + groupid],\n  });\n}\n/**\n * Return the default permissions for an annotation in a given group.\n *\n * @param {string} userid - User ID of the author\n * @param {string} groupid - ID of the group the annotation is being shared\n * with\n * @return {Permissions}\n */\nexport function defaultPermissions(userid, groupid, savedLevel) {\n  if (defaultLevel(savedLevel) === 'private' && userid) {\n    return privatePermissions(userid);\n  } else {\n    return sharedPermissions(userid, groupid);\n  }\n}\n\n/**\n * Return true if an annotation with the given permissions is shared with any\n * group.\n *\n * @param {Permissions} perms\n * @return {boolean}\n */\nexport function isShared(perms) {\n  return perms.read.some(function (principal) {\n    return principal.indexOf('group:') === 0;\n  });\n}\n\n/**\n * Return true if an annotation with the given permissions is private.\n *\n * @param {Permissions} perms\n * @return {boolean}\n */\nexport function isPrivate(perms) {\n  return !isShared(perms);\n}\n\n/**\n * Return true if a user can perform the given `action` on an annotation.\n *\n * @param {Permissions} perms\n * @param {'update'|'delete'} action\n * @param {string|null} userid\n * @return {boolean}\n */\nexport function permits(perms, action, userid) {\n  return perms[action].indexOf(userid || '') !== -1;\n}\n",
    "import { generateHexString } from './random';\n\n/** Generate a random ID to associate RPC requests and responses. */\nfunction generateId() {\n  return generateHexString(10);\n}\n\n/**\n * Return a Promise that rejects with an error after `delay` ms.\n */\nfunction createTimeout(delay, message) {\n  return new Promise((_, reject) => {\n    setTimeout(() => reject(new Error(message)), delay);\n  });\n}\n\n/**\n * Make a JSON-RPC call to a server in another frame using `postMessage`.\n *\n * @param {Window} frame - Frame to send call to\n * @param {string} origin - Origin filter for `window.postMessage` call\n * @param {string} method - Name of the JSON-RPC method\n * @param {any[]} params - Parameters of the JSON-RPC method\n * @param {number} [timeout] - Maximum time to wait in ms\n * @param {Window} [window_] - Test seam.\n * @param {string} [id] - Test seam.\n * @return {Promise<any>} - A Promise for the response to the call\n */\nexport function call(\n  frame,\n  origin,\n  method,\n  params = [],\n  timeout = 2000,\n  window_ = window,\n  id = generateId()\n) {\n  // Send RPC request.\n  const request = {\n    jsonrpc: '2.0',\n    method,\n    params,\n    id,\n  };\n\n  try {\n    frame.postMessage(request, origin);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  // Await response or timeout.\n  let listener;\n  const response = new Promise((resolve, reject) => {\n    listener = event => {\n      if (event.origin !== origin) {\n        // Not from the frame that we sent the request to.\n        return;\n      }\n\n      if (\n        !(event.data instanceof Object) ||\n        event.data.jsonrpc !== '2.0' ||\n        event.data.id !== id\n      ) {\n        // Not a valid JSON-RPC response.\n        return;\n      }\n\n      const { error, result } = event.data;\n      if (error !== undefined) {\n        reject(error);\n      } else if (result !== undefined) {\n        resolve(result);\n      } else {\n        reject(new Error('RPC reply had no result or error'));\n      }\n    };\n    window_.addEventListener('message', listener);\n  });\n\n  const responseOrTimeout = [response];\n  if (timeout) {\n    responseOrTimeout.push(\n      createTimeout(timeout, `Request to ${origin} timed out`)\n    );\n  }\n\n  // Cleanup and return.\n  // FIXME: If we added a `Promise.finally` polyfill we could simplify this.\n  return Promise.race(responseOrTimeout)\n    .then(result => {\n      window_.removeEventListener('message', listener);\n      return result;\n    })\n    .catch(err => {\n      window_.removeEventListener('message', listener);\n      throw err;\n    });\n}\n",
    "function byteToHex(val) {\n  const str = val.toString(16);\n  return str.length === 1 ? '0' + str : str;\n}\n\n/**\n * Generate a random hex string of `len` chars.\n *\n * @param {number} len - An even-numbered length string to generate.\n * @return {string}\n */\nexport function generateHexString(len) {\n  // @ts-ignore - TS doesn't know about `msCrypto`.\n  const crypto = window.crypto || window.msCrypto; /* IE 11 */\n  const bytes = new Uint8Array(len / 2);\n  crypto.getRandomValues(bytes);\n  return Array.from(bytes).map(byteToHex).join('');\n}\n",
    "import retry from 'retry';\n\n/**\n * Retry a Promise-returning operation until it succeeds or\n * fails after a set number of attempts.\n *\n * @param {Function} opFn - The operation to retry\n * @param {Object} [options] - The options object to pass to retry.operation()\n *\n * @return A promise for the first successful result of the operation, if\n *         it succeeds within the allowed number of attempts.\n */\nexport function retryPromiseOperation(opFn, options) {\n  return new Promise(function (resolve, reject) {\n    const operation = retry.operation(options);\n    operation.attempt(function () {\n      opFn()\n        .then(function (result) {\n          operation.retry();\n          resolve(result);\n        })\n        .catch(function (err) {\n          if (!operation.retry(err)) {\n            reject(err);\n          }\n        });\n    });\n  });\n}\n",
    "/**\n * Parse annotation filter queries into structured representations.\n *\n * Provides methods to parse Lucene-style queries (\"foo tag: bar\")\n * into structured representations which are then used by other services to\n * filter annotations displayed to the user or fetched from the API.\n */\n\n/**\n * Splits a search term into filter and data.\n *\n * ie. 'user:johndoe' -> ['user', 'johndoe']\n *     'example:text' -> [null, 'example:text']\n *\n * @param {string} term\n * @return {[null|string, string]}\n */\nfunction splitTerm(term) {\n  const filter = term.slice(0, term.indexOf(':'));\n  if (!filter) {\n    // The whole term is data\n    return [null, term];\n  }\n\n  if (\n    ['group', 'quote', 'since', 'tag', 'text', 'uri', 'user'].includes(filter)\n  ) {\n    const data = term.slice(filter.length + 1);\n    return [filter, data];\n  } else {\n    // The filter is not a power search filter, so the whole term is data\n    return [null, term];\n  }\n}\n\n/**\n * Tokenize a search query.\n *\n * Splits `searchText` into tokens, separated by spaces.\n * Quoted phrases in `searchText` are returned as a single token.\n *\n * @param {string} searchText\n * @return {string[]}\n */\nfunction tokenize(searchText) {\n  if (!searchText) {\n    return [];\n  }\n\n  // Small helper function for removing quote characters\n  // from the beginning- and end of a string, if the\n  // quote characters are the same.\n  // I.e.\n  //   'foo' -> foo\n  //   \"bar\" -> bar\n  //   'foo\" -> 'foo\"\n  //   bar\"  -> bar\"\n  const _removeQuoteCharacter = function (text) {\n    const start = text.slice(0, 1);\n    const end = text.slice(-1);\n    if ((start === '\"' || start === \"'\") && start === end) {\n      text = text.slice(1, text.length - 1);\n    }\n    return text;\n  };\n\n  let tokens = searchText.match(/(?:[^\\s\"']+|\"[^\"]*\"|'[^']*')+/g) || [];\n\n  // Cut the opening and closing quote characters\n  tokens = tokens.map(_removeQuoteCharacter);\n\n  // Remove quotes for power search.\n  // I.e. 'tag:\"foo bar\"' -> 'tag:foo bar'\n  for (let index = 0; index < tokens.length; index++) {\n    const token = tokens[index];\n    const [filter, data] = splitTerm(token);\n    if (filter) {\n      tokens[index] = filter + ':' + _removeQuoteCharacter(data);\n    }\n  }\n\n  return tokens;\n}\n\n/**\n * Parse a search query into a map of search field to term.\n *\n * @param {string} searchText\n * @return {Object.<string,string[]>}\n */\nexport function toObject(searchText) {\n  /** @type {Object.<string,string[]>} */\n  const obj = {};\n  const backendFilter = f => (f === 'tag' ? 'tags' : f);\n\n  const addToObj = (key, data) => {\n    if (obj[key]) {\n      return obj[key].push(data);\n    } else {\n      return (obj[key] = [data]);\n    }\n  };\n\n  if (searchText) {\n    const terms = tokenize(searchText);\n    for (const term of terms) {\n      let [filter, data] = splitTerm(term);\n      if (!filter) {\n        filter = 'any';\n        data = term;\n      }\n      addToObj(backendFilter(filter), data);\n    }\n  }\n  return obj;\n}\n\n/**\n * @typedef Facet\n * @property {'and'|'or'} operator\n * @property {string[]|number[]} terms\n */\n\n/**\n * @typedef FocusFilter\n * @prop {string} [user]\n */\n\n/**\n * Parse a search query into a map of filters.\n *\n * Returns an object mapping facet names to Facet.\n *\n * Terms that are not associated with a particular facet are stored in the \"any\"\n * facet.\n *\n * @param {string} searchText - Filter query to parse\n * @param {FocusFilter} focusFilters - Additional filter terms to mix in\n * @return {Object.<string,Facet>}\n */\nexport function generateFacetedFilter(searchText, focusFilters = {}) {\n  let terms;\n  const any = [];\n  const quote = [];\n  const since = [];\n  const tag = [];\n  const text = [];\n  const uri = [];\n  const user = focusFilters.user ? [focusFilters.user] : [];\n  if (searchText) {\n    terms = tokenize(searchText);\n    for (const term of terms) {\n      const filter = term.slice(0, term.indexOf(':'));\n      const fieldValue = term.slice(filter.length + 1);\n\n      switch (filter) {\n        case 'quote':\n          quote.push(fieldValue);\n          break;\n        case 'since':\n          {\n            const time = term.slice(6).toLowerCase();\n            const secondsPerDay = 24 * 60 * 60;\n            const secondsPerUnit = {\n              sec: 1,\n              min: 60,\n              hour: 60 * 60,\n              day: secondsPerDay,\n              week: 7 * secondsPerDay,\n              month: 30 * secondsPerDay,\n              year: 365 * secondsPerDay,\n            };\n            const match = time.match(\n              /^(\\d+)(sec|min|hour|day|week|month|year)?$/\n            );\n            if (match) {\n              const value = parseFloat(match[1]);\n              const unit = match[2] || 'sec';\n              since.push(value * secondsPerUnit[unit]);\n            }\n          }\n          break;\n        case 'tag':\n          tag.push(fieldValue);\n          break;\n        case 'text':\n          text.push(fieldValue);\n          break;\n        case 'uri':\n          uri.push(fieldValue);\n          break;\n        case 'user':\n          user.push(fieldValue);\n          break;\n        default:\n          any.push(term);\n      }\n    }\n  }\n\n  return {\n    any: {\n      terms: any,\n      operator: 'and',\n    },\n    quote: {\n      terms: quote,\n      operator: 'and',\n    },\n    since: {\n      terms: since,\n      operator: 'and',\n    },\n    tag: {\n      terms: tag,\n      operator: 'and',\n    },\n    text: {\n      terms: text,\n      operator: 'and',\n    },\n    uri: {\n      terms: uri,\n      operator: 'or',\n    },\n    user: {\n      terms: user,\n      operator: 'or',\n    },\n  };\n}\n",
    "import * as Sentry from '@sentry/browser';\n\nimport warnOnce from '../../shared/warn-once';\n\n/**\n * @typedef SentryConfig\n * @prop {string} dsn\n * @prop {string} environment\n */\n\nlet eventsSent = 0;\nconst maxEventsToSendPerSession = 5;\n\n/**\n * Return the origin which the current script comes from.\n *\n * @return {string|null}\n */\nfunction currentScriptOrigin() {\n  try {\n    // nb. IE 11 does not support `document.currentScript` and this property\n    // is only available while a `<script>` tag is initially being executed.\n    const script = /** @type {HTMLScriptElement} */ (document.currentScript);\n    const scriptUrl = new URL(script.src);\n    return scriptUrl.origin;\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Initialize the Sentry integration.\n *\n * This will activate Sentry and enable capturing of uncaught errors and\n * unhandled promise rejections.\n *\n * @param {SentryConfig} config\n */\nexport function init(config) {\n  // Only send events for errors which can be attributed to our code. This\n  // reduces noise in Sentry caused by errors triggered by eg. script tags added\n  // by browser extensions. The downside is that this may cause us to miss errors\n  // which are caused by our code but, for any reason, cannot be attributed to\n  // it. This logic assumes that all of our script bundles are served from\n  // the same origin as the bundle which includes this module.\n  //\n  // If we can't determine the current script's origin, just disable the\n  // whitelist and report all errors.\n  const scriptOrigin = currentScriptOrigin();\n  const whitelistUrls = scriptOrigin ? [scriptOrigin] : undefined;\n\n  Sentry.init({\n    dsn: config.dsn,\n    environment: config.environment,\n    // Do not log Fetch failures to avoid inundating with unhandled fetch exceptions\n    ignoreErrors: ['Fetch operation failed'],\n    release: '__VERSION__', // replaced by versionify\n    whitelistUrls,\n\n    // See https://docs.sentry.io/error-reporting/configuration/filtering/?platform=javascript#before-send\n    beforeSend: (event, hint) => {\n      if (eventsSent >= maxEventsToSendPerSession) {\n        // Cap the number of events that any client instance will send, to\n        // reduce the impact on our Sentry event quotas.\n        //\n        // Sentry implements its own server-side rate limiting in addition.\n        // See https://docs.sentry.io/accounts/quotas/.\n        warnOnce(\n          'Client-side Sentry quota reached. No further Sentry events will be sent'\n        );\n        return null;\n      }\n      ++eventsSent;\n\n      // Add additional debugging information for non-Error exception types\n      // which Sentry can't serialize to a useful format automatically.\n      //\n      // See https://github.com/getsentry/sentry-javascript/issues/2210\n      try {\n        const originalErr = hint && hint.originalException;\n        if (originalErr instanceof Event) {\n          Object.assign(event.extra, {\n            type: originalErr.type,\n            // @ts-ignore - `detail` is a property of certain event types.\n            detail: originalErr.detail,\n            isTrusted: originalErr.isTrusted,\n          });\n        }\n      } catch (e) {\n        // If something went wrong serializing the data, just ignore it.\n      }\n\n      return event;\n    },\n  });\n\n  // In the sidebar application, it is often useful to know the URL which the\n  // client was loaded into. This information is usually available in an iframe\n  // via `document.referrer`. More information about the document is available\n  // later when frames where the \"annotator\" code has loaded have connected to\n  // the sidebar via `postMessage` RPC messages.\n  Sentry.setExtra('document_url', document.referrer);\n}\n\n/**\n * Record the user ID of the logged-in user.\n *\n * See https://docs.sentry.io/platforms/javascript/#capturing-the-user\n *\n * @param {import('@sentry/browser').User|null} user\n */\nexport function setUserInfo(user) {\n  Sentry.setUser(user);\n}\n\n/**\n * Reset metrics used for client-side event filtering.\n */\nexport function reset() {\n  eventsSent = 0;\n}\n",
    "/* global process */\n\n/**\n * This module provides dependency injection of services into React\n * components via React's \"context\" API [1].\n *\n * [1] See https://reactjs.org/docs/context.html#api and\n *     https://reactjs.org/docs/hooks-reference.html#usecontext\n */\n\n/**\n * @typedef {import(\"redux\").Store} Store\n */\n\nimport { createContext, createElement } from 'preact';\nimport { useContext } from 'preact/hooks';\n\n/**\n * @typedef ServiceProvider\n * @prop {(serviceName: string) => any} get\n */\n\n/** @type {ServiceProvider} */\nconst fallbackInjector = {\n  get(service) {\n    throw new Error(\n      `Missing ServiceContext provider to provide \"${service}\" prop`\n    );\n  },\n};\n\n/**\n * Context type for a service dependency injector.\n *\n * The value should be an object with a `get(serviceName)` method which returns\n * the instance of the named value or service.\n *\n * Consumers will either use this directly via `useContext` or use the\n * `withServices` wrapper.\n */\nexport const ServiceContext = createContext(fallbackInjector);\n\n/**\n * Wrap a React component to inject any services it depends upon as props.\n *\n * Components declare their service dependencies in an `injectedProps` static\n * property. These services also need to be declared in `propTypes`.\n *\n * Any props which are passed directly will override injected props.\n *\n * @example\n *   function MyComponent({ settings }) {\n *     return ...\n *   }\n *\n *   // Declare services that are injected from context rather than passed by\n *   // the parent.\n *   MyComponent.injectedProps = ['settings']\n *\n *   // Wrap `MyComponent` to inject any services it needs.\n *   export default withServices(MyComponent);\n */\nexport function withServices(Component) {\n  if (!Component.injectedProps) {\n    // This component doesn't depend on any services, so there is no need\n    // to wrap it.\n    return Component;\n  }\n\n  function Wrapper(props) {\n    // Get the current dependency injector instance that is provided by a\n    // `ServiceContext.Provider` somewhere higher up the component tree.\n    const injector = useContext(ServiceContext);\n\n    // Inject services, unless they have been overridden by props passed from\n    // the parent component.\n    const services = {};\n    for (let service of Component.injectedProps) {\n      // Debugging check to make sure the store is used correctly.\n      if (process.env.NODE_ENV !== 'production') {\n        if (service === 'store') {\n          throw new Error(\n            'Do not use `withServices` to inject the `store` service. Use the `useStore` hook instead'\n          );\n        }\n      }\n\n      if (!(service in props)) {\n        services[service] = injector.get(service);\n      }\n    }\n    return <Component {...services} {...props} />;\n  }\n\n  // Set the name of the wrapper for use in debug tools and queries in Enzyme\n  // tests.\n  const wrappedName = Component.displayName || Component.name;\n  Wrapper.displayName = `withServices(${wrappedName})`;\n\n  // Forward the prop types, except for those expected to be injected via\n  // the `ServiceContext`.\n  Wrapper.propTypes = { ...Component.propTypes };\n  Component.injectedProps.forEach(prop => {\n    delete Wrapper.propTypes[prop];\n  });\n  return Wrapper;\n}\n\n/**\n * Hook for looking up a service within a component or a custom hook.\n *\n * This is an alternative to `withServices` that is mainly useful in the\n * context of custom hooks.\n *\n * @param {string} service - Name of the service to look up\n * @return {Object}\n */\nexport function useService(service) {\n  const injector = useContext(ServiceContext);\n  return injector.get(service);\n}\n",
    "import serviceConfig from '../service-config';\n\n/**\n * @typedef {import('../../types/config').HostConfig} HostConfig\n * @typedef {import('../../types/api').Profile} Profile\n */\n\n/**\n * Returns true if the sidebar tutorial has to be shown to a user for a given session.\n * @deprecated To be removed once preact help/tutorial panel is in place\n */\nexport function shouldShowSidebarTutorial(sessionState) {\n  if (sessionState.preferences.show_sidebar_tutorial) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * The following things must all be true for the tutorial component to auto-display\n * on app launch:\n * - The app must be operating within the \"sidebar\" (i.e. not single-annotation\n *   or stream mode); AND\n * - No configuration is present in `settings.services` indicating\n *   that the host wants to handle its own help requests (i.e. no event handler\n *   is provided to intercept the default help panel), AND\n * - A user profile is loaded in the current state that indicates a `true` value\n *   for the `show_sidebar_tutorial` preference (i.e. the tutorial has not been\n *   dismissed by this user yet). This implies the presence of a profile, which\n *   in turn implies that there is an authenticated user.\n *\n * @param {boolean} isSidebar - is the app currently displayed in a sidebar?\n * @param {Profile} profile - User profile returned from the API\n * @param {HostConfig} settings\n * @return {boolean} - Tutorial panel should be displayed automatically\n */\nexport function shouldAutoDisplayTutorial(isSidebar, profile, settings) {\n  const shouldShowBasedOnProfile =\n    typeof profile.preferences === 'object' &&\n    !!profile.preferences.show_sidebar_tutorial;\n\n  const service = serviceConfig(settings) || { onHelpRequestProvided: false };\n  return (\n    isSidebar && !service.onHelpRequestProvided && shouldShowBasedOnProfile\n  );\n}\n",
    "/** @typedef {import('redux').Store} Store */\n\n/**\n * Return a value from app state when it meets certain criteria.\n *\n * `await` returns a Promise which resolves when a selector function,\n * which reads values from a Redux store, returns non-null.\n *\n * @template T\n * @param {Object} store - Redux store\n * @param {(s: Store) => T|null} selector - Function which returns a value from the\n *   store if the criteria is met or `null` otherwise.\n * @return {Promise<T>}\n */\nexport function awaitStateChange(store, selector) {\n  const result = selector(store);\n  if (result !== null) {\n    return Promise.resolve(result);\n  }\n  return new Promise(resolve => {\n    const unsubscribe = store.subscribe(() => {\n      const result = selector(store);\n      if (result !== null) {\n        unsubscribe();\n        resolve(result);\n      }\n    });\n  });\n}\n",
    "// Functions that determine which tab an annotation should be displayed in.\n\nimport * as metadata from './annotation-metadata';\n\n/**\n * @typedef {import('../../types/api').Annotation} Annotation\n *\n * @typedef {'annotation'|'note'|'orphan'} Tab\n */\n\n/**\n * Return the tab in which an annotation should be displayed.\n *\n * @param {Annotation} ann\n * @return {Tab}\n */\nexport function tabForAnnotation(ann) {\n  if (metadata.isOrphan(ann)) {\n    return 'orphan';\n  } else if (metadata.isPageNote(ann)) {\n    return 'note';\n  } else {\n    return 'annotation';\n  }\n}\n\n/**\n * Return true if an annotation should be displayed in a given tab.\n *\n * @param {Annotation} ann\n * @param {Tab} tab\n */\nexport function shouldShowInTab(ann, tab) {\n  if (metadata.isWaitingToAnchor(ann)) {\n    // Until this annotation anchors or fails to anchor, we do not know which\n    // tab it should be displayed in.\n    return false;\n  }\n  return tabForAnnotation(ann) === tab;\n}\n",
    "const supportedThemeProperties = {\n  accentColor: 'color',\n  appBackgroundColor: 'backgroundColor',\n  ctaBackgroundColor: 'backgroundColor',\n  ctaTextColor: 'color',\n  selectionFontFamily: 'fontFamily',\n  annotationFontFamily: 'fontFamily',\n};\n\n/**\n * Name of a theme element which can be configured.\n *\n * @typedef {keyof supportedThemeProperties} ThemeProperty\n */\n\n/**\n * Subset of the config from the host page which includes theme configuration.\n *\n * @typedef Settings\n * @prop {Object.<ThemeProperty,string>} [branding]\n */\n\n/**\n * Return a React `style` object suitable for use as the value of the `style`\n * attr in a React element, with styling rules for the requested set of\n * `themeProperties`.\n *\n * `supportedThemeProperties` defines a whitelist of properties that may be\n * set by a partner's configuration for theme customization. For a given theme\n * property's styling to be present in the returned style object, all of the\n * following must be true:\n *\n * - The theme property is present in the `supportedThemeProperties` whitelist\n * - `settings.branding` (derived from client configuration) has an entry\n *    for this theme property\n *\n * See https://reactjs.org/docs/dom-elements.html#style\n *\n * @param {ThemeProperty[]} themeProperties -\n *   Which of the supported theme properties should have applied rules in the `style`\n *   object\n * @param {Settings} settings\n * @return {Object.<string,string>} - Object that can be passed as the `style` prop\n *\n * @example\n * let themeProperties = ['accentColor', 'ctaTextColor', 'foo'];\n * let settings = { branding: {\n *     accentColor: '#ffc',\n *     selectionFontFamily: 'Times New Roman'\n *   }\n * };\n * // Only two of the `themeProperties` are whitelisted and\n * // only one of those has a value in the `settings` object, so:\n * applyTheme(themeProperties, settings); // -> { color: '#ffc '}\n */\nexport function applyTheme(themeProperties, settings) {\n  /** @type {Object.<string,string>} */\n  const style = {};\n  if (!settings.branding) {\n    return style;\n  }\n\n  themeProperties.forEach(themeProp => {\n    const propertyName = supportedThemeProperties[themeProp];\n    const propertyValue = settings.branding[themeProp];\n    if (propertyName && propertyValue) {\n      style[propertyName] = propertyValue;\n    }\n  });\n\n  return style;\n}\n",
    "import buildThread from './build-thread';\nimport memoize from './memoize';\nimport * as metadata from './annotation-metadata';\nimport { generateFacetedFilter } from './search-filter';\nimport filterAnnotations from './view-filter';\nimport { shouldShowInTab } from './tabs';\n\n/** @typedef {import('./build-thread').Thread} Thread */\n/** @typedef {import('./build-thread').Options} BuildThreadOptions */\n/** @typedef {import('../store/modules/selection').ThreadState} ThreadState */\n\n// Sort functions keyed on sort option\nconst sortFns = {\n  Newest: function (a, b) {\n    return a.updated > b.updated;\n  },\n  Oldest: function (a, b) {\n    return a.updated < b.updated;\n  },\n  Location: function (a, b) {\n    return metadata.location(a) < metadata.location(b);\n  },\n};\n\n/**\n * Cobble together the right set of options and filters based on current\n * `threadState` to build the root thread.\n *\n * @param {ThreadState} threadState\n * @return {Thread}\n */\nfunction buildRootThread(threadState) {\n  const selection = threadState.selection;\n\n  /** @type {BuildThreadOptions} */\n  const options = {\n    expanded: selection.expanded,\n    forcedVisible: selection.forcedVisible,\n    selected: selection.selected,\n    sortCompareFn: sortFns[selection.sortKey],\n  };\n\n  // Is there a filter query present, or an applied user (focus) filter?\n  // If so, we'll need to filter the annotations\n  const annotationsFiltered =\n    !!selection.filterQuery || Object.keys(selection.filters).length > 0;\n\n  if (annotationsFiltered) {\n    const filters = generateFacetedFilter(\n      selection.filterQuery || '',\n      selection.filters\n    );\n    options.filterFn = ann => filterAnnotations([ann], filters).length > 0;\n  }\n\n  // If annotations aren't filtered, should we filter out tab-irrelevant\n  // annotations (e.g. we should only show notes in the `Notes` tab)\n  // in the sidebar?\n  const threadFiltered =\n    !annotationsFiltered && threadState.route === 'sidebar';\n\n  if (threadFiltered) {\n    options.threadFilterFn = thread => {\n      if (!thread.annotation) {\n        return false;\n      }\n      return shouldShowInTab(thread.annotation, selection.selectedTab);\n    };\n  }\n  return buildThread(threadState.annotations, options);\n}\n\nconst threadAnnotations = memoize(buildRootThread);\n\nexport default threadAnnotations;\n",
    "/** @typedef {import('../util/build-thread').Thread} Thread */\n\n/**\n * Count the number of annotations/replies in the `thread` whose `visible`\n * property matches `visibility`.\n *\n * @param {Thread} thread\n * @param {boolean} visibility — `true`: count visible annotations\n *                               `false`: count hidden annotations\n * @return {number}\n */\nfunction countByVisibility(thread, visibility) {\n  const matchesVisibility =\n    !!thread.annotation && thread.visible === visibility;\n  return thread.children.reduce(\n    (count, reply) => count + countByVisibility(reply, visibility),\n    matchesVisibility ? 1 : 0\n  );\n}\n\n/**\n * Count the hidden annotations/replies in the `thread`\n */\nexport function countHidden(thread) {\n  return countByVisibility(thread, false);\n}\n\n/**\n * Count the visible annotations/replies in the `thread`\n */\nexport function countVisible(thread) {\n  return countByVisibility(thread, true);\n}\n",
    "/**\n * Utility functions for generating formatted \"fuzzy\" date strings and\n * computing decaying intervals for updating those dates in a UI.\n */\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\n\n// Cached DateTimeFormat instances,\n// because instantiating a DateTimeFormat is expensive.\nlet formatters = {};\n\n/**\n * Clears the cache of formatters.\n */\nexport function clearFormatters() {\n  formatters = {};\n}\n\n/**\n * Calculate time delta in milliseconds between two `Date` objects\n *\n * @param {Date} date\n * @param {Date} now\n */\nfunction delta(date, now) {\n  // @ts-ignore\n  return now - date;\n}\n\n/**\n * Efficiently return date string formatted with `options`.\n *\n * This is a wrapper for `Intl.DateTimeFormat.format()` that caches\n * `DateTimeFormat` instances because they're expensive to create.\n * Calling `Date.toLocaleDateString()` lots of times is also expensive in some\n * browsers as it appears to create a new formatter for each call.\n *\n * @param {Date} date\n * @param {Object} options - Options for `Intl.DateTimeFormat.format()`\n * @param {Object} Intl - JS internationalization API implementation; this\n *                      param is present for dependency injection during test.\n * @returns {string}\n */\nfunction formatIntl(date, options, Intl = window.Intl) {\n  if (Intl && Intl.DateTimeFormat) {\n    const key = JSON.stringify(options);\n    let formatter = formatters[key];\n\n    if (!formatter) {\n      formatter = formatters[key] = new Intl.DateTimeFormat(undefined, options);\n    }\n\n    return formatter.format(date);\n  } else {\n    // IE < 11, Safari <= 9.0.\n    return date.toDateString();\n  }\n}\n\n/**\n * Date templating functions.\n *\n * @param {Date} date\n * @param {Date} now\n * @return {String} formatted date\n */\nfunction nSec(date, now) {\n  const n = Math.floor(delta(date, now) / SECOND);\n  return `${n} secs ago`;\n}\n\nfunction nMin(date, now) {\n  const n = Math.floor(delta(date, now) / MINUTE);\n  const plural = n > 1 ? 's' : '';\n  return `${n} min${plural} ago`;\n}\n\nfunction nHr(date, now) {\n  const n = Math.floor(delta(date, now) / HOUR);\n  const plural = n > 1 ? 's' : '';\n  return `${n} hr${plural} ago`;\n}\n\nfunction dayAndMonth(date, now, Intl) {\n  return formatIntl(date, { month: 'short', day: 'numeric' }, Intl);\n}\n\nfunction dayAndMonthAndYear(date, now, Intl) {\n  return formatIntl(\n    date,\n    { day: 'numeric', month: 'short', year: 'numeric' },\n    Intl\n  );\n}\n\n/**\n * @typedef Breakpoint\n * @prop {(date: Date, now: Date) => boolean} test\n * @prop {(date: Date, now: Date, Intl: typeof window.Intl) => string} formatFn\n * @prop {number|null} nextUpdate\n */\n\n/** @type {Breakpoint[]} */\nconst BREAKPOINTS = [\n  {\n    // Less than 30 seconds\n    test: (date, now) => delta(date, now) < 30 * SECOND,\n    formatFn: () => 'Just now',\n    nextUpdate: 1 * SECOND,\n  },\n  {\n    // Less than 1 minute\n    test: (date, now) => delta(date, now) < 1 * MINUTE,\n    formatFn: nSec,\n    nextUpdate: 1 * SECOND,\n  },\n  {\n    // less than one hour\n    test: (date, now) => delta(date, now) < 1 * HOUR,\n    formatFn: nMin,\n    nextUpdate: 1 * MINUTE,\n  },\n  {\n    // less than one day\n    test: (date, now) => delta(date, now) < 24 * HOUR,\n    formatFn: nHr,\n    nextUpdate: 1 * HOUR,\n  },\n  {\n    // this year\n    test: (date, now) => date.getFullYear() === now.getFullYear(),\n    formatFn: dayAndMonth,\n    nextUpdate: null,\n  },\n];\n\n/** @type {Breakpoint} */\nconst DEFAULT_BREAKPOINT = {\n  test: /* istanbul ignore next */ () => true,\n  formatFn: dayAndMonthAndYear,\n  nextUpdate: null,\n};\n\n/**\n * Returns a dict that describes how to format the date based on the delta\n * between date and now.\n *\n * @param {Date} date - The date to consider as the timestamp to format.\n * @param {Date} now - The date to consider as the current time.\n * @return {Breakpoint} An object that describes how to format the date.\n */\nfunction getBreakpoint(date, now) {\n  for (let breakpoint of BREAKPOINTS) {\n    if (breakpoint.test(date, now)) {\n      return breakpoint;\n    }\n  }\n  return DEFAULT_BREAKPOINT;\n}\n\n/**\n * Return the number of milliseconds until the next update for a given date\n * should be handled, based on the delta between `date` and `now`.\n *\n * @param {Date|null} date\n * @param {Date} now\n * @return {Number|null} - ms until next update or `null` if no update\n *                         should occur\n */\nexport function nextFuzzyUpdate(date, now) {\n  if (!date) {\n    return null;\n  }\n\n  let nextUpdate = getBreakpoint(date, now).nextUpdate;\n\n  if (nextUpdate === null) {\n    return null;\n  }\n\n  // We don't want to refresh anything more often than 5 seconds\n  nextUpdate = Math.max(nextUpdate, 5 * SECOND);\n\n  // setTimeout limit is MAX_INT32=(2^31-1) (in ms),\n  // which is about 24.8 days. So we don't set up any timeouts\n  // longer than 24 days, that is, 2073600 seconds.\n  nextUpdate = Math.min(nextUpdate, 2073600 * SECOND);\n\n  return nextUpdate;\n}\n\n/**\n * Starts an interval whose frequency decays depending on the relative\n * age of 'date'.\n *\n * This can be used to refresh parts of a UI whose\n * update frequency depends on the age of a timestamp.\n *\n * @param {string} date - An ISO 8601 date string timestamp to format.\n * @param {UpdateCallback} callback - A callback function to call when the timestamp changes.\n * @return {()=>void} A function that cancels the automatic refresh.\n */\nexport function decayingInterval(date, callback) {\n  let timer;\n  const timeStamp = date ? new Date(date) : null;\n\n  const update = () => {\n    const fuzzyUpdate = nextFuzzyUpdate(timeStamp, new Date());\n    if (fuzzyUpdate === null) {\n      return;\n    }\n    const nextUpdate = fuzzyUpdate + 500;\n    timer = setTimeout(() => {\n      callback(date);\n      update();\n    }, nextUpdate);\n  };\n\n  update();\n\n  return () => clearTimeout(timer);\n}\n\n/**\n * This callback is a param for the `decayingInterval` function.\n * @callback UpdateCallback\n * @param {string} date - The date associated with the current interval/timeout\n */\n\n/**\n * Formats a date as a string relative to the current date.\n *\n * @param {Date|null} date - The date to consider as the timestamp to format.\n * @param {Date} now - The date to consider as the current time.\n * @param {Object} [Intl] - JS internationalization API implementation; this\n *                      param is present for dependency injection during test.\n * @return {string} A 'fuzzy' string describing the relative age of the date.\n */\nexport function toFuzzyString(date, now, Intl) {\n  if (!date) {\n    return '';\n  }\n  return getBreakpoint(date, now).formatFn(date, now, Intl);\n}\n",
    "/**\n * Unicode combining characters\n * from http://xregexp.com/addons/unicode/unicode-categories.js line:30\n */\n\n// Lint warning suppressed to faciliate ESLint upgrade. The warning may still\n// be valid.\n//\n// eslint-disable-next-line no-misleading-character-class\nconst COMBINING_MARKS = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u08FE\\u0900-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C01-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C82\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D02\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1DC0-\\u1DE6\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26]/g;\n\n/**\n * @param {string} str\n * @return {string}\n */\nexport function fold(str) {\n  return str.replace(COMBINING_MARKS, '');\n}\n\n/**\n * @param {string} str\n * @return {string}\n */\nexport function normalize(str) {\n  return str.normalize('NFKD');\n}\n",
    "/**\n * Replace parameters in a URL template with values from a `params` object.\n *\n * Returns an object containing the expanded URL and a dictionary of unused\n * parameters.\n *\n *   replaceURLParams('/things/:id', {id: 'foo', q: 'bar'}) =>\n *     {url: '/things/foo', params: {q: 'bar'}}\n *\n * @param {string} url\n * @param {Object} params\n * @return {{ url: string, params: Object }}\n */\nexport function replaceURLParams(url, params) {\n  const unusedParams = {};\n  for (const param in params) {\n    if (params.hasOwnProperty(param)) {\n      const value = params[param];\n      const urlParam = ':' + param;\n      if (url.indexOf(urlParam) !== -1) {\n        url = url.replace(urlParam, encodeURIComponent(value));\n      } else {\n        unusedParams[param] = value;\n      }\n    }\n  }\n  return { url: url, params: unusedParams };\n}\n\n/**\n * Resolve a relative URL against a base URL to get an absolute URL.\n *\n * @param {string} relativeURL\n * @param {string} baseURL\n */\nexport function resolve(relativeURL, baseURL) {\n  return new URL(relativeURL, baseURL).href;\n}\n",
    "/**\n * @typedef {import('../components/user-menu').AuthState} AuthState\n */\n\n/**\n * An object representing document metadata.\n *\n * @typedef {Object} DocMetadata\n * @prop {string=} documentFingerprint - Optional PDF fingerprint for current document\n */\n\n/**\n * An object representing document info.\n *\n * @typedef {Object} DocumentInfo\n * @prop {string=} [uri] - Current document URL\n * @prop {DocMetadata} [metadata] - Document metadata\n */\n\nexport default class VersionData {\n  /**\n   * @param {AuthState} userInfo\n   * @param {DocumentInfo} documentInfo\n   * @param {Window} window_ - test seam\n   */\n  constructor(userInfo, documentInfo, window_ = window) {\n    const noValueString = 'N/A';\n    const docMeta = documentInfo.metadata;\n\n    let accountString = noValueString;\n    if (userInfo.userid) {\n      accountString = userInfo.userid;\n      if (userInfo.displayName) {\n        accountString = `${userInfo.displayName} (${accountString})`;\n      }\n    }\n\n    this.timestamp = new Date().toString();\n    this.url = documentInfo.uri || noValueString;\n    this.fingerprint =\n      docMeta && docMeta.documentFingerprint\n        ? docMeta.documentFingerprint\n        : noValueString;\n    this.account = accountString;\n    this.userAgent = window_.navigator.userAgent;\n    this.version = '__VERSION__';\n  }\n\n  /**\n   * Return a single formatted string representing version data, suitable for\n   * copying to the clipboard.\n   *\n   * @return {string} - Single, multiline string representing current version data\n   */\n  asFormattedString() {\n    let versionString = '';\n    for (let prop in this) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        versionString += `${prop}: ${this[prop]}\\r\\n`;\n      }\n    }\n    return versionString;\n  }\n\n  /**\n   * Return a single, encoded URL string of version data suitable for use in\n   * a querystring (as the value of a single parameter)\n   *\n   * @return {string} - URI-encoded string\n   */\n  asEncodedURLString() {\n    return encodeURIComponent(this.asFormattedString());\n  }\n}\n",
    "/**\n * Tools for applying search filters against annotations.\n *\n * When the user enters a query in the search box, the query is parsed using\n * `generateFacetedFilter` and the currently loaded annotations are then matched\n * against the parsed query by the `filter` method of this class. Annotations\n * which do not match the filter are then hidden.\n */\n\n/**\n * @typedef {import('../../types/api').Annotation} Annotation\n */\n\nimport { quote } from './annotation-metadata';\nimport * as unicodeUtils from './unicode';\n\n/**\n * @typedef Filter\n * @prop {(ann: Annotation) => boolean} matches\n */\n\n/**\n * @typedef Checker\n * @prop {(ann: Annotation) => boolean} autofalse\n * @prop {(ann: Annotation) => any|any[]} value\n * @prop {(term: any, value: any) => boolean} match\n */\n\nfunction displayName(ann) {\n  if (!ann.user_info) {\n    return '';\n  }\n  return ann.user_info.display_name || '';\n}\n\n/**\n * Normalize a field value or query term for comparison.\n */\nfunction normalize(val) {\n  if (typeof val !== 'string') {\n    return val;\n  }\n  return unicodeUtils.fold(unicodeUtils.normalize(val)).toLowerCase();\n}\n\n/**\n * Filter that matches annotations against a single field & term.\n *\n * eg. \"quote:foo\" or \"text:bar\"\n *\n * @implements {Filter}\n */\nclass TermFilter {\n  /**\n   * @param {string} field - Name of field to match\n   * @param {string} term - Query term\n   * @param {Checker} checker - Functions for extracting term values from\n   *   an annotation and checking whether they match a query term.\n   */\n  constructor(field, term, checker) {\n    this.field = field;\n    this.term = term;\n    this.checker = checker;\n  }\n\n  matches(ann) {\n    const checker = this.checker;\n    if (checker.autofalse && checker.autofalse(ann)) {\n      return false;\n    }\n\n    let value = checker.value(ann);\n    if (Array.isArray(value)) {\n      value = value.map(normalize);\n    } else {\n      value = normalize(value);\n    }\n    return checker.match(this.term, value);\n  }\n}\n\n/**\n * Filter that combines other filters using AND or OR combinators.\n *\n * @implements {Filter}\n */\nclass BinaryOpFilter {\n  /**\n   * @param {'and'|'or'} op - Binary operator\n   * @param {Filter[]} filters - Array of filters to test against\n   */\n  constructor(op, filters) {\n    this.operator = op;\n    this.filters = filters;\n  }\n\n  matches(ann) {\n    if (this.operator === 'and') {\n      return this.filters.every(filter => filter.matches(ann));\n    } else {\n      return this.filters.some(filter => filter.matches(ann));\n    }\n  }\n}\n\n/**\n * Functions for extracting field values from annotations and testing whether\n * they match a query term.\n *\n * [facet_name]:\n *   autofalse: a function for a preliminary false match result\n *   value: a function to extract to facet value for the annotation.\n *   match: a function to check if the extracted value matches the facet value\n *\n * @type {Object.<string,Checker>}\n */\nconst fieldMatchers = {\n  quote: {\n    autofalse: ann => (ann.references || []).length > 0,\n    value: ann => quote(ann) || '',\n    match: (term, value) => value.indexOf(term) > -1,\n  },\n  since: {\n    autofalse: ann => typeof ann.updated !== 'string',\n    value: ann => new Date(ann.updated),\n    match(term, value) {\n      const delta = (Date.now() - value) / 1000;\n      return delta <= term;\n    },\n  },\n  tag: {\n    autofalse: ann => !Array.isArray(ann.tags),\n    value: ann => ann.tags,\n    match: (term, value) => value.includes(term),\n  },\n  text: {\n    autofalse: ann => typeof ann.text !== 'string',\n    value: ann => ann.text,\n    match: (term, value) => value.indexOf(term) > -1,\n  },\n  uri: {\n    autofalse: ann => typeof ann.uri !== 'string',\n    value: ann => ann.uri,\n    match: (term, value) => value.indexOf(term) > -1,\n  },\n  user: {\n    autofalse: ann => typeof ann.user !== 'string',\n    value: ann => ann.user + ' ' + displayName(ann),\n    match: (term, value) => value.indexOf(term) > -1,\n  },\n};\n\n/**\n * Filters a set of annotations.\n *\n * @param {Annotation[]} annotations\n * @param {Object} filters - Faceted filter generated by\n * `generateFacetedFilter`.\n * @return {string[]} IDs of matching annotations.\n */\nexport default function filterAnnotations(annotations, filters) {\n  // Convert the input filter object into a filter tree, expanding \"any\"\n  // filters.\n  const fieldFilters = Object.entries(filters)\n    .filter(([, filter]) => filter.terms.length > 0)\n    .map(([field, filter]) => {\n      const terms = filter.terms.map(normalize);\n      let termFilters;\n      if (field === 'any') {\n        const anyFields = ['quote', 'text', 'tag', 'user'];\n        termFilters = terms.map(\n          term =>\n            new BinaryOpFilter(\n              'or',\n              anyFields.map(\n                field => new TermFilter(field, term, fieldMatchers[field])\n              )\n            )\n        );\n      } else {\n        termFilters = terms.map(\n          term => new TermFilter(field, term, fieldMatchers[field])\n        );\n      }\n      return new BinaryOpFilter(filter.operator, termFilters);\n    });\n\n  const rootFilter = new BinaryOpFilter('and', fieldFilters);\n\n  return annotations\n    .filter(ann => {\n      return ann.id && rootFilter.matches(ann);\n    })\n    .map(ann => ann.id);\n}\n",
    "/**\n * @typedef {import('../util/build-thread').Thread} Thread\n */\n\nexport const THREAD_DIMENSION_DEFAULTS = {\n  // When we don't have a real measurement of a thread card's height (yet)\n  // from the browser, use this as an approximate value, in pixels.\n  defaultHeight: 200,\n  // Space above the viewport in pixels which should be considered 'on-screen'\n  // when calculating the set of visible threads\n  marginAbove: 800,\n  // Same as MARGIN_ABOVE but for the space below the viewport\n  marginBelow: 800,\n};\n\n/**\n * Calculate the set of `ThreadCard`s that should be rendered by\n * estimating which of the threads are within or near the viewport.\n *\n * @param {Thread[]} threads - List of threads in the order they appear\n * @param {Object} threadHeights - Map of thread ID to measured height\n * @param {number} scrollPos - Vertical scroll offset of scrollable container\n * @param {number} windowHeight -\n *   Height of the visible area of the scrollable container.\n * @param {Object} options - Dimensional overrides (in px) for defaults\n */\nexport function calculateVisibleThreads(\n  threads,\n  threadHeights,\n  scrollPos,\n  windowHeight,\n  options = THREAD_DIMENSION_DEFAULTS\n) {\n  const { defaultHeight, marginAbove, marginBelow } = options;\n\n  const visibleThreads = [];\n\n  // Total height used up by the top-level thread cards\n  let totalHeight = 0;\n  // Estimated height, in px, of the thread cards above and below the viewport\n  let offscreenUpperHeight = 0;\n  let offscreenLowerHeight = 0;\n\n  threads.forEach(thread => {\n    const threadHeight = threadHeights[thread.id] || defaultHeight;\n\n    const threadIsAboveViewport =\n      totalHeight + threadHeight < scrollPos - marginAbove;\n    const threadIsVisible =\n      totalHeight < scrollPos + windowHeight + marginBelow;\n\n    if (threadIsAboveViewport) {\n      offscreenUpperHeight += threadHeight;\n    } else if (threadIsVisible) {\n      visibleThreads.push(thread);\n    } else {\n      // thread is below visible viewport\n      offscreenLowerHeight += threadHeight;\n    }\n    totalHeight += threadHeight;\n  });\n\n  return {\n    visibleThreads,\n    offscreenUpperHeight,\n    offscreenLowerHeight,\n  };\n}\n",
    "import shallowEqual from 'shallowequal';\n\n/**\n * Watch for changes of computed values.\n *\n * This utility is a shorthand for a common pattern for reacting to changes in\n * some data source:\n *\n * ```\n * let prevValue = getCurrentValue();\n * subscribe(() => {\n *   const newValue = getCurrentValue();\n *   if (prevValue !== newValue) {\n *     // Respond to change of value.\n *     // ...\n *\n *     // Update previous value.\n *     prevValue = new value;\n *   }\n * });\n * ```\n *\n * Where `getCurrentValue` calculates the value of interest and\n * `subscribe` registers a callback to receive change notifications for\n * whatever data source (eg. a Redux store) is used by `getCurrentValue`.\n *\n * With the `watch` utility this becomes:\n *\n * ```\n * watch(subscribe, getCurrentValue, (newValue, prevValue) => {\n *   // Respond to change of value\n * });\n * ```\n *\n * `watch` can watch a single value, if the second argument is a function,\n * or many if the second argument is an array of functions. In the latter case\n * the callback will be invoked whenever _any_ of the watched values changes.\n *\n * Values are compared using strict equality (`===`).\n *\n * @param {(callback: Function) => Function} subscribe - Function used to\n *   subscribe to notifications of _potential_ changes in the watched values.\n * @param {Function|Array<Function>} watchFns - A function or array of functions\n *   which return the current watched values\n * @param {(current: any, previous: any) => any} callback -\n *   A callback that is invoked when the watched values changed. It is passed\n *   the current and previous values respectively. If `watchFns` is an array,\n *   the `current` and `previous` arguments will be arrays of current and\n *   previous values.\n * @return {Function} - Return value of `subscribe`. Typically this is a\n *   function that removes the subscription.\n */\nexport function watch(subscribe, watchFns, callback) {\n  const isArray = Array.isArray(watchFns);\n\n  const getWatchedValues = () =>\n    isArray\n      ? /** @type {Function[]} */ (watchFns).map(fn => fn())\n      : /** @type {Function} */ (watchFns)();\n\n  let prevValues = getWatchedValues();\n  const unsubscribe = subscribe(() => {\n    const values = getWatchedValues();\n\n    const equal = isArray\n      ? shallowEqual(values, prevValues)\n      : values === prevValues;\n\n    if (equal) {\n      return;\n    }\n\n    // Save and then update `prevValues` before invoking `callback` in case\n    // `callback` triggers another update.\n    const savedPrevValues = prevValues;\n    prevValues = values;\n\n    callback(values, savedPrevValues);\n  });\n\n  return unsubscribe;\n}\n",
    "import retry from 'retry';\nimport { TinyEmitter } from 'tiny-emitter';\n\n// Status codes indicating the reason why a WebSocket connection closed.\n// See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent and\n// https://tools.ietf.org/html/rfc6455#section-7.4.\n\n// \"Normal\" closures.\nexport const CLOSE_NORMAL = 1000;\nexport const CLOSE_GOING_AWAY = 1001;\n\n// \"Abnormal\" closures.\nexport const CLOSE_ABNORMAL = 1006;\n\n// There are other possible close status codes not listed here. They are all\n// considered abnormal closures.\n\n// Minimum delay, in ms, before reconnecting after an abnormal connection close.\nconst RECONNECT_MIN_DELAY = 1000;\n\n/**\n * Socket is a minimal wrapper around WebSocket which provides:\n *\n * - Automatic reconnection in the event of an abnormal close\n * - Queuing of messages passed to send() whilst the socket is\n *   connecting\n * - Uses the standard EventEmitter API for reporting open, close, error\n *   and message events.\n */\nexport default class Socket extends TinyEmitter {\n  constructor(url) {\n    super();\n\n    const self = this;\n\n    // queue of JSON objects which have not yet been submitted\n    const messageQueue = [];\n\n    // the current WebSocket instance\n    let socket;\n\n    // a pending operation to connect a WebSocket\n    let operation;\n\n    function sendMessages() {\n      while (messageQueue.length > 0) {\n        const messageString = JSON.stringify(messageQueue.shift());\n        socket.send(messageString);\n      }\n    }\n\n    // Connect the websocket immediately. If a connection attempt is already in\n    // progress, do nothing.\n    function connect() {\n      if (operation) {\n        return;\n      }\n\n      operation = retry.operation({\n        minTimeout: RECONNECT_MIN_DELAY * 2,\n        // Don't retry forever -- fail permanently after 10 retries\n        retries: 10,\n        // Randomize retry times to minimise the thundering herd effect\n        randomize: true,\n      });\n\n      operation.attempt(function () {\n        socket = new WebSocket(url);\n        socket.onopen = function (event) {\n          onOpen();\n          self.emit('open', event);\n        };\n        socket.onclose = function (event) {\n          if (event.code === CLOSE_NORMAL || event.code === CLOSE_GOING_AWAY) {\n            self.emit('close', event);\n            return;\n          }\n          const err = new Error(\n            'WebSocket closed abnormally, code: ' + event.code\n          );\n          console.warn(err);\n          onAbnormalClose(err);\n        };\n        socket.onerror = function (event) {\n          self.emit('error', event);\n        };\n        socket.onmessage = function (event) {\n          self.emit('message', event);\n        };\n      });\n    }\n\n    // onOpen is called when a websocket connection is successfully established.\n    function onOpen() {\n      operation = null;\n      sendMessages();\n    }\n\n    // onAbnormalClose is called when a websocket connection closes abnormally.\n    // This may be the result of a failure to connect, or an abnormal close after\n    // a previous successful connection.\n    function onAbnormalClose(error) {\n      // If we're already in a reconnection loop, trigger a retry...\n      if (operation) {\n        if (!operation.retry(error)) {\n          console.error(\n            'reached max retries attempting to reconnect websocket'\n          );\n        }\n        return;\n      }\n      // ...otherwise reconnect the websocket after a short delay.\n      let delay = RECONNECT_MIN_DELAY;\n      delay += Math.floor(Math.random() * delay);\n      operation = setTimeout(function () {\n        operation = null;\n        connect();\n      }, delay);\n    }\n\n    /** Close the underlying WebSocket connection */\n    this.close = function () {\n      // nb. Always sent a status code in the `close()` call to work around\n      // a problem in the backend's ws4py library.\n      //\n      // If no status code is provided in the `close()` call, the browser will\n      // send a close frame with no payload, which is allowed by the spec.\n      // ws4py however, will respond by sending back a close frame with a 1005\n      // status code, which is not allowed by the spec. What ws4py should do in\n      // that scenario is send back a close frame with no payload itself. This\n      // invalid close frame causes browsers to report an abnormal WS\n      // termination, even though nothing really went wrong.\n      //\n      // To avoid the problem, we just explicitly send a \"closed normally\"\n      // status code here and ws4py will respond with the same status.\n      socket.close(CLOSE_NORMAL);\n    };\n\n    /**\n     * Send a JSON object via the WebSocket connection, or queue it\n     * for later delivery if not currently connected.\n     */\n    this.send = function (message) {\n      messageQueue.push(message);\n      if (this.isConnected()) {\n        sendMessages();\n      }\n    };\n\n    /** Returns true if the WebSocket is currently connected. */\n    this.isConnected = function () {\n      return socket.readyState === WebSocket.OPEN;\n    };\n\n    connect();\n  }\n}\n"
  ],
  "sourceRoot": ""
}